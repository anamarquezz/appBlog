{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommandModuleError = exports.CommandModule = exports.CommandScope = void 0;\n\nconst core_1 = require(\"@angular-devkit/core\");\n\nconst fs_1 = require(\"fs\");\n\nconst path = __importStar(require(\"path\"));\n\nconst helpers_1 = require(\"yargs/helpers\");\n\nconst analytics_1 = require(\"../analytics/analytics\");\n\nconst completion_1 = require(\"../utilities/completion\");\n\nconst memoize_1 = require(\"../utilities/memoize\");\n\nvar CommandScope;\n\n(function (CommandScope) {\n  /** Command can only run inside an Angular workspace. */\n  CommandScope[CommandScope[\"In\"] = 0] = \"In\";\n  /** Command can only run outside an Angular workspace. */\n\n  CommandScope[CommandScope[\"Out\"] = 1] = \"Out\";\n  /** Command can run inside and outside an Angular workspace. */\n\n  CommandScope[CommandScope[\"Both\"] = 2] = \"Both\";\n})(CommandScope = exports.CommandScope || (exports.CommandScope = {}));\n\nclass CommandModule {\n  constructor(context) {\n    this.context = context;\n    this.shouldReportAnalytics = true;\n    this.scope = CommandScope.Both;\n    this.optionsWithAnalytics = new Map();\n  }\n  /**\n   * Description object which contains the long command descroption.\n   * This is used to generate JSON help wich is used in AIO.\n   *\n   * `false` will result in a hidden command.\n   */\n\n\n  get fullDescribe() {\n    return this.describe === false ? false : {\n      describe: this.describe,\n      ...(this.longDescriptionPath ? {\n        longDescriptionRelativePath: path.relative(path.join(__dirname, '../../../../'), this.longDescriptionPath).replace(/\\\\/g, path.posix.sep),\n        longDescription: (0, fs_1.readFileSync)(this.longDescriptionPath, 'utf8').replace(/\\r\\n/g, '\\n')\n      } : {})\n    };\n  }\n\n  get commandName() {\n    return this.command.split(' ', 1)[0];\n  }\n\n  handler(args) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        _,\n        $0,\n        ...options\n      } = args; // Camelize options as yargs will return the object in kebab-case when camel casing is disabled.\n\n      const camelCasedOptions = {};\n\n      for (const [key, value] of Object.entries(options)) {\n        camelCasedOptions[helpers_1.Parser.camelCase(key)] = value;\n      } // Set up autocompletion if appropriate.\n\n\n      const autocompletionExitCode = yield (0, completion_1.considerSettingUpAutocompletion)(_this.commandName, _this.context.logger);\n\n      if (autocompletionExitCode !== undefined) {\n        process.exitCode = autocompletionExitCode;\n        return;\n      } // Gather and report analytics.\n\n\n      const analytics = yield _this.getAnalytics();\n      let stopPeriodicFlushes;\n\n      if (_this.shouldReportAnalytics) {\n        yield _this.reportAnalytics(camelCasedOptions);\n        stopPeriodicFlushes = _this.periodicAnalyticsFlush(analytics);\n      }\n\n      let exitCode;\n\n      try {\n        // Run and time command.\n        const startTime = Date.now();\n        exitCode = yield _this.run(camelCasedOptions);\n        const endTime = Date.now();\n        analytics.timing(_this.commandName, 'duration', endTime - startTime);\n      } catch (e) {\n        if (e instanceof core_1.schema.SchemaValidationException) {\n          _this.context.logger.fatal(`Error: ${e.message}`);\n\n          exitCode = 1;\n        } else {\n          throw e;\n        }\n      } finally {\n        yield stopPeriodicFlushes === null || stopPeriodicFlushes === void 0 ? void 0 : stopPeriodicFlushes();\n\n        if (typeof exitCode === 'number' && exitCode > 0) {\n          process.exitCode = exitCode;\n        }\n      }\n    })();\n  }\n\n  reportAnalytics(options, paths = [], dimensions = [], title) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      for (const [name, ua] of _this2.optionsWithAnalytics) {\n        const value = options[name];\n\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n          dimensions[ua] = value;\n        }\n      }\n\n      const analytics = yield _this2.getAnalytics();\n      analytics.pageview('/command/' + [_this2.commandName, ...paths].join('/'), {\n        dimensions,\n        metrics: [],\n        title\n      });\n    })();\n  }\n\n  getAnalytics() {\n    return (0, analytics_1.createAnalytics)(!!this.context.workspace, // Don't prompt for `ng update` and `ng analytics` commands.\n    ['update', 'analytics'].includes(this.commandName));\n  }\n  /**\n   * Adds schema options to a command also this keeps track of options that are required for analytics.\n   * **Note:** This method should be called from the command bundler method.\n   */\n\n\n  addSchemaOptionsToCommand(localYargs, options) {\n    const booleanOptionsWithNoPrefix = new Set();\n\n    for (const option of options) {\n      const {\n        default: defaultVal,\n        positional,\n        deprecated,\n        description,\n        alias,\n        userAnalytics,\n        type,\n        hidden,\n        name,\n        choices\n      } = option;\n      const sharedOptions = {\n        alias,\n        hidden,\n        description,\n        deprecated,\n        choices,\n        // This should only be done when `--help` is used otherwise default will override options set in angular.json.\n        ...(this.context.args.options.help ? {\n          default: defaultVal\n        } : {})\n      };\n      let dashedName = core_1.strings.dasherize(name); // Handle options which have been defined in the schema with `no` prefix.\n\n      if (type === 'boolean' && dashedName.startsWith('no-')) {\n        dashedName = dashedName.slice(3);\n        booleanOptionsWithNoPrefix.add(dashedName);\n      }\n\n      if (positional === undefined) {\n        localYargs = localYargs.option(dashedName, {\n          type,\n          ...sharedOptions\n        });\n      } else {\n        localYargs = localYargs.positional(dashedName, {\n          type: type === 'array' || type === 'count' ? 'string' : type,\n          ...sharedOptions\n        });\n      } // Record option of analytics.\n\n\n      if (userAnalytics !== undefined) {\n        this.optionsWithAnalytics.set(name, userAnalytics);\n      }\n    } // Handle options which have been defined in the schema with `no` prefix.\n\n\n    if (booleanOptionsWithNoPrefix.size) {\n      localYargs.middleware(options => {\n        for (const key of booleanOptionsWithNoPrefix) {\n          if (key in options) {\n            options[`no-${key}`] = !options[key];\n            delete options[key];\n          }\n        }\n      }, false);\n    }\n\n    return localYargs;\n  }\n\n  getWorkspaceOrThrow() {\n    const {\n      workspace\n    } = this.context;\n\n    if (!workspace) {\n      throw new CommandModuleError('A workspace is required for this command.');\n    }\n\n    return workspace;\n  }\n  /**\n   * Flush on an interval (if the event loop is waiting).\n   *\n   * @returns a method that when called will terminate the periodic\n   * flush and call flush one last time.\n   */\n\n\n  periodicAnalyticsFlush(analytics) {\n    let analyticsFlushPromise = Promise.resolve();\n    const analyticsFlushInterval = setInterval(() => {\n      analyticsFlushPromise = analyticsFlushPromise.then(() => analytics.flush());\n    }, 2000);\n    return () => {\n      clearInterval(analyticsFlushInterval); // Flush one last time.\n\n      return analyticsFlushPromise.then(() => analytics.flush());\n    };\n  }\n\n}\n\n__decorate([memoize_1.memoize], CommandModule.prototype, \"getAnalytics\", null);\n\nexports.CommandModule = CommandModule;\n/**\n * Creates an known command module error.\n * This is used so during executation we can filter between known validation error and real non handled errors.\n */\n\nclass CommandModuleError extends Error {}\n\nexports.CommandModuleError = CommandModuleError;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__decorate","decorators","target","key","c","arguments","length","r","d","Reflect","decorate","i","__importStar","mod","result","prototype","hasOwnProperty","call","exports","CommandModuleError","CommandModule","CommandScope","core_1","require","fs_1","path","helpers_1","analytics_1","completion_1","memoize_1","constructor","context","shouldReportAnalytics","scope","Both","optionsWithAnalytics","Map","fullDescribe","describe","longDescriptionPath","longDescriptionRelativePath","relative","join","__dirname","replace","posix","sep","longDescription","readFileSync","commandName","command","split","handler","args","_","$0","options","camelCasedOptions","entries","Parser","camelCase","autocompletionExitCode","considerSettingUpAutocompletion","logger","process","exitCode","analytics","getAnalytics","stopPeriodicFlushes","reportAnalytics","periodicAnalyticsFlush","startTime","Date","now","run","endTime","timing","e","schema","SchemaValidationException","fatal","message","paths","dimensions","title","name","ua","pageview","metrics","createAnalytics","workspace","includes","addSchemaOptionsToCommand","localYargs","booleanOptionsWithNoPrefix","Set","option","default","defaultVal","positional","deprecated","description","alias","userAnalytics","type","hidden","choices","sharedOptions","help","dashedName","strings","dasherize","startsWith","slice","add","set","size","middleware","getWorkspaceOrThrow","analyticsFlushPromise","Promise","resolve","analyticsFlushInterval","setInterval","then","flush","clearInterval","memoize","Error"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular/cli/src/command-builder/command-module.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommandModuleError = exports.CommandModule = exports.CommandScope = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst fs_1 = require(\"fs\");\nconst path = __importStar(require(\"path\"));\nconst helpers_1 = require(\"yargs/helpers\");\nconst analytics_1 = require(\"../analytics/analytics\");\nconst completion_1 = require(\"../utilities/completion\");\nconst memoize_1 = require(\"../utilities/memoize\");\nvar CommandScope;\n(function (CommandScope) {\n    /** Command can only run inside an Angular workspace. */\n    CommandScope[CommandScope[\"In\"] = 0] = \"In\";\n    /** Command can only run outside an Angular workspace. */\n    CommandScope[CommandScope[\"Out\"] = 1] = \"Out\";\n    /** Command can run inside and outside an Angular workspace. */\n    CommandScope[CommandScope[\"Both\"] = 2] = \"Both\";\n})(CommandScope = exports.CommandScope || (exports.CommandScope = {}));\nclass CommandModule {\n    constructor(context) {\n        this.context = context;\n        this.shouldReportAnalytics = true;\n        this.scope = CommandScope.Both;\n        this.optionsWithAnalytics = new Map();\n    }\n    /**\n     * Description object which contains the long command descroption.\n     * This is used to generate JSON help wich is used in AIO.\n     *\n     * `false` will result in a hidden command.\n     */\n    get fullDescribe() {\n        return this.describe === false\n            ? false\n            : {\n                describe: this.describe,\n                ...(this.longDescriptionPath\n                    ? {\n                        longDescriptionRelativePath: path\n                            .relative(path.join(__dirname, '../../../../'), this.longDescriptionPath)\n                            .replace(/\\\\/g, path.posix.sep),\n                        longDescription: (0, fs_1.readFileSync)(this.longDescriptionPath, 'utf8').replace(/\\r\\n/g, '\\n'),\n                    }\n                    : {}),\n            };\n    }\n    get commandName() {\n        return this.command.split(' ', 1)[0];\n    }\n    async handler(args) {\n        const { _, $0, ...options } = args;\n        // Camelize options as yargs will return the object in kebab-case when camel casing is disabled.\n        const camelCasedOptions = {};\n        for (const [key, value] of Object.entries(options)) {\n            camelCasedOptions[helpers_1.Parser.camelCase(key)] = value;\n        }\n        // Set up autocompletion if appropriate.\n        const autocompletionExitCode = await (0, completion_1.considerSettingUpAutocompletion)(this.commandName, this.context.logger);\n        if (autocompletionExitCode !== undefined) {\n            process.exitCode = autocompletionExitCode;\n            return;\n        }\n        // Gather and report analytics.\n        const analytics = await this.getAnalytics();\n        let stopPeriodicFlushes;\n        if (this.shouldReportAnalytics) {\n            await this.reportAnalytics(camelCasedOptions);\n            stopPeriodicFlushes = this.periodicAnalyticsFlush(analytics);\n        }\n        let exitCode;\n        try {\n            // Run and time command.\n            const startTime = Date.now();\n            exitCode = await this.run(camelCasedOptions);\n            const endTime = Date.now();\n            analytics.timing(this.commandName, 'duration', endTime - startTime);\n        }\n        catch (e) {\n            if (e instanceof core_1.schema.SchemaValidationException) {\n                this.context.logger.fatal(`Error: ${e.message}`);\n                exitCode = 1;\n            }\n            else {\n                throw e;\n            }\n        }\n        finally {\n            await (stopPeriodicFlushes === null || stopPeriodicFlushes === void 0 ? void 0 : stopPeriodicFlushes());\n            if (typeof exitCode === 'number' && exitCode > 0) {\n                process.exitCode = exitCode;\n            }\n        }\n    }\n    async reportAnalytics(options, paths = [], dimensions = [], title) {\n        for (const [name, ua] of this.optionsWithAnalytics) {\n            const value = options[name];\n            if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n                dimensions[ua] = value;\n            }\n        }\n        const analytics = await this.getAnalytics();\n        analytics.pageview('/command/' + [this.commandName, ...paths].join('/'), {\n            dimensions,\n            metrics: [],\n            title,\n        });\n    }\n    getAnalytics() {\n        return (0, analytics_1.createAnalytics)(!!this.context.workspace, \n        // Don't prompt for `ng update` and `ng analytics` commands.\n        ['update', 'analytics'].includes(this.commandName));\n    }\n    /**\n     * Adds schema options to a command also this keeps track of options that are required for analytics.\n     * **Note:** This method should be called from the command bundler method.\n     */\n    addSchemaOptionsToCommand(localYargs, options) {\n        const booleanOptionsWithNoPrefix = new Set();\n        for (const option of options) {\n            const { default: defaultVal, positional, deprecated, description, alias, userAnalytics, type, hidden, name, choices, } = option;\n            const sharedOptions = {\n                alias,\n                hidden,\n                description,\n                deprecated,\n                choices,\n                // This should only be done when `--help` is used otherwise default will override options set in angular.json.\n                ...(this.context.args.options.help ? { default: defaultVal } : {}),\n            };\n            let dashedName = core_1.strings.dasherize(name);\n            // Handle options which have been defined in the schema with `no` prefix.\n            if (type === 'boolean' && dashedName.startsWith('no-')) {\n                dashedName = dashedName.slice(3);\n                booleanOptionsWithNoPrefix.add(dashedName);\n            }\n            if (positional === undefined) {\n                localYargs = localYargs.option(dashedName, {\n                    type,\n                    ...sharedOptions,\n                });\n            }\n            else {\n                localYargs = localYargs.positional(dashedName, {\n                    type: type === 'array' || type === 'count' ? 'string' : type,\n                    ...sharedOptions,\n                });\n            }\n            // Record option of analytics.\n            if (userAnalytics !== undefined) {\n                this.optionsWithAnalytics.set(name, userAnalytics);\n            }\n        }\n        // Handle options which have been defined in the schema with `no` prefix.\n        if (booleanOptionsWithNoPrefix.size) {\n            localYargs.middleware((options) => {\n                for (const key of booleanOptionsWithNoPrefix) {\n                    if (key in options) {\n                        options[`no-${key}`] = !options[key];\n                        delete options[key];\n                    }\n                }\n            }, false);\n        }\n        return localYargs;\n    }\n    getWorkspaceOrThrow() {\n        const { workspace } = this.context;\n        if (!workspace) {\n            throw new CommandModuleError('A workspace is required for this command.');\n        }\n        return workspace;\n    }\n    /**\n     * Flush on an interval (if the event loop is waiting).\n     *\n     * @returns a method that when called will terminate the periodic\n     * flush and call flush one last time.\n     */\n    periodicAnalyticsFlush(analytics) {\n        let analyticsFlushPromise = Promise.resolve();\n        const analyticsFlushInterval = setInterval(() => {\n            analyticsFlushPromise = analyticsFlushPromise.then(() => analytics.flush());\n        }, 2000);\n        return () => {\n            clearInterval(analyticsFlushInterval);\n            // Flush one last time.\n            return analyticsFlushPromise.then(() => analytics.flush());\n        };\n    }\n}\n__decorate([\n    memoize_1.memoize\n], CommandModule.prototype, \"getAnalytics\", null);\nexports.CommandModule = CommandModule;\n/**\n * Creates an known command module error.\n * This is used so during executation we can filter between known validation error and real non handled errors.\n */\nclass CommandModuleError extends Error {\n}\nexports.CommandModuleError = CommandModuleError;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}