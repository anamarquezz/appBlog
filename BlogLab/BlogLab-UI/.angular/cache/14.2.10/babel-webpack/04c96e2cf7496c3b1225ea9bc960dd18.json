{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.trimNewlines = exports.stripIndents = exports.stripIndent = exports.indentBy = exports.oneLine = void 0; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nfunction oneLine(strings, ...values) {\n  const endResult = String.raw(strings, ...values);\n  return endResult.replace(/(?:\\r?\\n(?:\\s*))+/gm, ' ').trim();\n}\n\nexports.oneLine = oneLine;\n\nfunction indentBy(indentations) {\n  let i = '';\n\n  while (indentations--) {\n    i += ' ';\n  }\n\n  return (strings, ...values) => {\n    return i + stripIndent(strings, ...values).replace(/\\n/g, '\\n' + i);\n  };\n}\n\nexports.indentBy = indentBy; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nfunction stripIndent(strings, ...values) {\n  const endResult = String.raw(strings, ...values); // remove the shortest leading indentation from each line\n\n  const match = endResult.match(/^[ \\t]*(?=\\S)/gm); // return early if there's nothing to strip\n\n  if (match === null) {\n    return endResult;\n  }\n\n  const indent = Math.min(...match.map(el => el.length));\n  const regexp = new RegExp('^[ \\\\t]{' + indent + '}', 'gm');\n  return (indent > 0 ? endResult.replace(regexp, '') : endResult).trim();\n}\n\nexports.stripIndent = stripIndent; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nfunction stripIndents(strings, ...values) {\n  return String.raw(strings, ...values).split('\\n').map(line => line.trim()).join('\\n').trim();\n}\n\nexports.stripIndents = stripIndents; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nfunction trimNewlines(strings, ...values) {\n  const endResult = String.raw(strings, ...values);\n  return endResult // Remove the newline at the start.\n  .replace(/^(?:\\r?\\n)+/, '') // Remove the newline at the end and following whitespace.\n  .replace(/(?:\\r?\\n(?:\\s*))$/, '');\n}\n\nexports.trimNewlines = trimNewlines;","map":{"version":3,"names":["Object","defineProperty","exports","value","trimNewlines","stripIndents","stripIndent","indentBy","oneLine","strings","values","endResult","String","raw","replace","trim","indentations","i","match","indent","Math","min","map","el","length","regexp","RegExp","split","line","join"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/core/src/utils/literals.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.trimNewlines = exports.stripIndents = exports.stripIndent = exports.indentBy = exports.oneLine = void 0;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction oneLine(strings, ...values) {\n    const endResult = String.raw(strings, ...values);\n    return endResult.replace(/(?:\\r?\\n(?:\\s*))+/gm, ' ').trim();\n}\nexports.oneLine = oneLine;\nfunction indentBy(indentations) {\n    let i = '';\n    while (indentations--) {\n        i += ' ';\n    }\n    return (strings, ...values) => {\n        return i + stripIndent(strings, ...values).replace(/\\n/g, '\\n' + i);\n    };\n}\nexports.indentBy = indentBy;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction stripIndent(strings, ...values) {\n    const endResult = String.raw(strings, ...values);\n    // remove the shortest leading indentation from each line\n    const match = endResult.match(/^[ \\t]*(?=\\S)/gm);\n    // return early if there's nothing to strip\n    if (match === null) {\n        return endResult;\n    }\n    const indent = Math.min(...match.map((el) => el.length));\n    const regexp = new RegExp('^[ \\\\t]{' + indent + '}', 'gm');\n    return (indent > 0 ? endResult.replace(regexp, '') : endResult).trim();\n}\nexports.stripIndent = stripIndent;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction stripIndents(strings, ...values) {\n    return String.raw(strings, ...values)\n        .split('\\n')\n        .map((line) => line.trim())\n        .join('\\n')\n        .trim();\n}\nexports.stripIndents = stripIndents;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction trimNewlines(strings, ...values) {\n    const endResult = String.raw(strings, ...values);\n    return (endResult\n        // Remove the newline at the start.\n        .replace(/^(?:\\r?\\n)+/, '')\n        // Remove the newline at the end and following whitespace.\n        .replace(/(?:\\r?\\n(?:\\s*))$/, ''));\n}\nexports.trimNewlines = trimNewlines;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,YAAR,GAAuBH,OAAO,CAACI,WAAR,GAAsBJ,OAAO,CAACK,QAAR,GAAmBL,OAAO,CAACM,OAAR,GAAkB,KAAK,CAA9G,C,CACA;;AACA,SAASA,OAAT,CAAiBC,OAAjB,EAA0B,GAAGC,MAA7B,EAAqC;EACjC,MAAMC,SAAS,GAAGC,MAAM,CAACC,GAAP,CAAWJ,OAAX,EAAoB,GAAGC,MAAvB,CAAlB;EACA,OAAOC,SAAS,CAACG,OAAV,CAAkB,qBAAlB,EAAyC,GAAzC,EAA8CC,IAA9C,EAAP;AACH;;AACDb,OAAO,CAACM,OAAR,GAAkBA,OAAlB;;AACA,SAASD,QAAT,CAAkBS,YAAlB,EAAgC;EAC5B,IAAIC,CAAC,GAAG,EAAR;;EACA,OAAOD,YAAY,EAAnB,EAAuB;IACnBC,CAAC,IAAI,GAAL;EACH;;EACD,OAAO,CAACR,OAAD,EAAU,GAAGC,MAAb,KAAwB;IAC3B,OAAOO,CAAC,GAAGX,WAAW,CAACG,OAAD,EAAU,GAAGC,MAAb,CAAX,CAAgCI,OAAhC,CAAwC,KAAxC,EAA+C,OAAOG,CAAtD,CAAX;EACH,CAFD;AAGH;;AACDf,OAAO,CAACK,QAAR,GAAmBA,QAAnB,C,CACA;;AACA,SAASD,WAAT,CAAqBG,OAArB,EAA8B,GAAGC,MAAjC,EAAyC;EACrC,MAAMC,SAAS,GAAGC,MAAM,CAACC,GAAP,CAAWJ,OAAX,EAAoB,GAAGC,MAAvB,CAAlB,CADqC,CAErC;;EACA,MAAMQ,KAAK,GAAGP,SAAS,CAACO,KAAV,CAAgB,iBAAhB,CAAd,CAHqC,CAIrC;;EACA,IAAIA,KAAK,KAAK,IAAd,EAAoB;IAChB,OAAOP,SAAP;EACH;;EACD,MAAMQ,MAAM,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGH,KAAK,CAACI,GAAN,CAAWC,EAAD,IAAQA,EAAE,CAACC,MAArB,CAAZ,CAAf;EACA,MAAMC,MAAM,GAAG,IAAIC,MAAJ,CAAW,aAAaP,MAAb,GAAsB,GAAjC,EAAsC,IAAtC,CAAf;EACA,OAAO,CAACA,MAAM,GAAG,CAAT,GAAaR,SAAS,CAACG,OAAV,CAAkBW,MAAlB,EAA0B,EAA1B,CAAb,GAA6Cd,SAA9C,EAAyDI,IAAzD,EAAP;AACH;;AACDb,OAAO,CAACI,WAAR,GAAsBA,WAAtB,C,CACA;;AACA,SAASD,YAAT,CAAsBI,OAAtB,EAA+B,GAAGC,MAAlC,EAA0C;EACtC,OAAOE,MAAM,CAACC,GAAP,CAAWJ,OAAX,EAAoB,GAAGC,MAAvB,EACFiB,KADE,CACI,IADJ,EAEFL,GAFE,CAEGM,IAAD,IAAUA,IAAI,CAACb,IAAL,EAFZ,EAGFc,IAHE,CAGG,IAHH,EAIFd,IAJE,EAAP;AAKH;;AACDb,OAAO,CAACG,YAAR,GAAuBA,YAAvB,C,CACA;;AACA,SAASD,YAAT,CAAsBK,OAAtB,EAA+B,GAAGC,MAAlC,EAA0C;EACtC,MAAMC,SAAS,GAAGC,MAAM,CAACC,GAAP,CAAWJ,OAAX,EAAoB,GAAGC,MAAvB,CAAlB;EACA,OAAQC,SAAS,CACb;EADa,CAEZG,OAFG,CAEK,aAFL,EAEoB,EAFpB,EAGJ;EAHI,CAIHA,OAJG,CAIK,mBAJL,EAI0B,EAJ1B,CAAR;AAKH;;AACDZ,OAAO,CAACE,YAAR,GAAuBA,YAAvB"},"metadata":{},"sourceType":"script"}