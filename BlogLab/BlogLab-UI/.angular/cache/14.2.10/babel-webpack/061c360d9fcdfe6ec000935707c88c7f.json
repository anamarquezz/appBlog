{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NullTree = exports.NullTreeDirEntry = exports.CannotCreateFileException = void 0;\n\nconst core_1 = require(\"@angular-devkit/core\");\n\nconst exception_1 = require(\"../exception/exception\");\n\nconst interface_1 = require(\"./interface\");\n\nconst recorder_1 = require(\"./recorder\");\n\nclass CannotCreateFileException extends core_1.BaseException {\n  constructor(path) {\n    super(`Cannot create file \"${path}\".`);\n  }\n\n}\n\nexports.CannotCreateFileException = CannotCreateFileException;\n\nclass NullTreeDirEntry {\n  constructor(path) {\n    this.path = path;\n    this.subdirs = [];\n    this.subfiles = [];\n  }\n\n  get parent() {\n    return this.path == '/' ? null : new NullTreeDirEntry((0, core_1.dirname)(this.path));\n  }\n\n  dir(name) {\n    return new NullTreeDirEntry((0, core_1.join)(this.path, name));\n  }\n\n  file(_name) {\n    return null;\n  }\n\n  visit() {}\n\n}\n\nexports.NullTreeDirEntry = NullTreeDirEntry;\n\nclass NullTree {\n  constructor() {\n    this.root = new NullTreeDirEntry((0, core_1.normalize)('/'));\n  }\n\n  [interface_1.TreeSymbol]() {\n    return this;\n  }\n\n  branch() {\n    return new NullTree();\n  }\n\n  merge(_other, _strategy) {} // Simple readonly file system operations.\n\n\n  exists(_path) {\n    return false;\n  }\n\n  read(_path) {\n    return null;\n  }\n\n  readText(path) {\n    throw new exception_1.FileDoesNotExistException(path);\n  }\n\n  readJson(path) {\n    throw new exception_1.FileDoesNotExistException(path);\n  }\n\n  get(_path) {\n    return null;\n  }\n\n  getDir(path) {\n    return new NullTreeDirEntry((0, core_1.normalize)('/' + path));\n  }\n\n  visit() {} // Change content of host files.\n\n\n  beginUpdate(path) {\n    throw new exception_1.FileDoesNotExistException(path);\n  }\n\n  commitUpdate(record) {\n    throw new exception_1.FileDoesNotExistException(record instanceof recorder_1.UpdateRecorderBase ? record.path : '<unknown>');\n  } // Change structure of the host.\n\n\n  copy(path, _to) {\n    throw new exception_1.FileDoesNotExistException(path);\n  }\n\n  delete(path) {\n    throw new exception_1.FileDoesNotExistException(path);\n  }\n\n  create(path, _content) {\n    throw new CannotCreateFileException(path);\n  }\n\n  rename(path, _to) {\n    throw new exception_1.FileDoesNotExistException(path);\n  }\n\n  overwrite(path, _content) {\n    throw new exception_1.FileDoesNotExistException(path);\n  }\n\n  apply(_action, _strategy) {}\n\n  get actions() {\n    return [];\n  }\n\n}\n\nexports.NullTree = NullTree;","map":{"version":3,"names":["Object","defineProperty","exports","value","NullTree","NullTreeDirEntry","CannotCreateFileException","core_1","require","exception_1","interface_1","recorder_1","BaseException","constructor","path","subdirs","subfiles","parent","dirname","dir","name","join","file","_name","visit","root","normalize","TreeSymbol","branch","merge","_other","_strategy","exists","_path","read","readText","FileDoesNotExistException","readJson","get","getDir","beginUpdate","commitUpdate","record","UpdateRecorderBase","copy","_to","delete","create","_content","rename","overwrite","apply","_action","actions"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/schematics/src/tree/null.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NullTree = exports.NullTreeDirEntry = exports.CannotCreateFileException = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst exception_1 = require(\"../exception/exception\");\nconst interface_1 = require(\"./interface\");\nconst recorder_1 = require(\"./recorder\");\nclass CannotCreateFileException extends core_1.BaseException {\n    constructor(path) {\n        super(`Cannot create file \"${path}\".`);\n    }\n}\nexports.CannotCreateFileException = CannotCreateFileException;\nclass NullTreeDirEntry {\n    constructor(path) {\n        this.path = path;\n        this.subdirs = [];\n        this.subfiles = [];\n    }\n    get parent() {\n        return this.path == '/' ? null : new NullTreeDirEntry((0, core_1.dirname)(this.path));\n    }\n    dir(name) {\n        return new NullTreeDirEntry((0, core_1.join)(this.path, name));\n    }\n    file(_name) {\n        return null;\n    }\n    visit() { }\n}\nexports.NullTreeDirEntry = NullTreeDirEntry;\nclass NullTree {\n    constructor() {\n        this.root = new NullTreeDirEntry((0, core_1.normalize)('/'));\n    }\n    [interface_1.TreeSymbol]() {\n        return this;\n    }\n    branch() {\n        return new NullTree();\n    }\n    merge(_other, _strategy) { }\n    // Simple readonly file system operations.\n    exists(_path) {\n        return false;\n    }\n    read(_path) {\n        return null;\n    }\n    readText(path) {\n        throw new exception_1.FileDoesNotExistException(path);\n    }\n    readJson(path) {\n        throw new exception_1.FileDoesNotExistException(path);\n    }\n    get(_path) {\n        return null;\n    }\n    getDir(path) {\n        return new NullTreeDirEntry((0, core_1.normalize)('/' + path));\n    }\n    visit() { }\n    // Change content of host files.\n    beginUpdate(path) {\n        throw new exception_1.FileDoesNotExistException(path);\n    }\n    commitUpdate(record) {\n        throw new exception_1.FileDoesNotExistException(record instanceof recorder_1.UpdateRecorderBase ? record.path : '<unknown>');\n    }\n    // Change structure of the host.\n    copy(path, _to) {\n        throw new exception_1.FileDoesNotExistException(path);\n    }\n    delete(path) {\n        throw new exception_1.FileDoesNotExistException(path);\n    }\n    create(path, _content) {\n        throw new CannotCreateFileException(path);\n    }\n    rename(path, _to) {\n        throw new exception_1.FileDoesNotExistException(path);\n    }\n    overwrite(path, _content) {\n        throw new exception_1.FileDoesNotExistException(path);\n    }\n    apply(_action, _strategy) { }\n    get actions() {\n        return [];\n    }\n}\nexports.NullTree = NullTree;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}