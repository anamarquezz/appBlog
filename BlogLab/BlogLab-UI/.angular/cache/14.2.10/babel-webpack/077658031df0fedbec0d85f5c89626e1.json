{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartiallyOrderedSet = exports.CircularDependencyFoundException = exports.DependencyNotFoundException = void 0;\n\nconst exception_1 = require(\"../exception\");\n\nclass DependencyNotFoundException extends exception_1.BaseException {\n  constructor() {\n    super('One of the dependencies is not part of the set.');\n  }\n\n}\n\nexports.DependencyNotFoundException = DependencyNotFoundException;\n\nclass CircularDependencyFoundException extends exception_1.BaseException {\n  constructor() {\n    super('Circular dependencies found.');\n  }\n\n}\n\nexports.CircularDependencyFoundException = CircularDependencyFoundException;\n\nclass PartiallyOrderedSet {\n  constructor() {\n    this._items = new Map();\n  }\n\n  _checkCircularDependencies(item, deps) {\n    if (deps.has(item)) {\n      throw new CircularDependencyFoundException();\n    }\n\n    deps.forEach(dep => this._checkCircularDependencies(item, this._items.get(dep) || new Set()));\n  }\n\n  clear() {\n    this._items.clear();\n  }\n\n  has(item) {\n    return this._items.has(item);\n  }\n\n  get size() {\n    return this._items.size;\n  }\n\n  forEach(callbackfn, thisArg) {\n    for (const x of this) {\n      callbackfn.call(thisArg, x, x, this);\n    }\n  }\n  /**\n   * Returns an iterable of [v,v] pairs for every value `v` in the set.\n   */\n\n\n  *entries() {\n    for (const item of this) {\n      yield [item, item];\n    }\n  }\n  /**\n   * Despite its name, returns an iterable of the values in the set,\n   */\n\n\n  keys() {\n    return this.values();\n  }\n  /**\n   * Returns an iterable of values in the set.\n   */\n\n\n  values() {\n    return this[Symbol.iterator]();\n  }\n\n  add(item, deps = new Set()) {\n    if (Array.isArray(deps)) {\n      deps = new Set(deps);\n    } // Verify item is not already in the set.\n\n\n    if (this._items.has(item)) {\n      const itemDeps = this._items.get(item) || new Set(); // If the dependency list is equal, just return, otherwise remove and keep going.\n\n      let equal = true;\n\n      for (const dep of deps) {\n        if (!itemDeps.has(dep)) {\n          equal = false;\n          break;\n        }\n      }\n\n      if (equal) {\n        for (const dep of itemDeps) {\n          if (!deps.has(dep)) {\n            equal = false;\n            break;\n          }\n        }\n      }\n\n      if (equal) {\n        return this;\n      } else {\n        this._items.delete(item);\n      }\n    } // Verify all dependencies are part of the Set.\n\n\n    for (const dep of deps) {\n      if (!this._items.has(dep)) {\n        throw new DependencyNotFoundException();\n      }\n    } // Verify there's no dependency cycle.\n\n\n    this._checkCircularDependencies(item, deps);\n\n    this._items.set(item, new Set(deps));\n\n    return this;\n  }\n\n  delete(item) {\n    if (!this._items.has(item)) {\n      return false;\n    } // Remove it from all dependencies if force == true.\n\n\n    this._items.forEach(value => value.delete(item));\n\n    return this._items.delete(item);\n  }\n\n  *[Symbol.iterator]() {\n    const copy = new Map(this._items);\n\n    for (const [key, value] of copy.entries()) {\n      copy.set(key, new Set(value));\n    }\n\n    while (copy.size > 0) {\n      const run = []; // Take the first item without dependencies.\n\n      for (const [item, deps] of copy.entries()) {\n        if (deps.size == 0) {\n          run.push(item);\n        }\n      }\n\n      for (const item of run) {\n        copy.forEach(s => s.delete(item));\n        copy.delete(item);\n        yield item;\n      }\n\n      if (run.length == 0) {\n        // uh oh...\n        throw new CircularDependencyFoundException();\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Set';\n  }\n\n}\n\nexports.PartiallyOrderedSet = PartiallyOrderedSet;","map":{"version":3,"names":["Object","defineProperty","exports","value","PartiallyOrderedSet","CircularDependencyFoundException","DependencyNotFoundException","exception_1","require","BaseException","constructor","_items","Map","_checkCircularDependencies","item","deps","has","forEach","dep","get","Set","clear","size","callbackfn","thisArg","x","call","entries","keys","values","Symbol","iterator","add","Array","isArray","itemDeps","equal","delete","set","copy","key","run","push","s","length","toStringTag"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/core/src/utils/partially-ordered-set.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PartiallyOrderedSet = exports.CircularDependencyFoundException = exports.DependencyNotFoundException = void 0;\nconst exception_1 = require(\"../exception\");\nclass DependencyNotFoundException extends exception_1.BaseException {\n    constructor() {\n        super('One of the dependencies is not part of the set.');\n    }\n}\nexports.DependencyNotFoundException = DependencyNotFoundException;\nclass CircularDependencyFoundException extends exception_1.BaseException {\n    constructor() {\n        super('Circular dependencies found.');\n    }\n}\nexports.CircularDependencyFoundException = CircularDependencyFoundException;\nclass PartiallyOrderedSet {\n    constructor() {\n        this._items = new Map();\n    }\n    _checkCircularDependencies(item, deps) {\n        if (deps.has(item)) {\n            throw new CircularDependencyFoundException();\n        }\n        deps.forEach((dep) => this._checkCircularDependencies(item, this._items.get(dep) || new Set()));\n    }\n    clear() {\n        this._items.clear();\n    }\n    has(item) {\n        return this._items.has(item);\n    }\n    get size() {\n        return this._items.size;\n    }\n    forEach(callbackfn, thisArg) {\n        for (const x of this) {\n            callbackfn.call(thisArg, x, x, this);\n        }\n    }\n    /**\n     * Returns an iterable of [v,v] pairs for every value `v` in the set.\n     */\n    *entries() {\n        for (const item of this) {\n            yield [item, item];\n        }\n    }\n    /**\n     * Despite its name, returns an iterable of the values in the set,\n     */\n    keys() {\n        return this.values();\n    }\n    /**\n     * Returns an iterable of values in the set.\n     */\n    values() {\n        return this[Symbol.iterator]();\n    }\n    add(item, deps = new Set()) {\n        if (Array.isArray(deps)) {\n            deps = new Set(deps);\n        }\n        // Verify item is not already in the set.\n        if (this._items.has(item)) {\n            const itemDeps = this._items.get(item) || new Set();\n            // If the dependency list is equal, just return, otherwise remove and keep going.\n            let equal = true;\n            for (const dep of deps) {\n                if (!itemDeps.has(dep)) {\n                    equal = false;\n                    break;\n                }\n            }\n            if (equal) {\n                for (const dep of itemDeps) {\n                    if (!deps.has(dep)) {\n                        equal = false;\n                        break;\n                    }\n                }\n            }\n            if (equal) {\n                return this;\n            }\n            else {\n                this._items.delete(item);\n            }\n        }\n        // Verify all dependencies are part of the Set.\n        for (const dep of deps) {\n            if (!this._items.has(dep)) {\n                throw new DependencyNotFoundException();\n            }\n        }\n        // Verify there's no dependency cycle.\n        this._checkCircularDependencies(item, deps);\n        this._items.set(item, new Set(deps));\n        return this;\n    }\n    delete(item) {\n        if (!this._items.has(item)) {\n            return false;\n        }\n        // Remove it from all dependencies if force == true.\n        this._items.forEach((value) => value.delete(item));\n        return this._items.delete(item);\n    }\n    *[Symbol.iterator]() {\n        const copy = new Map(this._items);\n        for (const [key, value] of copy.entries()) {\n            copy.set(key, new Set(value));\n        }\n        while (copy.size > 0) {\n            const run = [];\n            // Take the first item without dependencies.\n            for (const [item, deps] of copy.entries()) {\n                if (deps.size == 0) {\n                    run.push(item);\n                }\n            }\n            for (const item of run) {\n                copy.forEach((s) => s.delete(item));\n                copy.delete(item);\n                yield item;\n            }\n            if (run.length == 0) {\n                // uh oh...\n                throw new CircularDependencyFoundException();\n            }\n        }\n    }\n    get [Symbol.toStringTag]() {\n        return 'Set';\n    }\n}\nexports.PartiallyOrderedSet = PartiallyOrderedSet;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}