{"ast":null,"code":"'use strict';\n\nconst {\n  fromEvent\n} = require('rxjs');\n\nconst {\n  filter,\n  map,\n  share,\n  takeUntil\n} = require('rxjs/operators');\n\nfunction normalizeKeypressEvents(value, key) {\n  return {\n    value,\n    key: key || {}\n  };\n}\n\nmodule.exports = function (rl) {\n  const keypress = fromEvent(rl.input, 'keypress', normalizeKeypressEvents).pipe(takeUntil(fromEvent(rl, 'close'))) // Ignore `enter` key. On the readline, we only care about the `line` event.\n  .pipe(filter(({\n    key\n  }) => key.name !== 'enter' && key.name !== 'return'));\n  return {\n    line: fromEvent(rl, 'line'),\n    keypress,\n    normalizedUpKey: keypress.pipe(filter(({\n      key\n    }) => key.name === 'up' || key.name === 'k' || key.name === 'p' && key.ctrl), share()),\n    normalizedDownKey: keypress.pipe(filter(({\n      key\n    }) => key.name === 'down' || key.name === 'j' || key.name === 'n' && key.ctrl), share()),\n    numberKey: keypress.pipe(filter(e => e.value && '123456789'.indexOf(e.value) >= 0), map(e => Number(e.value)), share()),\n    spaceKey: keypress.pipe(filter(({\n      key\n    }) => key && key.name === 'space'), share()),\n    aKey: keypress.pipe(filter(({\n      key\n    }) => key && key.name === 'a'), share()),\n    iKey: keypress.pipe(filter(({\n      key\n    }) => key && key.name === 'i'), share())\n  };\n};","map":{"version":3,"names":["fromEvent","require","filter","map","share","takeUntil","normalizeKeypressEvents","value","key","module","exports","rl","keypress","input","pipe","name","line","normalizedUpKey","ctrl","normalizedDownKey","numberKey","e","indexOf","Number","spaceKey","aKey","iKey"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/inquirer/lib/utils/events.js"],"sourcesContent":["'use strict';\nconst { fromEvent } = require('rxjs');\nconst { filter, map, share, takeUntil } = require('rxjs/operators');\n\nfunction normalizeKeypressEvents(value, key) {\n  return { value, key: key || {} };\n}\n\nmodule.exports = function (rl) {\n  const keypress = fromEvent(rl.input, 'keypress', normalizeKeypressEvents)\n    .pipe(takeUntil(fromEvent(rl, 'close')))\n    // Ignore `enter` key. On the readline, we only care about the `line` event.\n    .pipe(filter(({ key }) => key.name !== 'enter' && key.name !== 'return'));\n\n  return {\n    line: fromEvent(rl, 'line'),\n    keypress,\n\n    normalizedUpKey: keypress.pipe(\n      filter(\n        ({ key }) =>\n          key.name === 'up' || key.name === 'k' || (key.name === 'p' && key.ctrl)\n      ),\n      share()\n    ),\n\n    normalizedDownKey: keypress.pipe(\n      filter(\n        ({ key }) =>\n          key.name === 'down' || key.name === 'j' || (key.name === 'n' && key.ctrl)\n      ),\n      share()\n    ),\n\n    numberKey: keypress.pipe(\n      filter((e) => e.value && '123456789'.indexOf(e.value) >= 0),\n      map((e) => Number(e.value)),\n      share()\n    ),\n\n    spaceKey: keypress.pipe(\n      filter(({ key }) => key && key.name === 'space'),\n      share()\n    ),\n    aKey: keypress.pipe(\n      filter(({ key }) => key && key.name === 'a'),\n      share()\n    ),\n    iKey: keypress.pipe(\n      filter(({ key }) => key && key.name === 'i'),\n      share()\n    ),\n  };\n};\n"],"mappings":"AAAA;;AACA,MAAM;EAAEA;AAAF,IAAgBC,OAAO,CAAC,MAAD,CAA7B;;AACA,MAAM;EAAEC,MAAF;EAAUC,GAAV;EAAeC,KAAf;EAAsBC;AAAtB,IAAoCJ,OAAO,CAAC,gBAAD,CAAjD;;AAEA,SAASK,uBAAT,CAAiCC,KAAjC,EAAwCC,GAAxC,EAA6C;EAC3C,OAAO;IAAED,KAAF;IAASC,GAAG,EAAEA,GAAG,IAAI;EAArB,CAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiB,UAAUC,EAAV,EAAc;EAC7B,MAAMC,QAAQ,GAAGZ,SAAS,CAACW,EAAE,CAACE,KAAJ,EAAW,UAAX,EAAuBP,uBAAvB,CAAT,CACdQ,IADc,CACTT,SAAS,CAACL,SAAS,CAACW,EAAD,EAAK,OAAL,CAAV,CADA,EAEf;EAFe,CAGdG,IAHc,CAGTZ,MAAM,CAAC,CAAC;IAAEM;EAAF,CAAD,KAAaA,GAAG,CAACO,IAAJ,KAAa,OAAb,IAAwBP,GAAG,CAACO,IAAJ,KAAa,QAAnD,CAHG,CAAjB;EAKA,OAAO;IACLC,IAAI,EAAEhB,SAAS,CAACW,EAAD,EAAK,MAAL,CADV;IAELC,QAFK;IAILK,eAAe,EAAEL,QAAQ,CAACE,IAAT,CACfZ,MAAM,CACJ,CAAC;MAAEM;IAAF,CAAD,KACEA,GAAG,CAACO,IAAJ,KAAa,IAAb,IAAqBP,GAAG,CAACO,IAAJ,KAAa,GAAlC,IAA0CP,GAAG,CAACO,IAAJ,KAAa,GAAb,IAAoBP,GAAG,CAACU,IAFhE,CADS,EAKfd,KAAK,EALU,CAJZ;IAYLe,iBAAiB,EAAEP,QAAQ,CAACE,IAAT,CACjBZ,MAAM,CACJ,CAAC;MAAEM;IAAF,CAAD,KACEA,GAAG,CAACO,IAAJ,KAAa,MAAb,IAAuBP,GAAG,CAACO,IAAJ,KAAa,GAApC,IAA4CP,GAAG,CAACO,IAAJ,KAAa,GAAb,IAAoBP,GAAG,CAACU,IAFlE,CADW,EAKjBd,KAAK,EALY,CAZd;IAoBLgB,SAAS,EAAER,QAAQ,CAACE,IAAT,CACTZ,MAAM,CAAEmB,CAAD,IAAOA,CAAC,CAACd,KAAF,IAAW,YAAYe,OAAZ,CAAoBD,CAAC,CAACd,KAAtB,KAAgC,CAAnD,CADG,EAETJ,GAAG,CAAEkB,CAAD,IAAOE,MAAM,CAACF,CAAC,CAACd,KAAH,CAAd,CAFM,EAGTH,KAAK,EAHI,CApBN;IA0BLoB,QAAQ,EAAEZ,QAAQ,CAACE,IAAT,CACRZ,MAAM,CAAC,CAAC;MAAEM;IAAF,CAAD,KAAaA,GAAG,IAAIA,GAAG,CAACO,IAAJ,KAAa,OAAlC,CADE,EAERX,KAAK,EAFG,CA1BL;IA8BLqB,IAAI,EAAEb,QAAQ,CAACE,IAAT,CACJZ,MAAM,CAAC,CAAC;MAAEM;IAAF,CAAD,KAAaA,GAAG,IAAIA,GAAG,CAACO,IAAJ,KAAa,GAAlC,CADF,EAEJX,KAAK,EAFD,CA9BD;IAkCLsB,IAAI,EAAEd,QAAQ,CAACE,IAAT,CACJZ,MAAM,CAAC,CAAC;MAAEM;IAAF,CAAD,KAAaA,GAAG,IAAIA,GAAG,CAACO,IAAJ,KAAa,GAAlC,CADF,EAEJX,KAAK,EAFD;EAlCD,CAAP;AAuCD,CA7CD"},"metadata":{},"sourceType":"script"}