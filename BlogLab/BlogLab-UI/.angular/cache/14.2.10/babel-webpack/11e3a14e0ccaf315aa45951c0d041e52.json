{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AddCommandModule = void 0;\n\nconst core_1 = require(\"@angular-devkit/core\");\n\nconst tools_1 = require(\"@angular-devkit/schematics/tools\");\n\nconst npm_package_arg_1 = __importDefault(require(\"npm-package-arg\"));\n\nconst path_1 = require(\"path\");\n\nconst semver_1 = require(\"semver\");\n\nconst workspace_schema_1 = require(\"../../../lib/config/workspace-schema\");\n\nconst analytics_1 = require(\"../../analytics/analytics\");\n\nconst schematics_command_module_1 = require(\"../../command-builder/schematics-command-module\");\n\nconst color_1 = require(\"../../utilities/color\");\n\nconst error_1 = require(\"../../utilities/error\");\n\nconst package_metadata_1 = require(\"../../utilities/package-metadata\");\n\nconst prompt_1 = require(\"../../utilities/prompt\");\n\nconst spinner_1 = require(\"../../utilities/spinner\");\n\nconst tty_1 = require(\"../../utilities/tty\");\n/**\n * The set of packages that should have certain versions excluded from consideration\n * when attempting to find a compatible version for a package.\n * The key is a package name and the value is a SemVer range of versions to exclude.\n */\n\n\nconst packageVersionExclusions = {\n  // @angular/localize@9.x and earlier versions as well as @angular/localize@10.0 prereleases do not have peer dependencies setup.\n  '@angular/localize': '<10.0.0',\n  // @angular/material@7.x versions have unbounded peer dependency ranges (>=7.0.0).\n  '@angular/material': '7.x'\n};\n\nclass AddCommandModule extends schematics_command_module_1.SchematicsCommandModule {\n  constructor() {\n    super(...arguments);\n    this.command = 'add <collection>';\n    this.describe = 'Adds support for an external library to your project.';\n    this.longDescriptionPath = (0, path_1.join)(__dirname, 'long-description.md');\n    this.allowPrivateSchematics = true;\n    this.schematicName = 'ng-add';\n  }\n\n  builder(argv) {\n    var _superprop_getBuilder = () => super.builder,\n        _this = this;\n\n    return _asyncToGenerator(function* () {\n      const localYargs = (yield _superprop_getBuilder().call(_this, argv)).positional('collection', {\n        description: 'The package to be added.',\n        type: 'string',\n        demandOption: true\n      }).option('registry', {\n        description: 'The NPM registry to use.',\n        type: 'string'\n      }).option('verbose', {\n        description: 'Display additional details about internal operations during execution.',\n        type: 'boolean',\n        default: false\n      }).option('skip-confirmation', {\n        description: 'Skip asking a confirmation prompt before installing and executing the package. ' + 'Ensure package name is correct prior to using this option.',\n        type: 'boolean',\n        default: false\n      }) // Prior to downloading we don't know the full schema and therefore we cannot be strict on the options.\n      // Possibly in the future update the logic to use the following syntax:\n      // `ng add @angular/localize -- --package-options`.\n      .strict(false);\n      const collectionName = yield _this.getCollectionName();\n      const workflow = yield _this.getOrCreateWorkflowForBuilder(collectionName);\n\n      try {\n        const collection = workflow.engine.createCollection(collectionName);\n        const options = yield _this.getSchematicOptions(collection, _this.schematicName, workflow);\n        return _this.addSchemaOptionsToCommand(localYargs, options);\n      } catch (error) {// During `ng add` prior to the downloading of the package\n        // we are not able to resolve and create a collection.\n        // Or when the the collection value is a path to a tarball.\n      }\n\n      return localYargs;\n    })();\n  } // eslint-disable-next-line max-lines-per-function\n\n\n  run(options) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      const {\n        logger,\n        packageManager\n      } = _this2.context;\n      const {\n        verbose,\n        registry,\n        collection,\n        skipConfirmation\n      } = options;\n      packageManager.ensureCompatibility();\n      let packageIdentifier;\n\n      try {\n        packageIdentifier = (0, npm_package_arg_1.default)(collection);\n      } catch (e) {\n        (0, error_1.assertIsError)(e);\n        logger.error(e.message);\n        return 1;\n      }\n\n      if (packageIdentifier.name && packageIdentifier.registry && _this2.isPackageInstalled(packageIdentifier.name)) {\n        const validVersion = yield _this2.isProjectVersionValid(packageIdentifier);\n\n        if (validVersion) {\n          // Already installed so just run schematic\n          logger.info('Skipping installation: Package already installed');\n          return _this2.executeSchematic({ ...options,\n            collection: packageIdentifier.name\n          });\n        }\n      }\n\n      const spinner = new spinner_1.Spinner();\n      spinner.start('Determining package manager...');\n      const usingYarn = packageManager.name === workspace_schema_1.PackageManager.Yarn;\n      spinner.info(`Using package manager: ${color_1.colors.grey(packageManager.name)}`);\n\n      if (packageIdentifier.name && packageIdentifier.type === 'tag' && !packageIdentifier.rawSpec) {\n        // only package name provided; search for viable version\n        // plus special cases for packages that did not have peer deps setup\n        spinner.start('Searching for compatible package version...');\n        let packageMetadata;\n\n        try {\n          packageMetadata = yield (0, package_metadata_1.fetchPackageMetadata)(packageIdentifier.name, logger, {\n            registry,\n            usingYarn,\n            verbose\n          });\n        } catch (e) {\n          (0, error_1.assertIsError)(e);\n          spinner.fail(`Unable to load package information from registry: ${e.message}`);\n          return 1;\n        } // Start with the version tagged as `latest` if it exists\n\n\n        const latestManifest = packageMetadata.tags['latest'];\n\n        if (latestManifest) {\n          packageIdentifier = npm_package_arg_1.default.resolve(latestManifest.name, latestManifest.version);\n        } // Adjust the version based on name and peer dependencies\n\n\n        if ((latestManifest === null || latestManifest === void 0 ? void 0 : latestManifest.peerDependencies) && Object.keys(latestManifest.peerDependencies).length === 0) {\n          spinner.succeed(`Found compatible package version: ${color_1.colors.grey(packageIdentifier.toString())}.`);\n        } else if (!latestManifest || (yield _this2.hasMismatchedPeer(latestManifest))) {\n          // 'latest' is invalid so search for most recent matching package\n          const versionExclusions = packageVersionExclusions[packageMetadata.name];\n          const versionManifests = Object.values(packageMetadata.versions).filter(value => {\n            // Prerelease versions are not stable and should not be considered by default\n            if ((0, semver_1.prerelease)(value.version)) {\n              return false;\n            } // Deprecated versions should not be used or considered\n\n\n            if (value.deprecated) {\n              return false;\n            } // Excluded package versions should not be considered\n\n\n            if (versionExclusions && (0, semver_1.satisfies)(value.version, versionExclusions, {\n              includePrerelease: true\n            })) {\n              return false;\n            }\n\n            return true;\n          });\n          versionManifests.sort((a, b) => (0, semver_1.compare)(a.version, b.version, true));\n          let newIdentifier;\n\n          for (const versionManifest of versionManifests) {\n            if (!(yield _this2.hasMismatchedPeer(versionManifest))) {\n              newIdentifier = npm_package_arg_1.default.resolve(versionManifest.name, versionManifest.version);\n              break;\n            }\n          }\n\n          if (!newIdentifier) {\n            spinner.warn(\"Unable to find compatible package. Using 'latest' tag.\");\n          } else {\n            packageIdentifier = newIdentifier;\n            spinner.succeed(`Found compatible package version: ${color_1.colors.grey(packageIdentifier.toString())}.`);\n          }\n        } else {\n          spinner.succeed(`Found compatible package version: ${color_1.colors.grey(packageIdentifier.toString())}.`);\n        }\n      }\n\n      let collectionName = packageIdentifier.name;\n      let savePackage;\n\n      try {\n        spinner.start('Loading package information from registry...');\n        const manifest = yield (0, package_metadata_1.fetchPackageManifest)(packageIdentifier.toString(), logger, {\n          registry,\n          verbose,\n          usingYarn\n        });\n        savePackage = (_a = manifest['ng-add']) === null || _a === void 0 ? void 0 : _a.save;\n        collectionName = manifest.name;\n\n        if (yield _this2.hasMismatchedPeer(manifest)) {\n          spinner.warn('Package has unmet peer dependencies. Adding the package may not succeed.');\n        } else {\n          spinner.succeed(`Package information loaded.`);\n        }\n      } catch (e) {\n        (0, error_1.assertIsError)(e);\n        spinner.fail(`Unable to fetch package information for '${packageIdentifier}': ${e.message}`);\n        return 1;\n      }\n\n      if (!skipConfirmation) {\n        const confirmationResponse = yield (0, prompt_1.askConfirmation)(`\\nThe package ${color_1.colors.blue(packageIdentifier.raw)} will be installed and executed.\\n` + 'Would you like to proceed?', true, false);\n\n        if (!confirmationResponse) {\n          if (!(0, tty_1.isTTY)()) {\n            logger.error('No terminal detected. ' + `'--skip-confirmation' can be used to bypass installation confirmation. ` + `Ensure package name is correct prior to '--skip-confirmation' option usage.`);\n          }\n\n          logger.error('Command aborted.');\n          return 1;\n        }\n      }\n\n      if (savePackage === false) {\n        // Temporary packages are located in a different directory\n        // Hence we need to resolve them using the temp path\n        const {\n          success,\n          tempNodeModules\n        } = yield packageManager.installTemp(packageIdentifier.raw, registry ? [`--registry=\"${registry}\"`] : undefined);\n\n        const resolvedCollectionPath = require.resolve((0, path_1.join)(collectionName, 'package.json'), {\n          paths: [tempNodeModules]\n        });\n\n        if (!success) {\n          return 1;\n        }\n\n        collectionName = (0, path_1.dirname)(resolvedCollectionPath);\n      } else {\n        const success = yield packageManager.install(packageIdentifier.raw, savePackage, registry ? [`--registry=\"${registry}\"`] : undefined);\n\n        if (!success) {\n          return 1;\n        }\n      }\n\n      return _this2.executeSchematic({ ...options,\n        collection: collectionName\n      });\n    })();\n  }\n\n  isProjectVersionValid(packageIdentifier) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!packageIdentifier.name) {\n        return false;\n      }\n\n      let validVersion = false;\n      const installedVersion = yield _this3.findProjectVersion(packageIdentifier.name);\n\n      if (installedVersion) {\n        if (packageIdentifier.type === 'range' && packageIdentifier.fetchSpec) {\n          validVersion = (0, semver_1.satisfies)(installedVersion, packageIdentifier.fetchSpec);\n        } else if (packageIdentifier.type === 'version') {\n          const v1 = (0, semver_1.valid)(packageIdentifier.fetchSpec);\n          const v2 = (0, semver_1.valid)(installedVersion);\n          validVersion = v1 !== null && v1 === v2;\n        } else if (!packageIdentifier.rawSpec) {\n          validVersion = true;\n        }\n      }\n\n      return validVersion;\n    })();\n  }\n\n  reportAnalytics(options, paths) {\n    var _superprop_getReportAnalytics = () => super.reportAnalytics,\n        _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const collection = yield _this4.getCollectionName();\n      const dimensions = []; // Add the collection if it's safe listed.\n\n      if (collection && (0, analytics_1.isPackageNameSafeForAnalytics)(collection)) {\n        dimensions[core_1.analytics.NgCliAnalyticsDimensions.NgAddCollection] = collection;\n      }\n\n      return _superprop_getReportAnalytics().call(_this4, options, paths, dimensions);\n    })();\n  }\n\n  getCollectionName() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      const [, collectionName] = _this5.context.args.positional;\n      return collectionName;\n    })();\n  }\n\n  isPackageInstalled(name) {\n    try {\n      require.resolve((0, path_1.join)(name, 'package.json'), {\n        paths: [this.context.root]\n      });\n\n      return true;\n    } catch (e) {\n      (0, error_1.assertIsError)(e);\n\n      if (e.code !== 'MODULE_NOT_FOUND') {\n        throw e;\n      }\n    }\n\n    return false;\n  }\n\n  executeSchematic(options) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const {\n          verbose,\n          skipConfirmation,\n          interactive,\n          force,\n          dryRun,\n          registry,\n          defaults,\n          collection: collectionName,\n          ...schematicOptions\n        } = options;\n        return yield _this6.runSchematic({\n          schematicOptions,\n          schematicName: _this6.schematicName,\n          collectionName,\n          executionOptions: {\n            interactive,\n            force,\n            dryRun,\n            defaults,\n            packageRegistry: registry\n          }\n        });\n      } catch (e) {\n        if (e instanceof tools_1.NodePackageDoesNotSupportSchematics) {\n          _this6.context.logger.error(core_1.tags.oneLine`\n          The package that you are trying to add does not support schematics. You can try using\n          a different version of the package or contact the package author to add ng-add support.\n        `);\n\n          return 1;\n        }\n\n        throw e;\n      }\n    })();\n  }\n\n  findProjectVersion(name) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n\n      const {\n        logger,\n        root\n      } = _this7.context;\n      let installedPackage;\n\n      try {\n        installedPackage = require.resolve((0, path_1.join)(name, 'package.json'), {\n          paths: [root]\n        });\n      } catch {}\n\n      if (installedPackage) {\n        try {\n          const installed = yield (0, package_metadata_1.fetchPackageManifest)((0, path_1.dirname)(installedPackage), logger);\n          return installed.version;\n        } catch {}\n      }\n\n      let projectManifest;\n\n      try {\n        projectManifest = yield (0, package_metadata_1.fetchPackageManifest)(root, logger);\n      } catch {}\n\n      if (projectManifest) {\n        const version = ((_a = projectManifest.dependencies) === null || _a === void 0 ? void 0 : _a[name]) || ((_b = projectManifest.devDependencies) === null || _b === void 0 ? void 0 : _b[name]);\n\n        if (version) {\n          return version;\n        }\n      }\n\n      return null;\n    })();\n  }\n\n  hasMismatchedPeer(manifest) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      for (const peer in manifest.peerDependencies) {\n        let peerIdentifier;\n\n        try {\n          peerIdentifier = npm_package_arg_1.default.resolve(peer, manifest.peerDependencies[peer]);\n        } catch {\n          _this8.context.logger.warn(`Invalid peer dependency ${peer} found in package.`);\n\n          continue;\n        }\n\n        if (peerIdentifier.type === 'version' || peerIdentifier.type === 'range') {\n          try {\n            const version = yield _this8.findProjectVersion(peer);\n\n            if (!version) {\n              continue;\n            }\n\n            const options = {\n              includePrerelease: true\n            };\n\n            if (!(0, semver_1.intersects)(version, peerIdentifier.rawSpec, options) && !(0, semver_1.satisfies)(version, peerIdentifier.rawSpec, options)) {\n              return true;\n            }\n          } catch {\n            // Not found or invalid so ignore\n            continue;\n          }\n        } else {// type === 'tag' | 'file' | 'directory' | 'remote' | 'git'\n          // Cannot accurately compare these as the tag/location may have changed since install\n        }\n      }\n\n      return false;\n    })();\n  }\n\n}\n\nexports.AddCommandModule = AddCommandModule;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","AddCommandModule","core_1","require","tools_1","npm_package_arg_1","path_1","semver_1","workspace_schema_1","analytics_1","schematics_command_module_1","color_1","error_1","package_metadata_1","prompt_1","spinner_1","tty_1","packageVersionExclusions","SchematicsCommandModule","constructor","arguments","command","describe","longDescriptionPath","join","__dirname","allowPrivateSchematics","schematicName","builder","argv","localYargs","positional","description","type","demandOption","option","default","strict","collectionName","getCollectionName","workflow","getOrCreateWorkflowForBuilder","collection","engine","createCollection","options","getSchematicOptions","addSchemaOptionsToCommand","error","run","_a","logger","packageManager","context","verbose","registry","skipConfirmation","ensureCompatibility","packageIdentifier","e","assertIsError","message","name","isPackageInstalled","validVersion","isProjectVersionValid","info","executeSchematic","spinner","Spinner","start","usingYarn","PackageManager","Yarn","colors","grey","rawSpec","packageMetadata","fetchPackageMetadata","fail","latestManifest","tags","resolve","version","peerDependencies","keys","length","succeed","toString","hasMismatchedPeer","versionExclusions","versionManifests","values","versions","filter","prerelease","deprecated","satisfies","includePrerelease","sort","a","b","compare","newIdentifier","versionManifest","warn","savePackage","manifest","fetchPackageManifest","save","confirmationResponse","askConfirmation","blue","raw","isTTY","success","tempNodeModules","installTemp","undefined","resolvedCollectionPath","paths","dirname","install","installedVersion","findProjectVersion","fetchSpec","v1","valid","v2","reportAnalytics","dimensions","isPackageNameSafeForAnalytics","analytics","NgCliAnalyticsDimensions","NgAddCollection","args","root","code","interactive","force","dryRun","defaults","schematicOptions","runSchematic","executionOptions","packageRegistry","NodePackageDoesNotSupportSchematics","oneLine","_b","installedPackage","installed","projectManifest","dependencies","devDependencies","peer","peerIdentifier","intersects"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular/cli/src/commands/add/cli.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AddCommandModule = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst tools_1 = require(\"@angular-devkit/schematics/tools\");\nconst npm_package_arg_1 = __importDefault(require(\"npm-package-arg\"));\nconst path_1 = require(\"path\");\nconst semver_1 = require(\"semver\");\nconst workspace_schema_1 = require(\"../../../lib/config/workspace-schema\");\nconst analytics_1 = require(\"../../analytics/analytics\");\nconst schematics_command_module_1 = require(\"../../command-builder/schematics-command-module\");\nconst color_1 = require(\"../../utilities/color\");\nconst error_1 = require(\"../../utilities/error\");\nconst package_metadata_1 = require(\"../../utilities/package-metadata\");\nconst prompt_1 = require(\"../../utilities/prompt\");\nconst spinner_1 = require(\"../../utilities/spinner\");\nconst tty_1 = require(\"../../utilities/tty\");\n/**\n * The set of packages that should have certain versions excluded from consideration\n * when attempting to find a compatible version for a package.\n * The key is a package name and the value is a SemVer range of versions to exclude.\n */\nconst packageVersionExclusions = {\n    // @angular/localize@9.x and earlier versions as well as @angular/localize@10.0 prereleases do not have peer dependencies setup.\n    '@angular/localize': '<10.0.0',\n    // @angular/material@7.x versions have unbounded peer dependency ranges (>=7.0.0).\n    '@angular/material': '7.x',\n};\nclass AddCommandModule extends schematics_command_module_1.SchematicsCommandModule {\n    constructor() {\n        super(...arguments);\n        this.command = 'add <collection>';\n        this.describe = 'Adds support for an external library to your project.';\n        this.longDescriptionPath = (0, path_1.join)(__dirname, 'long-description.md');\n        this.allowPrivateSchematics = true;\n        this.schematicName = 'ng-add';\n    }\n    async builder(argv) {\n        const localYargs = (await super.builder(argv))\n            .positional('collection', {\n            description: 'The package to be added.',\n            type: 'string',\n            demandOption: true,\n        })\n            .option('registry', { description: 'The NPM registry to use.', type: 'string' })\n            .option('verbose', {\n            description: 'Display additional details about internal operations during execution.',\n            type: 'boolean',\n            default: false,\n        })\n            .option('skip-confirmation', {\n            description: 'Skip asking a confirmation prompt before installing and executing the package. ' +\n                'Ensure package name is correct prior to using this option.',\n            type: 'boolean',\n            default: false,\n        })\n            // Prior to downloading we don't know the full schema and therefore we cannot be strict on the options.\n            // Possibly in the future update the logic to use the following syntax:\n            // `ng add @angular/localize -- --package-options`.\n            .strict(false);\n        const collectionName = await this.getCollectionName();\n        const workflow = await this.getOrCreateWorkflowForBuilder(collectionName);\n        try {\n            const collection = workflow.engine.createCollection(collectionName);\n            const options = await this.getSchematicOptions(collection, this.schematicName, workflow);\n            return this.addSchemaOptionsToCommand(localYargs, options);\n        }\n        catch (error) {\n            // During `ng add` prior to the downloading of the package\n            // we are not able to resolve and create a collection.\n            // Or when the the collection value is a path to a tarball.\n        }\n        return localYargs;\n    }\n    // eslint-disable-next-line max-lines-per-function\n    async run(options) {\n        var _a;\n        const { logger, packageManager } = this.context;\n        const { verbose, registry, collection, skipConfirmation } = options;\n        packageManager.ensureCompatibility();\n        let packageIdentifier;\n        try {\n            packageIdentifier = (0, npm_package_arg_1.default)(collection);\n        }\n        catch (e) {\n            (0, error_1.assertIsError)(e);\n            logger.error(e.message);\n            return 1;\n        }\n        if (packageIdentifier.name &&\n            packageIdentifier.registry &&\n            this.isPackageInstalled(packageIdentifier.name)) {\n            const validVersion = await this.isProjectVersionValid(packageIdentifier);\n            if (validVersion) {\n                // Already installed so just run schematic\n                logger.info('Skipping installation: Package already installed');\n                return this.executeSchematic({ ...options, collection: packageIdentifier.name });\n            }\n        }\n        const spinner = new spinner_1.Spinner();\n        spinner.start('Determining package manager...');\n        const usingYarn = packageManager.name === workspace_schema_1.PackageManager.Yarn;\n        spinner.info(`Using package manager: ${color_1.colors.grey(packageManager.name)}`);\n        if (packageIdentifier.name && packageIdentifier.type === 'tag' && !packageIdentifier.rawSpec) {\n            // only package name provided; search for viable version\n            // plus special cases for packages that did not have peer deps setup\n            spinner.start('Searching for compatible package version...');\n            let packageMetadata;\n            try {\n                packageMetadata = await (0, package_metadata_1.fetchPackageMetadata)(packageIdentifier.name, logger, {\n                    registry,\n                    usingYarn,\n                    verbose,\n                });\n            }\n            catch (e) {\n                (0, error_1.assertIsError)(e);\n                spinner.fail(`Unable to load package information from registry: ${e.message}`);\n                return 1;\n            }\n            // Start with the version tagged as `latest` if it exists\n            const latestManifest = packageMetadata.tags['latest'];\n            if (latestManifest) {\n                packageIdentifier = npm_package_arg_1.default.resolve(latestManifest.name, latestManifest.version);\n            }\n            // Adjust the version based on name and peer dependencies\n            if ((latestManifest === null || latestManifest === void 0 ? void 0 : latestManifest.peerDependencies) &&\n                Object.keys(latestManifest.peerDependencies).length === 0) {\n                spinner.succeed(`Found compatible package version: ${color_1.colors.grey(packageIdentifier.toString())}.`);\n            }\n            else if (!latestManifest || (await this.hasMismatchedPeer(latestManifest))) {\n                // 'latest' is invalid so search for most recent matching package\n                const versionExclusions = packageVersionExclusions[packageMetadata.name];\n                const versionManifests = Object.values(packageMetadata.versions).filter((value) => {\n                    // Prerelease versions are not stable and should not be considered by default\n                    if ((0, semver_1.prerelease)(value.version)) {\n                        return false;\n                    }\n                    // Deprecated versions should not be used or considered\n                    if (value.deprecated) {\n                        return false;\n                    }\n                    // Excluded package versions should not be considered\n                    if (versionExclusions &&\n                        (0, semver_1.satisfies)(value.version, versionExclusions, { includePrerelease: true })) {\n                        return false;\n                    }\n                    return true;\n                });\n                versionManifests.sort((a, b) => (0, semver_1.compare)(a.version, b.version, true));\n                let newIdentifier;\n                for (const versionManifest of versionManifests) {\n                    if (!(await this.hasMismatchedPeer(versionManifest))) {\n                        newIdentifier = npm_package_arg_1.default.resolve(versionManifest.name, versionManifest.version);\n                        break;\n                    }\n                }\n                if (!newIdentifier) {\n                    spinner.warn(\"Unable to find compatible package. Using 'latest' tag.\");\n                }\n                else {\n                    packageIdentifier = newIdentifier;\n                    spinner.succeed(`Found compatible package version: ${color_1.colors.grey(packageIdentifier.toString())}.`);\n                }\n            }\n            else {\n                spinner.succeed(`Found compatible package version: ${color_1.colors.grey(packageIdentifier.toString())}.`);\n            }\n        }\n        let collectionName = packageIdentifier.name;\n        let savePackage;\n        try {\n            spinner.start('Loading package information from registry...');\n            const manifest = await (0, package_metadata_1.fetchPackageManifest)(packageIdentifier.toString(), logger, {\n                registry,\n                verbose,\n                usingYarn,\n            });\n            savePackage = (_a = manifest['ng-add']) === null || _a === void 0 ? void 0 : _a.save;\n            collectionName = manifest.name;\n            if (await this.hasMismatchedPeer(manifest)) {\n                spinner.warn('Package has unmet peer dependencies. Adding the package may not succeed.');\n            }\n            else {\n                spinner.succeed(`Package information loaded.`);\n            }\n        }\n        catch (e) {\n            (0, error_1.assertIsError)(e);\n            spinner.fail(`Unable to fetch package information for '${packageIdentifier}': ${e.message}`);\n            return 1;\n        }\n        if (!skipConfirmation) {\n            const confirmationResponse = await (0, prompt_1.askConfirmation)(`\\nThe package ${color_1.colors.blue(packageIdentifier.raw)} will be installed and executed.\\n` +\n                'Would you like to proceed?', true, false);\n            if (!confirmationResponse) {\n                if (!(0, tty_1.isTTY)()) {\n                    logger.error('No terminal detected. ' +\n                        `'--skip-confirmation' can be used to bypass installation confirmation. ` +\n                        `Ensure package name is correct prior to '--skip-confirmation' option usage.`);\n                }\n                logger.error('Command aborted.');\n                return 1;\n            }\n        }\n        if (savePackage === false) {\n            // Temporary packages are located in a different directory\n            // Hence we need to resolve them using the temp path\n            const { success, tempNodeModules } = await packageManager.installTemp(packageIdentifier.raw, registry ? [`--registry=\"${registry}\"`] : undefined);\n            const resolvedCollectionPath = require.resolve((0, path_1.join)(collectionName, 'package.json'), {\n                paths: [tempNodeModules],\n            });\n            if (!success) {\n                return 1;\n            }\n            collectionName = (0, path_1.dirname)(resolvedCollectionPath);\n        }\n        else {\n            const success = await packageManager.install(packageIdentifier.raw, savePackage, registry ? [`--registry=\"${registry}\"`] : undefined);\n            if (!success) {\n                return 1;\n            }\n        }\n        return this.executeSchematic({ ...options, collection: collectionName });\n    }\n    async isProjectVersionValid(packageIdentifier) {\n        if (!packageIdentifier.name) {\n            return false;\n        }\n        let validVersion = false;\n        const installedVersion = await this.findProjectVersion(packageIdentifier.name);\n        if (installedVersion) {\n            if (packageIdentifier.type === 'range' && packageIdentifier.fetchSpec) {\n                validVersion = (0, semver_1.satisfies)(installedVersion, packageIdentifier.fetchSpec);\n            }\n            else if (packageIdentifier.type === 'version') {\n                const v1 = (0, semver_1.valid)(packageIdentifier.fetchSpec);\n                const v2 = (0, semver_1.valid)(installedVersion);\n                validVersion = v1 !== null && v1 === v2;\n            }\n            else if (!packageIdentifier.rawSpec) {\n                validVersion = true;\n            }\n        }\n        return validVersion;\n    }\n    async reportAnalytics(options, paths) {\n        const collection = await this.getCollectionName();\n        const dimensions = [];\n        // Add the collection if it's safe listed.\n        if (collection && (0, analytics_1.isPackageNameSafeForAnalytics)(collection)) {\n            dimensions[core_1.analytics.NgCliAnalyticsDimensions.NgAddCollection] = collection;\n        }\n        return super.reportAnalytics(options, paths, dimensions);\n    }\n    async getCollectionName() {\n        const [, collectionName] = this.context.args.positional;\n        return collectionName;\n    }\n    isPackageInstalled(name) {\n        try {\n            require.resolve((0, path_1.join)(name, 'package.json'), { paths: [this.context.root] });\n            return true;\n        }\n        catch (e) {\n            (0, error_1.assertIsError)(e);\n            if (e.code !== 'MODULE_NOT_FOUND') {\n                throw e;\n            }\n        }\n        return false;\n    }\n    async executeSchematic(options) {\n        try {\n            const { verbose, skipConfirmation, interactive, force, dryRun, registry, defaults, collection: collectionName, ...schematicOptions } = options;\n            return await this.runSchematic({\n                schematicOptions,\n                schematicName: this.schematicName,\n                collectionName,\n                executionOptions: {\n                    interactive,\n                    force,\n                    dryRun,\n                    defaults,\n                    packageRegistry: registry,\n                },\n            });\n        }\n        catch (e) {\n            if (e instanceof tools_1.NodePackageDoesNotSupportSchematics) {\n                this.context.logger.error(core_1.tags.oneLine `\n          The package that you are trying to add does not support schematics. You can try using\n          a different version of the package or contact the package author to add ng-add support.\n        `);\n                return 1;\n            }\n            throw e;\n        }\n    }\n    async findProjectVersion(name) {\n        var _a, _b;\n        const { logger, root } = this.context;\n        let installedPackage;\n        try {\n            installedPackage = require.resolve((0, path_1.join)(name, 'package.json'), {\n                paths: [root],\n            });\n        }\n        catch { }\n        if (installedPackage) {\n            try {\n                const installed = await (0, package_metadata_1.fetchPackageManifest)((0, path_1.dirname)(installedPackage), logger);\n                return installed.version;\n            }\n            catch { }\n        }\n        let projectManifest;\n        try {\n            projectManifest = await (0, package_metadata_1.fetchPackageManifest)(root, logger);\n        }\n        catch { }\n        if (projectManifest) {\n            const version = ((_a = projectManifest.dependencies) === null || _a === void 0 ? void 0 : _a[name]) || ((_b = projectManifest.devDependencies) === null || _b === void 0 ? void 0 : _b[name]);\n            if (version) {\n                return version;\n            }\n        }\n        return null;\n    }\n    async hasMismatchedPeer(manifest) {\n        for (const peer in manifest.peerDependencies) {\n            let peerIdentifier;\n            try {\n                peerIdentifier = npm_package_arg_1.default.resolve(peer, manifest.peerDependencies[peer]);\n            }\n            catch {\n                this.context.logger.warn(`Invalid peer dependency ${peer} found in package.`);\n                continue;\n            }\n            if (peerIdentifier.type === 'version' || peerIdentifier.type === 'range') {\n                try {\n                    const version = await this.findProjectVersion(peer);\n                    if (!version) {\n                        continue;\n                    }\n                    const options = { includePrerelease: true };\n                    if (!(0, semver_1.intersects)(version, peerIdentifier.rawSpec, options) &&\n                        !(0, semver_1.satisfies)(version, peerIdentifier.rawSpec, options)) {\n                        return true;\n                    }\n                }\n                catch {\n                    // Not found or invalid so ignore\n                    continue;\n                }\n            }\n            else {\n                // type === 'tag' | 'file' | 'directory' | 'remote' | 'git'\n                // Cannot accurately compare these as the tag/location may have changed since install\n            }\n        }\n        return false;\n    }\n}\nexports.AddCommandModule = AddCommandModule;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}