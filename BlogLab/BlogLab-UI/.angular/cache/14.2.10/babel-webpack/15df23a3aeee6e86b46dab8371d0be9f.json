{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NewCommandModule = void 0;\n\nconst command_module_1 = require(\"../../command-builder/command-module\");\n\nconst schematics_command_module_1 = require(\"../../command-builder/schematics-command-module\");\n\nconst version_1 = require(\"../../utilities/version\");\n\nclass NewCommandModule extends schematics_command_module_1.SchematicsCommandModule {\n  constructor() {\n    super(...arguments);\n    this.schematicName = 'ng-new';\n    this.scope = command_module_1.CommandScope.Out;\n    this.allowPrivateSchematics = true;\n    this.command = 'new [name]';\n    this.aliases = 'n';\n    this.describe = 'Creates a new Angular workspace.';\n  }\n\n  builder(argv) {\n    var _superprop_getBuilder = () => super.builder,\n        _this = this;\n\n    return _asyncToGenerator(function* () {\n      const localYargs = (yield _superprop_getBuilder().call(_this, argv)).option('collection', {\n        alias: 'c',\n        describe: 'A collection of schematics to use in generating the initial application.',\n        type: 'string'\n      });\n      const {\n        options: {\n          collection: collectionNameFromArgs\n        }\n      } = _this.context.args;\n      const collectionName = typeof collectionNameFromArgs === 'string' ? collectionNameFromArgs : yield _this.getCollectionFromConfig();\n      const workflow = yield _this.getOrCreateWorkflowForBuilder(collectionName);\n      const collection = workflow.engine.createCollection(collectionName);\n      const options = yield _this.getSchematicOptions(collection, _this.schematicName, workflow);\n      return _this.addSchemaOptionsToCommand(localYargs, options);\n    })();\n  }\n\n  run(options) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a; // Register the version of the CLI in the registry.\n\n\n      const collectionName = (_a = options.collection) !== null && _a !== void 0 ? _a : yield _this2.getCollectionFromConfig();\n      const {\n        dryRun,\n        force,\n        interactive,\n        defaults,\n        collection,\n        ...schematicOptions\n      } = options;\n      const workflow = yield _this2.getOrCreateWorkflowForExecution(collectionName, {\n        dryRun,\n        force,\n        interactive,\n        defaults\n      });\n      workflow.registry.addSmartDefaultProvider('ng-cli-version', () => version_1.VERSION.full); // Compatibility check for NPM 7\n\n      if (collectionName === '@schematics/angular' && !schematicOptions.skipInstall && (schematicOptions.packageManager === undefined || schematicOptions.packageManager === 'npm')) {\n        _this2.context.packageManager.ensureCompatibility();\n      }\n\n      return _this2.runSchematic({\n        collectionName,\n        schematicName: _this2.schematicName,\n        schematicOptions,\n        executionOptions: {\n          dryRun,\n          force,\n          interactive,\n          defaults\n        }\n      });\n    })();\n  }\n  /** Find a collection from config that has an `ng-new` schematic. */\n\n\n  getCollectionFromConfig() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      for (const collectionName of yield _this3.getSchematicCollections()) {\n        const workflow = _this3.getOrCreateWorkflowForBuilder(collectionName);\n\n        const collection = workflow.engine.createCollection(collectionName);\n        const schematicsInCollection = collection.description.schematics;\n\n        if (Object.keys(schematicsInCollection).includes(_this3.schematicName)) {\n          return collectionName;\n        }\n      }\n\n      return schematics_command_module_1.DEFAULT_SCHEMATICS_COLLECTION;\n    })();\n  }\n\n}\n\nexports.NewCommandModule = NewCommandModule;","map":{"version":3,"names":["Object","defineProperty","exports","value","NewCommandModule","command_module_1","require","schematics_command_module_1","version_1","SchematicsCommandModule","constructor","arguments","schematicName","scope","CommandScope","Out","allowPrivateSchematics","command","aliases","describe","builder","argv","localYargs","option","alias","type","options","collection","collectionNameFromArgs","context","args","collectionName","getCollectionFromConfig","workflow","getOrCreateWorkflowForBuilder","engine","createCollection","getSchematicOptions","addSchemaOptionsToCommand","run","_a","dryRun","force","interactive","defaults","schematicOptions","getOrCreateWorkflowForExecution","registry","addSmartDefaultProvider","VERSION","full","skipInstall","packageManager","undefined","ensureCompatibility","runSchematic","executionOptions","getSchematicCollections","schematicsInCollection","description","schematics","keys","includes","DEFAULT_SCHEMATICS_COLLECTION"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular/cli/src/commands/new/cli.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NewCommandModule = void 0;\nconst command_module_1 = require(\"../../command-builder/command-module\");\nconst schematics_command_module_1 = require(\"../../command-builder/schematics-command-module\");\nconst version_1 = require(\"../../utilities/version\");\nclass NewCommandModule extends schematics_command_module_1.SchematicsCommandModule {\n    constructor() {\n        super(...arguments);\n        this.schematicName = 'ng-new';\n        this.scope = command_module_1.CommandScope.Out;\n        this.allowPrivateSchematics = true;\n        this.command = 'new [name]';\n        this.aliases = 'n';\n        this.describe = 'Creates a new Angular workspace.';\n    }\n    async builder(argv) {\n        const localYargs = (await super.builder(argv)).option('collection', {\n            alias: 'c',\n            describe: 'A collection of schematics to use in generating the initial application.',\n            type: 'string',\n        });\n        const { options: { collection: collectionNameFromArgs }, } = this.context.args;\n        const collectionName = typeof collectionNameFromArgs === 'string'\n            ? collectionNameFromArgs\n            : await this.getCollectionFromConfig();\n        const workflow = await this.getOrCreateWorkflowForBuilder(collectionName);\n        const collection = workflow.engine.createCollection(collectionName);\n        const options = await this.getSchematicOptions(collection, this.schematicName, workflow);\n        return this.addSchemaOptionsToCommand(localYargs, options);\n    }\n    async run(options) {\n        var _a;\n        // Register the version of the CLI in the registry.\n        const collectionName = (_a = options.collection) !== null && _a !== void 0 ? _a : (await this.getCollectionFromConfig());\n        const { dryRun, force, interactive, defaults, collection, ...schematicOptions } = options;\n        const workflow = await this.getOrCreateWorkflowForExecution(collectionName, {\n            dryRun,\n            force,\n            interactive,\n            defaults,\n        });\n        workflow.registry.addSmartDefaultProvider('ng-cli-version', () => version_1.VERSION.full);\n        // Compatibility check for NPM 7\n        if (collectionName === '@schematics/angular' &&\n            !schematicOptions.skipInstall &&\n            (schematicOptions.packageManager === undefined || schematicOptions.packageManager === 'npm')) {\n            this.context.packageManager.ensureCompatibility();\n        }\n        return this.runSchematic({\n            collectionName,\n            schematicName: this.schematicName,\n            schematicOptions,\n            executionOptions: {\n                dryRun,\n                force,\n                interactive,\n                defaults,\n            },\n        });\n    }\n    /** Find a collection from config that has an `ng-new` schematic. */\n    async getCollectionFromConfig() {\n        for (const collectionName of await this.getSchematicCollections()) {\n            const workflow = this.getOrCreateWorkflowForBuilder(collectionName);\n            const collection = workflow.engine.createCollection(collectionName);\n            const schematicsInCollection = collection.description.schematics;\n            if (Object.keys(schematicsInCollection).includes(this.schematicName)) {\n                return collectionName;\n            }\n        }\n        return schematics_command_module_1.DEFAULT_SCHEMATICS_COLLECTION;\n    }\n}\nexports.NewCommandModule = NewCommandModule;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}