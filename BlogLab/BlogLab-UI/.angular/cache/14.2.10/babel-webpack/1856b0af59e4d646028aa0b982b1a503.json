{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TargetDefinitionCollection = exports.ProjectDefinitionCollection = void 0;\n\nclass DefinitionCollection {\n  constructor(initial, _listener) {\n    this._listener = _listener;\n    this._map = new Map(initial && Object.entries(initial));\n  }\n\n  delete(key) {\n    var _a;\n\n    const result = this._map.delete(key);\n\n    if (result) {\n      (_a = this._listener) === null || _a === void 0 ? void 0 : _a.call(this, key, undefined, this);\n    }\n\n    return result;\n  }\n\n  set(key, value) {\n    var _a;\n\n    const updatedValue = value !== this.get(key);\n\n    if (updatedValue) {\n      this._map.set(key, value);\n\n      (_a = this._listener) === null || _a === void 0 ? void 0 : _a.call(this, key, value, this);\n    }\n\n    return this;\n  }\n\n  forEach(callbackfn, thisArg) {\n    this._map.forEach((value, key) => callbackfn(value, key, this), thisArg);\n  }\n\n  get(key) {\n    return this._map.get(key);\n  }\n\n  has(key) {\n    return this._map.has(key);\n  }\n\n  get size() {\n    return this._map.size;\n  }\n\n  [Symbol.iterator]() {\n    return this._map[Symbol.iterator]();\n  }\n\n  entries() {\n    return this._map.entries();\n  }\n\n  keys() {\n    return this._map.keys();\n  }\n\n  values() {\n    return this._map.values();\n  }\n\n}\n\nfunction isJsonValue(value) {\n  const visited = new Set();\n\n  switch (typeof value) {\n    case 'boolean':\n    case 'number':\n    case 'string':\n      return true;\n\n    case 'object':\n      if (value === null) {\n        return true;\n      }\n\n      visited.add(value);\n\n      for (const property of Object.values(value)) {\n        if (typeof value === 'object' && visited.has(property)) {\n          continue;\n        }\n\n        if (!isJsonValue(property)) {\n          return false;\n        }\n      }\n\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass ProjectDefinitionCollection extends DefinitionCollection {\n  constructor(initial, listener) {\n    super(initial, listener);\n  }\n\n  add(definition) {\n    if (this.has(definition.name)) {\n      throw new Error('Project name already exists.');\n    }\n\n    this._validateName(definition.name);\n\n    const project = {\n      root: definition.root,\n      prefix: definition.prefix,\n      sourceRoot: definition.sourceRoot,\n      targets: new TargetDefinitionCollection(),\n      extensions: {}\n    };\n\n    if (definition.targets) {\n      for (const [name, target] of Object.entries(definition.targets)) {\n        if (target) {\n          project.targets.set(name, target);\n        }\n      }\n    }\n\n    for (const [name, value] of Object.entries(definition)) {\n      switch (name) {\n        case 'name':\n        case 'root':\n        case 'sourceRoot':\n        case 'prefix':\n        case 'targets':\n          break;\n\n        default:\n          if (isJsonValue(value)) {\n            project.extensions[name] = value;\n          } else {\n            throw new TypeError(`\"${name}\" must be a JSON value.`);\n          }\n\n          break;\n      }\n    }\n\n    super.set(definition.name, project);\n    return project;\n  }\n\n  set(name, value) {\n    this._validateName(name);\n\n    super.set(name, value);\n    return this;\n  }\n\n  _validateName(name) {\n    if (typeof name !== 'string' || !/^(?:@\\w[\\w.-]*\\/)?\\w[\\w.-]*$/.test(name)) {\n      throw new Error('Project name must be a valid npm package name.');\n    }\n  }\n\n}\n\nexports.ProjectDefinitionCollection = ProjectDefinitionCollection;\n\nclass TargetDefinitionCollection extends DefinitionCollection {\n  constructor(initial, listener) {\n    super(initial, listener);\n  }\n\n  add(definition) {\n    if (this.has(definition.name)) {\n      throw new Error('Target name already exists.');\n    }\n\n    this._validateName(definition.name);\n\n    const target = {\n      builder: definition.builder,\n      options: definition.options,\n      configurations: definition.configurations,\n      defaultConfiguration: definition.defaultConfiguration\n    };\n    super.set(definition.name, target);\n    return target;\n  }\n\n  set(name, value) {\n    this._validateName(name);\n\n    super.set(name, value);\n    return this;\n  }\n\n  _validateName(name) {\n    if (typeof name !== 'string') {\n      throw new TypeError('Target name must be a string.');\n    }\n  }\n\n}\n\nexports.TargetDefinitionCollection = TargetDefinitionCollection;","map":{"version":3,"names":["Object","defineProperty","exports","value","TargetDefinitionCollection","ProjectDefinitionCollection","DefinitionCollection","constructor","initial","_listener","_map","Map","entries","delete","key","_a","result","call","undefined","set","updatedValue","get","forEach","callbackfn","thisArg","has","size","Symbol","iterator","keys","values","isJsonValue","visited","Set","add","property","listener","definition","name","Error","_validateName","project","root","prefix","sourceRoot","targets","extensions","target","TypeError","test","builder","options","configurations","defaultConfiguration"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/core/src/workspace/definitions.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TargetDefinitionCollection = exports.ProjectDefinitionCollection = void 0;\nclass DefinitionCollection {\n    constructor(initial, _listener) {\n        this._listener = _listener;\n        this._map = new Map(initial && Object.entries(initial));\n    }\n    delete(key) {\n        var _a;\n        const result = this._map.delete(key);\n        if (result) {\n            (_a = this._listener) === null || _a === void 0 ? void 0 : _a.call(this, key, undefined, this);\n        }\n        return result;\n    }\n    set(key, value) {\n        var _a;\n        const updatedValue = value !== this.get(key);\n        if (updatedValue) {\n            this._map.set(key, value);\n            (_a = this._listener) === null || _a === void 0 ? void 0 : _a.call(this, key, value, this);\n        }\n        return this;\n    }\n    forEach(callbackfn, thisArg) {\n        this._map.forEach((value, key) => callbackfn(value, key, this), thisArg);\n    }\n    get(key) {\n        return this._map.get(key);\n    }\n    has(key) {\n        return this._map.has(key);\n    }\n    get size() {\n        return this._map.size;\n    }\n    [Symbol.iterator]() {\n        return this._map[Symbol.iterator]();\n    }\n    entries() {\n        return this._map.entries();\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n}\nfunction isJsonValue(value) {\n    const visited = new Set();\n    switch (typeof value) {\n        case 'boolean':\n        case 'number':\n        case 'string':\n            return true;\n        case 'object':\n            if (value === null) {\n                return true;\n            }\n            visited.add(value);\n            for (const property of Object.values(value)) {\n                if (typeof value === 'object' && visited.has(property)) {\n                    continue;\n                }\n                if (!isJsonValue(property)) {\n                    return false;\n                }\n            }\n            return true;\n        default:\n            return false;\n    }\n}\nclass ProjectDefinitionCollection extends DefinitionCollection {\n    constructor(initial, listener) {\n        super(initial, listener);\n    }\n    add(definition) {\n        if (this.has(definition.name)) {\n            throw new Error('Project name already exists.');\n        }\n        this._validateName(definition.name);\n        const project = {\n            root: definition.root,\n            prefix: definition.prefix,\n            sourceRoot: definition.sourceRoot,\n            targets: new TargetDefinitionCollection(),\n            extensions: {},\n        };\n        if (definition.targets) {\n            for (const [name, target] of Object.entries(definition.targets)) {\n                if (target) {\n                    project.targets.set(name, target);\n                }\n            }\n        }\n        for (const [name, value] of Object.entries(definition)) {\n            switch (name) {\n                case 'name':\n                case 'root':\n                case 'sourceRoot':\n                case 'prefix':\n                case 'targets':\n                    break;\n                default:\n                    if (isJsonValue(value)) {\n                        project.extensions[name] = value;\n                    }\n                    else {\n                        throw new TypeError(`\"${name}\" must be a JSON value.`);\n                    }\n                    break;\n            }\n        }\n        super.set(definition.name, project);\n        return project;\n    }\n    set(name, value) {\n        this._validateName(name);\n        super.set(name, value);\n        return this;\n    }\n    _validateName(name) {\n        if (typeof name !== 'string' || !/^(?:@\\w[\\w.-]*\\/)?\\w[\\w.-]*$/.test(name)) {\n            throw new Error('Project name must be a valid npm package name.');\n        }\n    }\n}\nexports.ProjectDefinitionCollection = ProjectDefinitionCollection;\nclass TargetDefinitionCollection extends DefinitionCollection {\n    constructor(initial, listener) {\n        super(initial, listener);\n    }\n    add(definition) {\n        if (this.has(definition.name)) {\n            throw new Error('Target name already exists.');\n        }\n        this._validateName(definition.name);\n        const target = {\n            builder: definition.builder,\n            options: definition.options,\n            configurations: definition.configurations,\n            defaultConfiguration: definition.defaultConfiguration,\n        };\n        super.set(definition.name, target);\n        return target;\n    }\n    set(name, value) {\n        this._validateName(name);\n        super.set(name, value);\n        return this;\n    }\n    _validateName(name) {\n        if (typeof name !== 'string') {\n            throw new TypeError('Target name must be a string.');\n        }\n    }\n}\nexports.TargetDefinitionCollection = TargetDefinitionCollection;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}