{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TreeSymbol = exports.FileVisitorCancelToken = exports.MergeStrategy = void 0;\nvar MergeStrategy;\n\n(function (MergeStrategy) {\n  MergeStrategy[MergeStrategy[\"AllowOverwriteConflict\"] = 2] = \"AllowOverwriteConflict\";\n  MergeStrategy[MergeStrategy[\"AllowCreationConflict\"] = 4] = \"AllowCreationConflict\";\n  MergeStrategy[MergeStrategy[\"AllowDeleteConflict\"] = 8] = \"AllowDeleteConflict\"; // Uses the default strategy.\n\n  MergeStrategy[MergeStrategy[\"Default\"] = 0] = \"Default\"; // Error out if 2 files have the same path. It is useful to have a different value than\n  // Default in this case as the tooling Default might differ.\n\n  MergeStrategy[MergeStrategy[\"Error\"] = 1] = \"Error\"; // Only content conflicts are overwritten.\n\n  MergeStrategy[MergeStrategy[\"ContentOnly\"] = 2] = \"ContentOnly\"; // Overwrite everything with the latest change.\n\n  MergeStrategy[MergeStrategy[\"Overwrite\"] = 14] = \"Overwrite\";\n})(MergeStrategy = exports.MergeStrategy || (exports.MergeStrategy = {})); // eslint-disable-next-line @typescript-eslint/no-inferrable-types\n\n\nexports.FileVisitorCancelToken = Symbol();\n\nexports.TreeSymbol = function () {\n  const globalSymbol = typeof window == 'object' && window.window === window && window.Symbol || typeof self == 'object' && self.self === self && self.Symbol || typeof global == 'object' && global.global === global && global.Symbol;\n\n  if (!globalSymbol) {\n    return Symbol('schematic-tree');\n  }\n\n  if (!globalSymbol.schematicTree) {\n    globalSymbol.schematicTree = Symbol('schematic-tree');\n  }\n\n  return globalSymbol.schematicTree;\n}(); // eslint-disable-next-line @typescript-eslint/no-namespace\n\n\nvar Tree;\n\n(function (Tree) {\n  function isTree(maybeTree) {\n    return exports.TreeSymbol in maybeTree;\n  }\n\n  Tree.isTree = isTree;\n})(Tree || (Tree = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","TreeSymbol","FileVisitorCancelToken","MergeStrategy","Symbol","globalSymbol","window","self","global","schematicTree","Tree","isTree","maybeTree"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/schematics/src/tree/interface.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TreeSymbol = exports.FileVisitorCancelToken = exports.MergeStrategy = void 0;\nvar MergeStrategy;\n(function (MergeStrategy) {\n    MergeStrategy[MergeStrategy[\"AllowOverwriteConflict\"] = 2] = \"AllowOverwriteConflict\";\n    MergeStrategy[MergeStrategy[\"AllowCreationConflict\"] = 4] = \"AllowCreationConflict\";\n    MergeStrategy[MergeStrategy[\"AllowDeleteConflict\"] = 8] = \"AllowDeleteConflict\";\n    // Uses the default strategy.\n    MergeStrategy[MergeStrategy[\"Default\"] = 0] = \"Default\";\n    // Error out if 2 files have the same path. It is useful to have a different value than\n    // Default in this case as the tooling Default might differ.\n    MergeStrategy[MergeStrategy[\"Error\"] = 1] = \"Error\";\n    // Only content conflicts are overwritten.\n    MergeStrategy[MergeStrategy[\"ContentOnly\"] = 2] = \"ContentOnly\";\n    // Overwrite everything with the latest change.\n    MergeStrategy[MergeStrategy[\"Overwrite\"] = 14] = \"Overwrite\";\n})(MergeStrategy = exports.MergeStrategy || (exports.MergeStrategy = {}));\n// eslint-disable-next-line @typescript-eslint/no-inferrable-types\nexports.FileVisitorCancelToken = Symbol();\nexports.TreeSymbol = (function () {\n    const globalSymbol = (typeof window == 'object' && window.window === window && window.Symbol) ||\n        (typeof self == 'object' && self.self === self && self.Symbol) ||\n        (typeof global == 'object' && global.global === global && global.Symbol);\n    if (!globalSymbol) {\n        return Symbol('schematic-tree');\n    }\n    if (!globalSymbol.schematicTree) {\n        globalSymbol.schematicTree = Symbol('schematic-tree');\n    }\n    return globalSymbol.schematicTree;\n})();\n// eslint-disable-next-line @typescript-eslint/no-namespace\nvar Tree;\n(function (Tree) {\n    function isTree(maybeTree) {\n        return exports.TreeSymbol in maybeTree;\n    }\n    Tree.isTree = isTree;\n})(Tree || (Tree = {}));\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqBF,OAAO,CAACG,sBAAR,GAAiCH,OAAO,CAACI,aAAR,GAAwB,KAAK,CAAnF;AACA,IAAIA,aAAJ;;AACA,CAAC,UAAUA,aAAV,EAAyB;EACtBA,aAAa,CAACA,aAAa,CAAC,wBAAD,CAAb,GAA0C,CAA3C,CAAb,GAA6D,wBAA7D;EACAA,aAAa,CAACA,aAAa,CAAC,uBAAD,CAAb,GAAyC,CAA1C,CAAb,GAA4D,uBAA5D;EACAA,aAAa,CAACA,aAAa,CAAC,qBAAD,CAAb,GAAuC,CAAxC,CAAb,GAA0D,qBAA1D,CAHsB,CAItB;;EACAA,aAAa,CAACA,aAAa,CAAC,SAAD,CAAb,GAA2B,CAA5B,CAAb,GAA8C,SAA9C,CALsB,CAMtB;EACA;;EACAA,aAAa,CAACA,aAAa,CAAC,OAAD,CAAb,GAAyB,CAA1B,CAAb,GAA4C,OAA5C,CARsB,CAStB;;EACAA,aAAa,CAACA,aAAa,CAAC,aAAD,CAAb,GAA+B,CAAhC,CAAb,GAAkD,aAAlD,CAVsB,CAWtB;;EACAA,aAAa,CAACA,aAAa,CAAC,WAAD,CAAb,GAA6B,EAA9B,CAAb,GAAiD,WAAjD;AACH,CAbD,EAaGA,aAAa,GAAGJ,OAAO,CAACI,aAAR,KAA0BJ,OAAO,CAACI,aAAR,GAAwB,EAAlD,CAbnB,E,CAcA;;;AACAJ,OAAO,CAACG,sBAAR,GAAiCE,MAAM,EAAvC;;AACAL,OAAO,CAACE,UAAR,GAAsB,YAAY;EAC9B,MAAMI,YAAY,GAAI,OAAOC,MAAP,IAAiB,QAAjB,IAA6BA,MAAM,CAACA,MAAP,KAAkBA,MAA/C,IAAyDA,MAAM,CAACF,MAAjE,IAChB,OAAOG,IAAP,IAAe,QAAf,IAA2BA,IAAI,CAACA,IAAL,KAAcA,IAAzC,IAAiDA,IAAI,CAACH,MADtC,IAEhB,OAAOI,MAAP,IAAiB,QAAjB,IAA6BA,MAAM,CAACA,MAAP,KAAkBA,MAA/C,IAAyDA,MAAM,CAACJ,MAFrE;;EAGA,IAAI,CAACC,YAAL,EAAmB;IACf,OAAOD,MAAM,CAAC,gBAAD,CAAb;EACH;;EACD,IAAI,CAACC,YAAY,CAACI,aAAlB,EAAiC;IAC7BJ,YAAY,CAACI,aAAb,GAA6BL,MAAM,CAAC,gBAAD,CAAnC;EACH;;EACD,OAAOC,YAAY,CAACI,aAApB;AACH,CAXoB,EAArB,C,CAYA;;;AACA,IAAIC,IAAJ;;AACA,CAAC,UAAUA,IAAV,EAAgB;EACb,SAASC,MAAT,CAAgBC,SAAhB,EAA2B;IACvB,OAAOb,OAAO,CAACE,UAAR,IAAsBW,SAA7B;EACH;;EACDF,IAAI,CAACC,MAAL,GAAcA,MAAd;AACH,CALD,EAKGD,IAAI,KAAKA,IAAI,GAAG,EAAZ,CALP"},"metadata":{},"sourceType":"script"}