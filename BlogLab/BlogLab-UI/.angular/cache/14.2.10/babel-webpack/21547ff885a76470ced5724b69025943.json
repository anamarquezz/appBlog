{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScopedTree = void 0;\n\nconst core_1 = require(\"@angular-devkit/core\");\n\nconst delegate_1 = require(\"./delegate\");\n\nconst interface_1 = require(\"./interface\");\n\nclass ScopedFileEntry {\n  constructor(_base, scope) {\n    this._base = _base;\n    this.scope = scope;\n  }\n\n  get path() {\n    return (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this.scope, this._base.path));\n  }\n\n  get content() {\n    return this._base.content;\n  }\n\n}\n\nclass ScopedDirEntry {\n  constructor(_base, scope) {\n    this._base = _base;\n    this.scope = scope;\n  }\n\n  get parent() {\n    if (!this._base.parent || this._base.path == this.scope) {\n      return null;\n    }\n\n    return new ScopedDirEntry(this._base.parent, this.scope);\n  }\n\n  get path() {\n    return (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this.scope, this._base.path));\n  }\n\n  get subdirs() {\n    return this._base.subdirs;\n  }\n\n  get subfiles() {\n    return this._base.subfiles;\n  }\n\n  dir(name) {\n    const entry = this._base.dir(name);\n\n    return entry && new ScopedDirEntry(entry, this.scope);\n  }\n\n  file(name) {\n    const entry = this._base.file(name);\n\n    return entry && new ScopedFileEntry(entry, this.scope);\n  }\n\n  visit(visitor) {\n    return this._base.visit((path, entry) => {\n      visitor((0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this.scope, path)), entry && new ScopedFileEntry(entry, this.scope));\n    });\n  }\n\n}\n\nclass ScopedTree {\n  constructor(_base, scope) {\n    this._base = _base;\n    const normalizedScope = (0, core_1.normalize)('/' + scope);\n    this._root = new ScopedDirEntry(this._base.getDir(normalizedScope), normalizedScope);\n  }\n\n  get root() {\n    return this._root;\n  }\n\n  branch() {\n    return new ScopedTree(this._base.branch(), this._root.scope);\n  }\n\n  merge(other, strategy) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    const delegate = new class extends delegate_1.DelegateTree {\n      get actions() {\n        return other.actions.map(action => self._fullPathAction(action));\n      }\n\n    }(other);\n\n    this._base.merge(delegate, strategy);\n  } // Readonly.\n\n\n  read(path) {\n    return this._base.read(this._fullPath(path));\n  }\n\n  readText(path) {\n    return this._base.readText(this._fullPath(path));\n  }\n\n  readJson(path) {\n    return this._base.readJson(this._fullPath(path));\n  }\n\n  exists(path) {\n    return this._base.exists(this._fullPath(path));\n  }\n\n  get(path) {\n    const entry = this._base.get(this._fullPath(path));\n\n    return entry && new ScopedFileEntry(entry, this._root.scope);\n  }\n\n  getDir(path) {\n    const entry = this._base.getDir(this._fullPath(path));\n\n    return entry && new ScopedDirEntry(entry, this._root.scope);\n  }\n\n  visit(visitor) {\n    return this._root.visit(visitor);\n  } // Change content of host files.\n\n\n  overwrite(path, content) {\n    return this._base.overwrite(this._fullPath(path), content);\n  }\n\n  beginUpdate(path) {\n    return this._base.beginUpdate(this._fullPath(path));\n  }\n\n  commitUpdate(record) {\n    return this._base.commitUpdate(record);\n  } // Structural methods.\n\n\n  create(path, content) {\n    return this._base.create(this._fullPath(path), content);\n  }\n\n  delete(path) {\n    return this._base.delete(this._fullPath(path));\n  }\n\n  rename(from, to) {\n    return this._base.rename(this._fullPath(from), this._fullPath(to));\n  }\n\n  apply(action, strategy) {\n    return this._base.apply(this._fullPathAction(action), strategy);\n  }\n\n  get actions() {\n    const scopedActions = [];\n\n    for (const action of this._base.actions) {\n      if (!action.path.startsWith(this._root.scope + '/')) {\n        continue;\n      }\n\n      if (action.kind !== 'r') {\n        scopedActions.push({ ...action,\n          path: (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this._root.scope, action.path))\n        });\n      } else if (action.to.startsWith(this._root.scope + '/')) {\n        scopedActions.push({ ...action,\n          path: (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this._root.scope, action.path)),\n          to: (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this._root.scope, action.to))\n        });\n      }\n    }\n\n    return scopedActions;\n  }\n\n  [interface_1.TreeSymbol]() {\n    return this;\n  }\n\n  _fullPath(path) {\n    return (0, core_1.join)(this._root.scope, (0, core_1.normalize)('/' + path));\n  }\n\n  _fullPathAction(action) {\n    let fullPathAction;\n\n    if (action.kind === 'r') {\n      fullPathAction = { ...action,\n        path: this._fullPath(action.path),\n        to: this._fullPath(action.to)\n      };\n    } else {\n      fullPathAction = { ...action,\n        path: this._fullPath(action.path)\n      };\n    }\n\n    return fullPathAction;\n  }\n\n}\n\nexports.ScopedTree = ScopedTree;","map":{"version":3,"names":["Object","defineProperty","exports","value","ScopedTree","core_1","require","delegate_1","interface_1","ScopedFileEntry","constructor","_base","scope","path","join","NormalizedRoot","relative","content","ScopedDirEntry","parent","subdirs","subfiles","dir","name","entry","file","visit","visitor","normalizedScope","normalize","_root","getDir","root","branch","merge","other","strategy","self","delegate","DelegateTree","actions","map","action","_fullPathAction","read","_fullPath","readText","readJson","exists","get","overwrite","beginUpdate","commitUpdate","record","create","delete","rename","from","to","apply","scopedActions","startsWith","kind","push","TreeSymbol","fullPathAction"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/schematics/src/tree/scoped.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScopedTree = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst delegate_1 = require(\"./delegate\");\nconst interface_1 = require(\"./interface\");\nclass ScopedFileEntry {\n    constructor(_base, scope) {\n        this._base = _base;\n        this.scope = scope;\n    }\n    get path() {\n        return (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this.scope, this._base.path));\n    }\n    get content() {\n        return this._base.content;\n    }\n}\nclass ScopedDirEntry {\n    constructor(_base, scope) {\n        this._base = _base;\n        this.scope = scope;\n    }\n    get parent() {\n        if (!this._base.parent || this._base.path == this.scope) {\n            return null;\n        }\n        return new ScopedDirEntry(this._base.parent, this.scope);\n    }\n    get path() {\n        return (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this.scope, this._base.path));\n    }\n    get subdirs() {\n        return this._base.subdirs;\n    }\n    get subfiles() {\n        return this._base.subfiles;\n    }\n    dir(name) {\n        const entry = this._base.dir(name);\n        return entry && new ScopedDirEntry(entry, this.scope);\n    }\n    file(name) {\n        const entry = this._base.file(name);\n        return entry && new ScopedFileEntry(entry, this.scope);\n    }\n    visit(visitor) {\n        return this._base.visit((path, entry) => {\n            visitor((0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this.scope, path)), entry && new ScopedFileEntry(entry, this.scope));\n        });\n    }\n}\nclass ScopedTree {\n    constructor(_base, scope) {\n        this._base = _base;\n        const normalizedScope = (0, core_1.normalize)('/' + scope);\n        this._root = new ScopedDirEntry(this._base.getDir(normalizedScope), normalizedScope);\n    }\n    get root() {\n        return this._root;\n    }\n    branch() {\n        return new ScopedTree(this._base.branch(), this._root.scope);\n    }\n    merge(other, strategy) {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const self = this;\n        const delegate = new (class extends delegate_1.DelegateTree {\n            get actions() {\n                return other.actions.map((action) => self._fullPathAction(action));\n            }\n        })(other);\n        this._base.merge(delegate, strategy);\n    }\n    // Readonly.\n    read(path) {\n        return this._base.read(this._fullPath(path));\n    }\n    readText(path) {\n        return this._base.readText(this._fullPath(path));\n    }\n    readJson(path) {\n        return this._base.readJson(this._fullPath(path));\n    }\n    exists(path) {\n        return this._base.exists(this._fullPath(path));\n    }\n    get(path) {\n        const entry = this._base.get(this._fullPath(path));\n        return entry && new ScopedFileEntry(entry, this._root.scope);\n    }\n    getDir(path) {\n        const entry = this._base.getDir(this._fullPath(path));\n        return entry && new ScopedDirEntry(entry, this._root.scope);\n    }\n    visit(visitor) {\n        return this._root.visit(visitor);\n    }\n    // Change content of host files.\n    overwrite(path, content) {\n        return this._base.overwrite(this._fullPath(path), content);\n    }\n    beginUpdate(path) {\n        return this._base.beginUpdate(this._fullPath(path));\n    }\n    commitUpdate(record) {\n        return this._base.commitUpdate(record);\n    }\n    // Structural methods.\n    create(path, content) {\n        return this._base.create(this._fullPath(path), content);\n    }\n    delete(path) {\n        return this._base.delete(this._fullPath(path));\n    }\n    rename(from, to) {\n        return this._base.rename(this._fullPath(from), this._fullPath(to));\n    }\n    apply(action, strategy) {\n        return this._base.apply(this._fullPathAction(action), strategy);\n    }\n    get actions() {\n        const scopedActions = [];\n        for (const action of this._base.actions) {\n            if (!action.path.startsWith(this._root.scope + '/')) {\n                continue;\n            }\n            if (action.kind !== 'r') {\n                scopedActions.push({\n                    ...action,\n                    path: (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this._root.scope, action.path)),\n                });\n            }\n            else if (action.to.startsWith(this._root.scope + '/')) {\n                scopedActions.push({\n                    ...action,\n                    path: (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this._root.scope, action.path)),\n                    to: (0, core_1.join)(core_1.NormalizedRoot, (0, core_1.relative)(this._root.scope, action.to)),\n                });\n            }\n        }\n        return scopedActions;\n    }\n    [interface_1.TreeSymbol]() {\n        return this;\n    }\n    _fullPath(path) {\n        return (0, core_1.join)(this._root.scope, (0, core_1.normalize)('/' + path));\n    }\n    _fullPathAction(action) {\n        let fullPathAction;\n        if (action.kind === 'r') {\n            fullPathAction = {\n                ...action,\n                path: this._fullPath(action.path),\n                to: this._fullPath(action.to),\n            };\n        }\n        else {\n            fullPathAction = {\n                ...action,\n                path: this._fullPath(action.path),\n            };\n        }\n        return fullPathAction;\n    }\n}\nexports.ScopedTree = ScopedTree;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}