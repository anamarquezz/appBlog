{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseJsonPointer = exports.joinJsonPointer = exports.buildJsonPointer = void 0;\n\nfunction buildJsonPointer(fragments) {\n  return '/' + fragments.map(f => {\n    return f.replace(/~/g, '~0').replace(/\\//g, '~1');\n  }).join('/');\n}\n\nexports.buildJsonPointer = buildJsonPointer;\n\nfunction joinJsonPointer(root, ...others) {\n  if (root == '/') {\n    return buildJsonPointer(others);\n  }\n\n  return root + buildJsonPointer(others);\n}\n\nexports.joinJsonPointer = joinJsonPointer;\n\nfunction parseJsonPointer(pointer) {\n  if (pointer === '') {\n    return [];\n  }\n\n  if (pointer.charAt(0) !== '/') {\n    throw new Error('Relative pointer: ' + pointer);\n  }\n\n  return pointer.substring(1).split(/\\//).map(str => str.replace(/~1/g, '/').replace(/~0/g, '~'));\n}\n\nexports.parseJsonPointer = parseJsonPointer;","map":{"version":3,"names":["Object","defineProperty","exports","value","parseJsonPointer","joinJsonPointer","buildJsonPointer","fragments","map","f","replace","join","root","others","pointer","charAt","Error","substring","split","str"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/core/src/json/schema/pointer.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseJsonPointer = exports.joinJsonPointer = exports.buildJsonPointer = void 0;\nfunction buildJsonPointer(fragments) {\n    return ('/' +\n        fragments\n            .map((f) => {\n            return f.replace(/~/g, '~0').replace(/\\//g, '~1');\n        })\n            .join('/'));\n}\nexports.buildJsonPointer = buildJsonPointer;\nfunction joinJsonPointer(root, ...others) {\n    if (root == '/') {\n        return buildJsonPointer(others);\n    }\n    return (root + buildJsonPointer(others));\n}\nexports.joinJsonPointer = joinJsonPointer;\nfunction parseJsonPointer(pointer) {\n    if (pointer === '') {\n        return [];\n    }\n    if (pointer.charAt(0) !== '/') {\n        throw new Error('Relative pointer: ' + pointer);\n    }\n    return pointer\n        .substring(1)\n        .split(/\\//)\n        .map((str) => str.replace(/~1/g, '/').replace(/~0/g, '~'));\n}\nexports.parseJsonPointer = parseJsonPointer;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2BF,OAAO,CAACG,eAAR,GAA0BH,OAAO,CAACI,gBAAR,GAA2B,KAAK,CAArF;;AACA,SAASA,gBAAT,CAA0BC,SAA1B,EAAqC;EACjC,OAAQ,MACJA,SAAS,CACJC,GADL,CACUC,CAAD,IAAO;IACZ,OAAOA,CAAC,CAACC,OAAF,CAAU,IAAV,EAAgB,IAAhB,EAAsBA,OAAtB,CAA8B,KAA9B,EAAqC,IAArC,CAAP;EACH,CAHD,EAIKC,IAJL,CAIU,GAJV,CADJ;AAMH;;AACDT,OAAO,CAACI,gBAAR,GAA2BA,gBAA3B;;AACA,SAASD,eAAT,CAAyBO,IAAzB,EAA+B,GAAGC,MAAlC,EAA0C;EACtC,IAAID,IAAI,IAAI,GAAZ,EAAiB;IACb,OAAON,gBAAgB,CAACO,MAAD,CAAvB;EACH;;EACD,OAAQD,IAAI,GAAGN,gBAAgB,CAACO,MAAD,CAA/B;AACH;;AACDX,OAAO,CAACG,eAAR,GAA0BA,eAA1B;;AACA,SAASD,gBAAT,CAA0BU,OAA1B,EAAmC;EAC/B,IAAIA,OAAO,KAAK,EAAhB,EAAoB;IAChB,OAAO,EAAP;EACH;;EACD,IAAIA,OAAO,CAACC,MAAR,CAAe,CAAf,MAAsB,GAA1B,EAA+B;IAC3B,MAAM,IAAIC,KAAJ,CAAU,uBAAuBF,OAAjC,CAAN;EACH;;EACD,OAAOA,OAAO,CACTG,SADE,CACQ,CADR,EAEFC,KAFE,CAEI,IAFJ,EAGFV,GAHE,CAGGW,GAAD,IAASA,GAAG,CAACT,OAAJ,CAAY,KAAZ,EAAmB,GAAnB,EAAwBA,OAAxB,CAAgC,KAAhC,EAAuC,GAAvC,CAHX,CAAP;AAIH;;AACDR,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B"},"metadata":{},"sourceType":"script"}