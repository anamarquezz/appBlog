{"ast":null,"code":"module.exports = extractDescription; // Extracts description from contents of a readme file in markdown format\n\nfunction extractDescription(d) {\n  if (!d) {\n    return;\n  }\n\n  if (d === 'ERROR: No README data found!') {\n    return;\n  } // the first block of text before the first heading\n  // that isn't the first line heading\n\n\n  d = d.trim().split('\\n');\n  let s = 0;\n\n  while (d[s] && d[s].trim().match(/^(#|$)/)) {\n    s++;\n  }\n\n  const l = d.length;\n  let e = s + 1;\n\n  while (e < l && d[e].trim()) {\n    e++;\n  }\n\n  return d.slice(s, e).join(' ').trim();\n}","map":{"version":3,"names":["module","exports","extractDescription","d","trim","split","s","match","l","length","e","slice","join"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/normalize-package-data/lib/extract_description.js"],"sourcesContent":["module.exports = extractDescription\n\n// Extracts description from contents of a readme file in markdown format\nfunction extractDescription (d) {\n  if (!d) {\n    return\n  }\n  if (d === 'ERROR: No README data found!') {\n    return\n  }\n  // the first block of text before the first heading\n  // that isn't the first line heading\n  d = d.trim().split('\\n')\n  let s = 0\n  while (d[s] && d[s].trim().match(/^(#|$)/)) {\n    s++\n  }\n  const l = d.length\n  let e = s + 1\n  while (e < l && d[e].trim()) {\n    e++\n  }\n  return d.slice(s, e).join(' ').trim()\n}\n"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiBC,kBAAjB,C,CAEA;;AACA,SAASA,kBAAT,CAA6BC,CAA7B,EAAgC;EAC9B,IAAI,CAACA,CAAL,EAAQ;IACN;EACD;;EACD,IAAIA,CAAC,KAAK,8BAAV,EAA0C;IACxC;EACD,CAN6B,CAO9B;EACA;;;EACAA,CAAC,GAAGA,CAAC,CAACC,IAAF,GAASC,KAAT,CAAe,IAAf,CAAJ;EACA,IAAIC,CAAC,GAAG,CAAR;;EACA,OAAOH,CAAC,CAACG,CAAD,CAAD,IAAQH,CAAC,CAACG,CAAD,CAAD,CAAKF,IAAL,GAAYG,KAAZ,CAAkB,QAAlB,CAAf,EAA4C;IAC1CD,CAAC;EACF;;EACD,MAAME,CAAC,GAAGL,CAAC,CAACM,MAAZ;EACA,IAAIC,CAAC,GAAGJ,CAAC,GAAG,CAAZ;;EACA,OAAOI,CAAC,GAAGF,CAAJ,IAASL,CAAC,CAACO,CAAD,CAAD,CAAKN,IAAL,EAAhB,EAA6B;IAC3BM,CAAC;EACF;;EACD,OAAOP,CAAC,CAACQ,KAAF,CAAQL,CAAR,EAAWI,CAAX,EAAcE,IAAd,CAAmB,GAAnB,EAAwBR,IAAxB,EAAP;AACD"},"metadata":{},"sourceType":"script"}