{"ast":null,"code":"const os = require('os');\n\nconst {\n  resolve\n} = require('path');\n\nmodule.exports = (fakePlatform = false) => {\n  const temp = os.tmpdir();\n  const uidOrPid = process.getuid ? process.getuid() : process.pid;\n  const home = os.homedir() || resolve(temp, 'npm-' + uidOrPid);\n  const platform = fakePlatform || process.platform;\n  const cacheExtra = platform === 'win32' ? 'npm-cache' : '.npm';\n  const cacheRoot = platform === 'win32' && process.env.LOCALAPPDATA || home;\n  return resolve(cacheRoot, cacheExtra, '_cacache');\n};","map":{"version":3,"names":["os","require","resolve","module","exports","fakePlatform","temp","tmpdir","uidOrPid","process","getuid","pid","home","homedir","platform","cacheExtra","cacheRoot","env","LOCALAPPDATA"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/pacote/lib/util/cache-dir.js"],"sourcesContent":["const os = require('os')\nconst { resolve } = require('path')\n\nmodule.exports = (fakePlatform = false) => {\n  const temp = os.tmpdir()\n  const uidOrPid = process.getuid ? process.getuid() : process.pid\n  const home = os.homedir() || resolve(temp, 'npm-' + uidOrPid)\n  const platform = fakePlatform || process.platform\n  const cacheExtra = platform === 'win32' ? 'npm-cache' : '.npm'\n  const cacheRoot = (platform === 'win32' && process.env.LOCALAPPDATA) || home\n  return resolve(cacheRoot, cacheExtra, '_cacache')\n}\n"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAM;EAAEC;AAAF,IAAcD,OAAO,CAAC,MAAD,CAA3B;;AAEAE,MAAM,CAACC,OAAP,GAAiB,CAACC,YAAY,GAAG,KAAhB,KAA0B;EACzC,MAAMC,IAAI,GAAGN,EAAE,CAACO,MAAH,EAAb;EACA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,MAAR,GAAiBD,OAAO,CAACC,MAAR,EAAjB,GAAoCD,OAAO,CAACE,GAA7D;EACA,MAAMC,IAAI,GAAGZ,EAAE,CAACa,OAAH,MAAgBX,OAAO,CAACI,IAAD,EAAO,SAASE,QAAhB,CAApC;EACA,MAAMM,QAAQ,GAAGT,YAAY,IAAII,OAAO,CAACK,QAAzC;EACA,MAAMC,UAAU,GAAGD,QAAQ,KAAK,OAAb,GAAuB,WAAvB,GAAqC,MAAxD;EACA,MAAME,SAAS,GAAIF,QAAQ,KAAK,OAAb,IAAwBL,OAAO,CAACQ,GAAR,CAAYC,YAArC,IAAsDN,IAAxE;EACA,OAAOV,OAAO,CAACc,SAAD,EAAYD,UAAZ,EAAwB,UAAxB,CAAd;AACD,CARD"},"metadata":{},"sourceType":"script"}