{"ast":null,"code":"'use strict'; // eslint-disable-next-line max-len\n// this code adapted from: https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/\n\nconst cmd = (input, doubleEscape) => {\n  if (!input.length) {\n    return '\"\"';\n  }\n\n  let result;\n\n  if (!/[ \\t\\n\\v\"]/.test(input)) {\n    result = input;\n  } else {\n    result = '\"';\n\n    for (let i = 0; i <= input.length; ++i) {\n      let slashCount = 0;\n\n      while (input[i] === '\\\\') {\n        ++i;\n        ++slashCount;\n      }\n\n      if (i === input.length) {\n        result += '\\\\'.repeat(slashCount * 2);\n        break;\n      }\n\n      if (input[i] === '\"') {\n        result += '\\\\'.repeat(slashCount * 2 + 1);\n        result += input[i];\n      } else {\n        result += '\\\\'.repeat(slashCount);\n        result += input[i];\n      }\n    }\n\n    result += '\"';\n  } // and finally, prefix shell meta chars with a ^\n\n\n  result = result.replace(/[ !%^&()<>|\"]/g, '^$&');\n\n  if (doubleEscape) {\n    result = result.replace(/[ !%^&()<>|\"]/g, '^$&');\n  }\n\n  return result;\n};\n\nconst sh = input => {\n  if (!input.length) {\n    return `''`;\n  }\n\n  if (!/[\\t\\n\\r \"#$&'()*;<>?\\\\`|~]/.test(input)) {\n    return input;\n  } // replace single quotes with '\\'' and wrap the whole result in a fresh set of quotes\n\n\n  const result = `'${input.replace(/'/g, `'\\\\''`)}'` // if the input string already had single quotes around it, clean those up\n  .replace(/^(?:'')+(?!$)/, '').replace(/\\\\'''/g, `\\\\'`);\n  return result;\n};\n\nmodule.exports = {\n  cmd,\n  sh\n};","map":{"version":3,"names":["cmd","input","doubleEscape","length","result","test","i","slashCount","repeat","replace","sh","module","exports"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@npmcli/run-script/lib/escape.js"],"sourcesContent":["'use strict'\n\n// eslint-disable-next-line max-len\n// this code adapted from: https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/\nconst cmd = (input, doubleEscape) => {\n  if (!input.length) {\n    return '\"\"'\n  }\n\n  let result\n  if (!/[ \\t\\n\\v\"]/.test(input)) {\n    result = input\n  } else {\n    result = '\"'\n    for (let i = 0; i <= input.length; ++i) {\n      let slashCount = 0\n      while (input[i] === '\\\\') {\n        ++i\n        ++slashCount\n      }\n\n      if (i === input.length) {\n        result += '\\\\'.repeat(slashCount * 2)\n        break\n      }\n\n      if (input[i] === '\"') {\n        result += '\\\\'.repeat(slashCount * 2 + 1)\n        result += input[i]\n      } else {\n        result += '\\\\'.repeat(slashCount)\n        result += input[i]\n      }\n    }\n    result += '\"'\n  }\n\n  // and finally, prefix shell meta chars with a ^\n  result = result.replace(/[ !%^&()<>|\"]/g, '^$&')\n  if (doubleEscape) {\n    result = result.replace(/[ !%^&()<>|\"]/g, '^$&')\n  }\n\n  return result\n}\n\nconst sh = (input) => {\n  if (!input.length) {\n    return `''`\n  }\n\n  if (!/[\\t\\n\\r \"#$&'()*;<>?\\\\`|~]/.test(input)) {\n    return input\n  }\n\n  // replace single quotes with '\\'' and wrap the whole result in a fresh set of quotes\n  const result = `'${input.replace(/'/g, `'\\\\''`)}'`\n    // if the input string already had single quotes around it, clean those up\n    .replace(/^(?:'')+(?!$)/, '')\n    .replace(/\\\\'''/g, `\\\\'`)\n\n  return result\n}\n\nmodule.exports = {\n  cmd,\n  sh,\n}\n"],"mappings":"AAAA,a,CAEA;AACA;;AACA,MAAMA,GAAG,GAAG,CAACC,KAAD,EAAQC,YAAR,KAAyB;EACnC,IAAI,CAACD,KAAK,CAACE,MAAX,EAAmB;IACjB,OAAO,IAAP;EACD;;EAED,IAAIC,MAAJ;;EACA,IAAI,CAAC,aAAaC,IAAb,CAAkBJ,KAAlB,CAAL,EAA+B;IAC7BG,MAAM,GAAGH,KAAT;EACD,CAFD,MAEO;IACLG,MAAM,GAAG,GAAT;;IACA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIL,KAAK,CAACE,MAA3B,EAAmC,EAAEG,CAArC,EAAwC;MACtC,IAAIC,UAAU,GAAG,CAAjB;;MACA,OAAON,KAAK,CAACK,CAAD,CAAL,KAAa,IAApB,EAA0B;QACxB,EAAEA,CAAF;QACA,EAAEC,UAAF;MACD;;MAED,IAAID,CAAC,KAAKL,KAAK,CAACE,MAAhB,EAAwB;QACtBC,MAAM,IAAI,KAAKI,MAAL,CAAYD,UAAU,GAAG,CAAzB,CAAV;QACA;MACD;;MAED,IAAIN,KAAK,CAACK,CAAD,CAAL,KAAa,GAAjB,EAAsB;QACpBF,MAAM,IAAI,KAAKI,MAAL,CAAYD,UAAU,GAAG,CAAb,GAAiB,CAA7B,CAAV;QACAH,MAAM,IAAIH,KAAK,CAACK,CAAD,CAAf;MACD,CAHD,MAGO;QACLF,MAAM,IAAI,KAAKI,MAAL,CAAYD,UAAZ,CAAV;QACAH,MAAM,IAAIH,KAAK,CAACK,CAAD,CAAf;MACD;IACF;;IACDF,MAAM,IAAI,GAAV;EACD,CA/BkC,CAiCnC;;;EACAA,MAAM,GAAGA,MAAM,CAACK,OAAP,CAAe,gBAAf,EAAiC,KAAjC,CAAT;;EACA,IAAIP,YAAJ,EAAkB;IAChBE,MAAM,GAAGA,MAAM,CAACK,OAAP,CAAe,gBAAf,EAAiC,KAAjC,CAAT;EACD;;EAED,OAAOL,MAAP;AACD,CAxCD;;AA0CA,MAAMM,EAAE,GAAIT,KAAD,IAAW;EACpB,IAAI,CAACA,KAAK,CAACE,MAAX,EAAmB;IACjB,OAAQ,IAAR;EACD;;EAED,IAAI,CAAC,6BAA6BE,IAA7B,CAAkCJ,KAAlC,CAAL,EAA+C;IAC7C,OAAOA,KAAP;EACD,CAPmB,CASpB;;;EACA,MAAMG,MAAM,GAAI,IAAGH,KAAK,CAACQ,OAAN,CAAc,IAAd,EAAqB,OAArB,CAA6B,GAAjC,CACb;EADa,CAEZA,OAFY,CAEJ,eAFI,EAEa,EAFb,EAGZA,OAHY,CAGJ,QAHI,EAGO,KAHP,CAAf;EAKA,OAAOL,MAAP;AACD,CAhBD;;AAkBAO,MAAM,CAACC,OAAP,GAAiB;EACfZ,GADe;EAEfU;AAFe,CAAjB"},"metadata":{},"sourceType":"script"}