{"ast":null,"code":"const rpj = require('read-package-json-fast');\n\nconst runScriptPkg = require('./run-script-pkg.js');\n\nconst validateOptions = require('./validate-options.js');\n\nconst isServerPackage = require('./is-server-package.js');\n\nconst runScript = options => {\n  validateOptions(options);\n  const {\n    pkg,\n    path\n  } = options;\n  return pkg ? runScriptPkg(options) : rpj(path + '/package.json').then(readPackage => runScriptPkg({ ...options,\n    pkg: readPackage\n  }));\n};\n\nmodule.exports = Object.assign(runScript, {\n  isServerPackage\n});","map":{"version":3,"names":["rpj","require","runScriptPkg","validateOptions","isServerPackage","runScript","options","pkg","path","then","readPackage","module","exports","Object","assign"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@npmcli/run-script/lib/run-script.js"],"sourcesContent":["const rpj = require('read-package-json-fast')\nconst runScriptPkg = require('./run-script-pkg.js')\nconst validateOptions = require('./validate-options.js')\nconst isServerPackage = require('./is-server-package.js')\n\nconst runScript = options => {\n  validateOptions(options)\n  const { pkg, path } = options\n  return pkg ? runScriptPkg(options)\n    : rpj(path + '/package.json')\n      .then(readPackage => runScriptPkg({ ...options, pkg: readPackage }))\n}\n\nmodule.exports = Object.assign(runScript, { isServerPackage })\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,wBAAD,CAAnB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,qBAAD,CAA5B;;AACA,MAAME,eAAe,GAAGF,OAAO,CAAC,uBAAD,CAA/B;;AACA,MAAMG,eAAe,GAAGH,OAAO,CAAC,wBAAD,CAA/B;;AAEA,MAAMI,SAAS,GAAGC,OAAO,IAAI;EAC3BH,eAAe,CAACG,OAAD,CAAf;EACA,MAAM;IAAEC,GAAF;IAAOC;EAAP,IAAgBF,OAAtB;EACA,OAAOC,GAAG,GAAGL,YAAY,CAACI,OAAD,CAAf,GACNN,GAAG,CAACQ,IAAI,GAAG,eAAR,CAAH,CACCC,IADD,CACMC,WAAW,IAAIR,YAAY,CAAC,EAAE,GAAGI,OAAL;IAAcC,GAAG,EAAEG;EAAnB,CAAD,CADjC,CADJ;AAGD,CAND;;AAQAC,MAAM,CAACC,OAAP,GAAiBC,MAAM,CAACC,MAAP,CAAcT,SAAd,EAAyB;EAAED;AAAF,CAAzB,CAAjB"},"metadata":{},"sourceType":"script"}