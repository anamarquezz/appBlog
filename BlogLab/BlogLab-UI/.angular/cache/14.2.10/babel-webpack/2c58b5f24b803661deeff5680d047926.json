{"ast":null,"code":"var _asyncToGenerator = require(\"C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nconst {\n  dirname,\n  sep\n} = require('path');\n\nconst fs = require('./fs.js');\n\nconst getOptions = require('./common/get-options.js');\n\nconst withOwner = require('./with-owner.js');\n\nconst mkdtemp = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (prefix, opts) {\n    const options = getOptions(opts, {\n      copy: ['encoding'],\n      wrap: 'encoding'\n    }); // mkdtemp relies on the trailing path separator to indicate if it should\n    // create a directory inside of the prefix. if that's the case then the root\n    // we infer ownership from is the prefix itself, otherwise it's the dirname\n    // /tmp -> /tmpABCDEF, infers from /\n    // /tmp/ -> /tmp/ABCDEF, infers from /tmp\n\n    const root = prefix.endsWith(sep) ? prefix : dirname(prefix);\n    return withOwner(root, () => fs.mkdtemp(prefix, options), opts);\n  });\n\n  return function mkdtemp(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = mkdtemp;","map":{"version":3,"names":["dirname","sep","require","fs","getOptions","withOwner","mkdtemp","prefix","opts","options","copy","wrap","root","endsWith","module","exports"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@npmcli/fs/lib/mkdtemp.js"],"sourcesContent":["const { dirname, sep } = require('path')\n\nconst fs = require('./fs.js')\nconst getOptions = require('./common/get-options.js')\nconst withOwner = require('./with-owner.js')\n\nconst mkdtemp = async (prefix, opts) => {\n  const options = getOptions(opts, {\n    copy: ['encoding'],\n    wrap: 'encoding',\n  })\n\n  // mkdtemp relies on the trailing path separator to indicate if it should\n  // create a directory inside of the prefix. if that's the case then the root\n  // we infer ownership from is the prefix itself, otherwise it's the dirname\n  // /tmp -> /tmpABCDEF, infers from /\n  // /tmp/ -> /tmp/ABCDEF, infers from /tmp\n  const root = prefix.endsWith(sep) ? prefix : dirname(prefix)\n\n  return withOwner(root, () => fs.mkdtemp(prefix, options), opts)\n}\n\nmodule.exports = mkdtemp\n"],"mappings":";;AAAA,MAAM;EAAEA,OAAF;EAAWC;AAAX,IAAmBC,OAAO,CAAC,MAAD,CAAhC;;AAEA,MAAMC,EAAE,GAAGD,OAAO,CAAC,SAAD,CAAlB;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,yBAAD,CAA1B;;AACA,MAAMG,SAAS,GAAGH,OAAO,CAAC,iBAAD,CAAzB;;AAEA,MAAMI,OAAO;EAAA,6BAAG,WAAOC,MAAP,EAAeC,IAAf,EAAwB;IACtC,MAAMC,OAAO,GAAGL,UAAU,CAACI,IAAD,EAAO;MAC/BE,IAAI,EAAE,CAAC,UAAD,CADyB;MAE/BC,IAAI,EAAE;IAFyB,CAAP,CAA1B,CADsC,CAMtC;IACA;IACA;IACA;IACA;;IACA,MAAMC,IAAI,GAAGL,MAAM,CAACM,QAAP,CAAgBZ,GAAhB,IAAuBM,MAAvB,GAAgCP,OAAO,CAACO,MAAD,CAApD;IAEA,OAAOF,SAAS,CAACO,IAAD,EAAO,MAAMT,EAAE,CAACG,OAAH,CAAWC,MAAX,EAAmBE,OAAnB,CAAb,EAA0CD,IAA1C,CAAhB;EACD,CAdY;;EAAA,gBAAPF,OAAO;IAAA;EAAA;AAAA,GAAb;;AAgBAQ,MAAM,CAACC,OAAP,GAAiBT,OAAjB"},"metadata":{},"sourceType":"script"}