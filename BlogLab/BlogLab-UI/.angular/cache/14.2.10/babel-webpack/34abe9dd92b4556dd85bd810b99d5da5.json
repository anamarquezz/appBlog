{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nconst events_1 = require(\"events\");\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst promisify_1 = __importDefault(require(\"./promisify\"));\n\nconst debug = debug_1.default('agent-base');\n\nfunction isAgent(v) {\n  return Boolean(v) && typeof v.addRequest === 'function';\n}\n\nfunction isSecureEndpoint() {\n  const {\n    stack\n  } = new Error();\n  if (typeof stack !== 'string') return false;\n  return stack.split('\\n').some(l => l.indexOf('(https.js:') !== -1 || l.indexOf('node:https:') !== -1);\n}\n\nfunction createAgent(callback, opts) {\n  return new createAgent.Agent(callback, opts);\n}\n\n(function (createAgent) {\n  /**\n   * Base `http.Agent` implementation.\n   * No pooling/keep-alive is implemented by default.\n   *\n   * @param {Function} callback\n   * @api public\n   */\n  class Agent extends events_1.EventEmitter {\n    constructor(callback, _opts) {\n      super();\n      let opts = _opts;\n\n      if (typeof callback === 'function') {\n        this.callback = callback;\n      } else if (callback) {\n        opts = callback;\n      } // Timeout for the socket to be returned from the callback\n\n\n      this.timeout = null;\n\n      if (opts && typeof opts.timeout === 'number') {\n        this.timeout = opts.timeout;\n      } // These aren't actually used by `agent-base`, but are required\n      // for the TypeScript definition files in `@types/node` :/\n\n\n      this.maxFreeSockets = 1;\n      this.maxSockets = 1;\n      this.maxTotalSockets = Infinity;\n      this.sockets = {};\n      this.freeSockets = {};\n      this.requests = {};\n      this.options = {};\n    }\n\n    get defaultPort() {\n      if (typeof this.explicitDefaultPort === 'number') {\n        return this.explicitDefaultPort;\n      }\n\n      return isSecureEndpoint() ? 443 : 80;\n    }\n\n    set defaultPort(v) {\n      this.explicitDefaultPort = v;\n    }\n\n    get protocol() {\n      if (typeof this.explicitProtocol === 'string') {\n        return this.explicitProtocol;\n      }\n\n      return isSecureEndpoint() ? 'https:' : 'http:';\n    }\n\n    set protocol(v) {\n      this.explicitProtocol = v;\n    }\n\n    callback(req, opts, fn) {\n      throw new Error('\"agent-base\" has no default implementation, you must subclass and override `callback()`');\n    }\n    /**\n     * Called by node-core's \"_http_client.js\" module when creating\n     * a new HTTP request with this Agent instance.\n     *\n     * @api public\n     */\n\n\n    addRequest(req, _opts) {\n      const opts = Object.assign({}, _opts);\n\n      if (typeof opts.secureEndpoint !== 'boolean') {\n        opts.secureEndpoint = isSecureEndpoint();\n      }\n\n      if (opts.host == null) {\n        opts.host = 'localhost';\n      }\n\n      if (opts.port == null) {\n        opts.port = opts.secureEndpoint ? 443 : 80;\n      }\n\n      if (opts.protocol == null) {\n        opts.protocol = opts.secureEndpoint ? 'https:' : 'http:';\n      }\n\n      if (opts.host && opts.path) {\n        // If both a `host` and `path` are specified then it's most\n        // likely the result of a `url.parse()` call... we need to\n        // remove the `path` portion so that `net.connect()` doesn't\n        // attempt to open that as a unix socket file.\n        delete opts.path;\n      }\n\n      delete opts.agent;\n      delete opts.hostname;\n      delete opts._defaultAgent;\n      delete opts.defaultPort;\n      delete opts.createConnection; // Hint to use \"Connection: close\"\n      // XXX: non-documented `http` module API :(\n\n      req._last = true;\n      req.shouldKeepAlive = false;\n      let timedOut = false;\n      let timeoutId = null;\n      const timeoutMs = opts.timeout || this.timeout;\n\n      const onerror = err => {\n        if (req._hadError) return;\n        req.emit('error', err); // For Safety. Some additional errors might fire later on\n        // and we need to make sure we don't double-fire the error event.\n\n        req._hadError = true;\n      };\n\n      const ontimeout = () => {\n        timeoutId = null;\n        timedOut = true;\n        const err = new Error(`A \"socket\" was not created for HTTP request before ${timeoutMs}ms`);\n        err.code = 'ETIMEOUT';\n        onerror(err);\n      };\n\n      const callbackError = err => {\n        if (timedOut) return;\n\n        if (timeoutId !== null) {\n          clearTimeout(timeoutId);\n          timeoutId = null;\n        }\n\n        onerror(err);\n      };\n\n      const onsocket = socket => {\n        if (timedOut) return;\n\n        if (timeoutId != null) {\n          clearTimeout(timeoutId);\n          timeoutId = null;\n        }\n\n        if (isAgent(socket)) {\n          // `socket` is actually an `http.Agent` instance, so\n          // relinquish responsibility for this `req` to the Agent\n          // from here on\n          debug('Callback returned another Agent instance %o', socket.constructor.name);\n          socket.addRequest(req, opts);\n          return;\n        }\n\n        if (socket) {\n          socket.once('free', () => {\n            this.freeSocket(socket, opts);\n          });\n          req.onSocket(socket);\n          return;\n        }\n\n        const err = new Error(`no Duplex stream was returned to agent-base for \\`${req.method} ${req.path}\\``);\n        onerror(err);\n      };\n\n      if (typeof this.callback !== 'function') {\n        onerror(new Error('`callback` is not defined'));\n        return;\n      }\n\n      if (!this.promisifiedCallback) {\n        if (this.callback.length >= 3) {\n          debug('Converting legacy callback function to promise');\n          this.promisifiedCallback = promisify_1.default(this.callback);\n        } else {\n          this.promisifiedCallback = this.callback;\n        }\n      }\n\n      if (typeof timeoutMs === 'number' && timeoutMs > 0) {\n        timeoutId = setTimeout(ontimeout, timeoutMs);\n      }\n\n      if ('port' in opts && typeof opts.port !== 'number') {\n        opts.port = Number(opts.port);\n      }\n\n      try {\n        debug('Resolving socket for %o request: %o', opts.protocol, `${req.method} ${req.path}`);\n        Promise.resolve(this.promisifiedCallback(req, opts)).then(onsocket, callbackError);\n      } catch (err) {\n        Promise.reject(err).catch(callbackError);\n      }\n    }\n\n    freeSocket(socket, opts) {\n      debug('Freeing socket %o %o', socket.constructor.name, opts);\n      socket.destroy();\n    }\n\n    destroy() {\n      debug('Destroying agent %o', this.constructor.name);\n    }\n\n  }\n\n  createAgent.Agent = Agent; // So that `instanceof` works correctly\n\n  createAgent.prototype = createAgent.Agent.prototype;\n})(createAgent || (createAgent = {}));\n\nmodule.exports = createAgent;","map":{"version":3,"names":["__importDefault","mod","__esModule","events_1","require","debug_1","promisify_1","debug","default","isAgent","v","Boolean","addRequest","isSecureEndpoint","stack","Error","split","some","l","indexOf","createAgent","callback","opts","Agent","EventEmitter","constructor","_opts","timeout","maxFreeSockets","maxSockets","maxTotalSockets","Infinity","sockets","freeSockets","requests","options","defaultPort","explicitDefaultPort","protocol","explicitProtocol","req","fn","Object","assign","secureEndpoint","host","port","path","agent","hostname","_defaultAgent","createConnection","_last","shouldKeepAlive","timedOut","timeoutId","timeoutMs","onerror","err","_hadError","emit","ontimeout","code","callbackError","clearTimeout","onsocket","socket","name","once","freeSocket","onSocket","method","promisifiedCallback","length","setTimeout","Number","Promise","resolve","then","reject","catch","destroy","prototype","module","exports"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/agent-base/dist/src/index.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nconst events_1 = require(\"events\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst promisify_1 = __importDefault(require(\"./promisify\"));\nconst debug = debug_1.default('agent-base');\nfunction isAgent(v) {\n    return Boolean(v) && typeof v.addRequest === 'function';\n}\nfunction isSecureEndpoint() {\n    const { stack } = new Error();\n    if (typeof stack !== 'string')\n        return false;\n    return stack.split('\\n').some(l => l.indexOf('(https.js:') !== -1 || l.indexOf('node:https:') !== -1);\n}\nfunction createAgent(callback, opts) {\n    return new createAgent.Agent(callback, opts);\n}\n(function (createAgent) {\n    /**\n     * Base `http.Agent` implementation.\n     * No pooling/keep-alive is implemented by default.\n     *\n     * @param {Function} callback\n     * @api public\n     */\n    class Agent extends events_1.EventEmitter {\n        constructor(callback, _opts) {\n            super();\n            let opts = _opts;\n            if (typeof callback === 'function') {\n                this.callback = callback;\n            }\n            else if (callback) {\n                opts = callback;\n            }\n            // Timeout for the socket to be returned from the callback\n            this.timeout = null;\n            if (opts && typeof opts.timeout === 'number') {\n                this.timeout = opts.timeout;\n            }\n            // These aren't actually used by `agent-base`, but are required\n            // for the TypeScript definition files in `@types/node` :/\n            this.maxFreeSockets = 1;\n            this.maxSockets = 1;\n            this.maxTotalSockets = Infinity;\n            this.sockets = {};\n            this.freeSockets = {};\n            this.requests = {};\n            this.options = {};\n        }\n        get defaultPort() {\n            if (typeof this.explicitDefaultPort === 'number') {\n                return this.explicitDefaultPort;\n            }\n            return isSecureEndpoint() ? 443 : 80;\n        }\n        set defaultPort(v) {\n            this.explicitDefaultPort = v;\n        }\n        get protocol() {\n            if (typeof this.explicitProtocol === 'string') {\n                return this.explicitProtocol;\n            }\n            return isSecureEndpoint() ? 'https:' : 'http:';\n        }\n        set protocol(v) {\n            this.explicitProtocol = v;\n        }\n        callback(req, opts, fn) {\n            throw new Error('\"agent-base\" has no default implementation, you must subclass and override `callback()`');\n        }\n        /**\n         * Called by node-core's \"_http_client.js\" module when creating\n         * a new HTTP request with this Agent instance.\n         *\n         * @api public\n         */\n        addRequest(req, _opts) {\n            const opts = Object.assign({}, _opts);\n            if (typeof opts.secureEndpoint !== 'boolean') {\n                opts.secureEndpoint = isSecureEndpoint();\n            }\n            if (opts.host == null) {\n                opts.host = 'localhost';\n            }\n            if (opts.port == null) {\n                opts.port = opts.secureEndpoint ? 443 : 80;\n            }\n            if (opts.protocol == null) {\n                opts.protocol = opts.secureEndpoint ? 'https:' : 'http:';\n            }\n            if (opts.host && opts.path) {\n                // If both a `host` and `path` are specified then it's most\n                // likely the result of a `url.parse()` call... we need to\n                // remove the `path` portion so that `net.connect()` doesn't\n                // attempt to open that as a unix socket file.\n                delete opts.path;\n            }\n            delete opts.agent;\n            delete opts.hostname;\n            delete opts._defaultAgent;\n            delete opts.defaultPort;\n            delete opts.createConnection;\n            // Hint to use \"Connection: close\"\n            // XXX: non-documented `http` module API :(\n            req._last = true;\n            req.shouldKeepAlive = false;\n            let timedOut = false;\n            let timeoutId = null;\n            const timeoutMs = opts.timeout || this.timeout;\n            const onerror = (err) => {\n                if (req._hadError)\n                    return;\n                req.emit('error', err);\n                // For Safety. Some additional errors might fire later on\n                // and we need to make sure we don't double-fire the error event.\n                req._hadError = true;\n            };\n            const ontimeout = () => {\n                timeoutId = null;\n                timedOut = true;\n                const err = new Error(`A \"socket\" was not created for HTTP request before ${timeoutMs}ms`);\n                err.code = 'ETIMEOUT';\n                onerror(err);\n            };\n            const callbackError = (err) => {\n                if (timedOut)\n                    return;\n                if (timeoutId !== null) {\n                    clearTimeout(timeoutId);\n                    timeoutId = null;\n                }\n                onerror(err);\n            };\n            const onsocket = (socket) => {\n                if (timedOut)\n                    return;\n                if (timeoutId != null) {\n                    clearTimeout(timeoutId);\n                    timeoutId = null;\n                }\n                if (isAgent(socket)) {\n                    // `socket` is actually an `http.Agent` instance, so\n                    // relinquish responsibility for this `req` to the Agent\n                    // from here on\n                    debug('Callback returned another Agent instance %o', socket.constructor.name);\n                    socket.addRequest(req, opts);\n                    return;\n                }\n                if (socket) {\n                    socket.once('free', () => {\n                        this.freeSocket(socket, opts);\n                    });\n                    req.onSocket(socket);\n                    return;\n                }\n                const err = new Error(`no Duplex stream was returned to agent-base for \\`${req.method} ${req.path}\\``);\n                onerror(err);\n            };\n            if (typeof this.callback !== 'function') {\n                onerror(new Error('`callback` is not defined'));\n                return;\n            }\n            if (!this.promisifiedCallback) {\n                if (this.callback.length >= 3) {\n                    debug('Converting legacy callback function to promise');\n                    this.promisifiedCallback = promisify_1.default(this.callback);\n                }\n                else {\n                    this.promisifiedCallback = this.callback;\n                }\n            }\n            if (typeof timeoutMs === 'number' && timeoutMs > 0) {\n                timeoutId = setTimeout(ontimeout, timeoutMs);\n            }\n            if ('port' in opts && typeof opts.port !== 'number') {\n                opts.port = Number(opts.port);\n            }\n            try {\n                debug('Resolving socket for %o request: %o', opts.protocol, `${req.method} ${req.path}`);\n                Promise.resolve(this.promisifiedCallback(req, opts)).then(onsocket, callbackError);\n            }\n            catch (err) {\n                Promise.reject(err).catch(callbackError);\n            }\n        }\n        freeSocket(socket, opts) {\n            debug('Freeing socket %o %o', socket.constructor.name, opts);\n            socket.destroy();\n        }\n        destroy() {\n            debug('Destroying agent %o', this.constructor.name);\n        }\n    }\n    createAgent.Agent = Agent;\n    // So that `instanceof` works correctly\n    createAgent.prototype = createAgent.Agent.prototype;\n})(createAgent || (createAgent = {}));\nmodule.exports = createAgent;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}