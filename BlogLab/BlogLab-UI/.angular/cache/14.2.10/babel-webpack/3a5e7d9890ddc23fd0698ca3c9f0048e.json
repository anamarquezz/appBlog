{"ast":null,"code":"'use strict';\n/**\n * `confirm` type prompt\n */\n\nconst chalk = require('chalk');\n\nconst {\n  take,\n  takeUntil\n} = require('rxjs/operators');\n\nconst Base = require('./base');\n\nconst observe = require('../utils/events');\n\nclass ConfirmPrompt extends Base {\n  constructor(questions, rl, answers) {\n    super(questions, rl, answers);\n    let rawDefault = true;\n    Object.assign(this.opt, {\n      filter(input) {\n        let value = rawDefault;\n\n        if (input != null && input !== '') {\n          value = /^y(es)?/i.test(input);\n        }\n\n        return value;\n      }\n\n    });\n\n    if (this.opt.default != null) {\n      rawDefault = Boolean(this.opt.default);\n    }\n\n    this.opt.default = rawDefault ? 'Y/n' : 'y/N';\n  }\n  /**\n   * Start the Inquiry session\n   * @param  {Function} cb   Callback when prompt is done\n   * @return {this}\n   */\n\n\n  _run(cb) {\n    this.done = cb; // Once user confirm (enter key)\n\n    const events = observe(this.rl);\n    events.keypress.pipe(takeUntil(events.line)).forEach(this.onKeypress.bind(this));\n    events.line.pipe(take(1)).forEach(this.onEnd.bind(this)); // Init\n\n    this.render();\n    return this;\n  }\n  /**\n   * Render the prompt to screen\n   * @return {ConfirmPrompt} self\n   */\n\n\n  render(answer) {\n    let message = this.getQuestion();\n\n    if (typeof answer === 'boolean') {\n      message += chalk.cyan(answer ? 'Yes' : 'No');\n    } else {\n      message += this.rl.line;\n    }\n\n    this.screen.render(message);\n    return this;\n  }\n  /**\n   * When user press `enter` key\n   */\n\n\n  onEnd(input) {\n    this.status = 'answered';\n    const output = this.opt.filter(input);\n    this.render(output);\n    this.screen.done();\n    this.done(output);\n  }\n  /**\n   * When user press a key\n   */\n\n\n  onKeypress() {\n    this.render();\n  }\n\n}\n\nmodule.exports = ConfirmPrompt;","map":{"version":3,"names":["chalk","require","take","takeUntil","Base","observe","ConfirmPrompt","constructor","questions","rl","answers","rawDefault","Object","assign","opt","filter","input","value","test","default","Boolean","_run","cb","done","events","keypress","pipe","line","forEach","onKeypress","bind","onEnd","render","answer","message","getQuestion","cyan","screen","status","output","module","exports"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/inquirer/lib/prompts/confirm.js"],"sourcesContent":["'use strict';\n/**\n * `confirm` type prompt\n */\n\nconst chalk = require('chalk');\nconst { take, takeUntil } = require('rxjs/operators');\nconst Base = require('./base');\nconst observe = require('../utils/events');\n\nclass ConfirmPrompt extends Base {\n  constructor(questions, rl, answers) {\n    super(questions, rl, answers);\n\n    let rawDefault = true;\n\n    Object.assign(this.opt, {\n      filter(input) {\n        let value = rawDefault;\n        if (input != null && input !== '') {\n          value = /^y(es)?/i.test(input);\n        }\n\n        return value;\n      },\n    });\n\n    if (this.opt.default != null) {\n      rawDefault = Boolean(this.opt.default);\n    }\n\n    this.opt.default = rawDefault ? 'Y/n' : 'y/N';\n  }\n\n  /**\n   * Start the Inquiry session\n   * @param  {Function} cb   Callback when prompt is done\n   * @return {this}\n   */\n\n  _run(cb) {\n    this.done = cb;\n\n    // Once user confirm (enter key)\n    const events = observe(this.rl);\n    events.keypress.pipe(takeUntil(events.line)).forEach(this.onKeypress.bind(this));\n\n    events.line.pipe(take(1)).forEach(this.onEnd.bind(this));\n\n    // Init\n    this.render();\n\n    return this;\n  }\n\n  /**\n   * Render the prompt to screen\n   * @return {ConfirmPrompt} self\n   */\n\n  render(answer) {\n    let message = this.getQuestion();\n\n    if (typeof answer === 'boolean') {\n      message += chalk.cyan(answer ? 'Yes' : 'No');\n    } else {\n      message += this.rl.line;\n    }\n\n    this.screen.render(message);\n\n    return this;\n  }\n\n  /**\n   * When user press `enter` key\n   */\n\n  onEnd(input) {\n    this.status = 'answered';\n\n    const output = this.opt.filter(input);\n    this.render(output);\n\n    this.screen.done();\n    this.done(output);\n  }\n\n  /**\n   * When user press a key\n   */\n\n  onKeypress() {\n    this.render();\n  }\n}\n\nmodule.exports = ConfirmPrompt;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAM;EAAEC,IAAF;EAAQC;AAAR,IAAsBF,OAAO,CAAC,gBAAD,CAAnC;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMI,OAAO,GAAGJ,OAAO,CAAC,iBAAD,CAAvB;;AAEA,MAAMK,aAAN,SAA4BF,IAA5B,CAAiC;EAC/BG,WAAW,CAACC,SAAD,EAAYC,EAAZ,EAAgBC,OAAhB,EAAyB;IAClC,MAAMF,SAAN,EAAiBC,EAAjB,EAAqBC,OAArB;IAEA,IAAIC,UAAU,GAAG,IAAjB;IAEAC,MAAM,CAACC,MAAP,CAAc,KAAKC,GAAnB,EAAwB;MACtBC,MAAM,CAACC,KAAD,EAAQ;QACZ,IAAIC,KAAK,GAAGN,UAAZ;;QACA,IAAIK,KAAK,IAAI,IAAT,IAAiBA,KAAK,KAAK,EAA/B,EAAmC;UACjCC,KAAK,GAAG,WAAWC,IAAX,CAAgBF,KAAhB,CAAR;QACD;;QAED,OAAOC,KAAP;MACD;;IARqB,CAAxB;;IAWA,IAAI,KAAKH,GAAL,CAASK,OAAT,IAAoB,IAAxB,EAA8B;MAC5BR,UAAU,GAAGS,OAAO,CAAC,KAAKN,GAAL,CAASK,OAAV,CAApB;IACD;;IAED,KAAKL,GAAL,CAASK,OAAT,GAAmBR,UAAU,GAAG,KAAH,GAAW,KAAxC;EACD;EAED;AACF;AACA;AACA;AACA;;;EAEEU,IAAI,CAACC,EAAD,EAAK;IACP,KAAKC,IAAL,GAAYD,EAAZ,CADO,CAGP;;IACA,MAAME,MAAM,GAAGnB,OAAO,CAAC,KAAKI,EAAN,CAAtB;IACAe,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBvB,SAAS,CAACqB,MAAM,CAACG,IAAR,CAA9B,EAA6CC,OAA7C,CAAqD,KAAKC,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAArD;IAEAN,MAAM,CAACG,IAAP,CAAYD,IAAZ,CAAiBxB,IAAI,CAAC,CAAD,CAArB,EAA0B0B,OAA1B,CAAkC,KAAKG,KAAL,CAAWD,IAAX,CAAgB,IAAhB,CAAlC,EAPO,CASP;;IACA,KAAKE,MAAL;IAEA,OAAO,IAAP;EACD;EAED;AACF;AACA;AACA;;;EAEEA,MAAM,CAACC,MAAD,EAAS;IACb,IAAIC,OAAO,GAAG,KAAKC,WAAL,EAAd;;IAEA,IAAI,OAAOF,MAAP,KAAkB,SAAtB,EAAiC;MAC/BC,OAAO,IAAIlC,KAAK,CAACoC,IAAN,CAAWH,MAAM,GAAG,KAAH,GAAW,IAA5B,CAAX;IACD,CAFD,MAEO;MACLC,OAAO,IAAI,KAAKzB,EAAL,CAAQkB,IAAnB;IACD;;IAED,KAAKU,MAAL,CAAYL,MAAZ,CAAmBE,OAAnB;IAEA,OAAO,IAAP;EACD;EAED;AACF;AACA;;;EAEEH,KAAK,CAACf,KAAD,EAAQ;IACX,KAAKsB,MAAL,GAAc,UAAd;IAEA,MAAMC,MAAM,GAAG,KAAKzB,GAAL,CAASC,MAAT,CAAgBC,KAAhB,CAAf;IACA,KAAKgB,MAAL,CAAYO,MAAZ;IAEA,KAAKF,MAAL,CAAYd,IAAZ;IACA,KAAKA,IAAL,CAAUgB,MAAV;EACD;EAED;AACF;AACA;;;EAEEV,UAAU,GAAG;IACX,KAAKG,MAAL;EACD;;AApF8B;;AAuFjCQ,MAAM,CAACC,OAAP,GAAiBnC,aAAjB"},"metadata":{},"sourceType":"script"}