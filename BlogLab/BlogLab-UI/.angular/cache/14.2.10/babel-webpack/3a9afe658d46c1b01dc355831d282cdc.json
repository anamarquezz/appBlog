{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseJson = exports.readAndParseJson = exports.JSONFile = void 0;\n\nconst fs_1 = require(\"fs\");\n\nconst jsonc_parser_1 = require(\"jsonc-parser\");\n/** @internal */\n\n\nclass JSONFile {\n  constructor(path) {\n    this.path = path;\n    const buffer = (0, fs_1.readFileSync)(this.path);\n\n    if (buffer) {\n      this.content = buffer.toString();\n    } else {\n      throw new Error(`Could not read '${path}'.`);\n    }\n  }\n\n  get JsonAst() {\n    if (this._jsonAst) {\n      return this._jsonAst;\n    }\n\n    const errors = [];\n    this._jsonAst = (0, jsonc_parser_1.parseTree)(this.content, errors, {\n      allowTrailingComma: true\n    });\n\n    if (errors.length) {\n      formatError(this.path, errors);\n    }\n\n    return this._jsonAst;\n  }\n\n  get(jsonPath) {\n    const jsonAstNode = this.JsonAst;\n\n    if (!jsonAstNode) {\n      return undefined;\n    }\n\n    if (jsonPath.length === 0) {\n      return (0, jsonc_parser_1.getNodeValue)(jsonAstNode);\n    }\n\n    const node = (0, jsonc_parser_1.findNodeAtLocation)(jsonAstNode, jsonPath);\n    return node === undefined ? undefined : (0, jsonc_parser_1.getNodeValue)(node);\n  }\n\n  modify(jsonPath, value, insertInOrder) {\n    if (value === undefined && this.get(jsonPath) === undefined) {\n      // Cannot remove a value which doesn't exist.\n      return false;\n    }\n\n    let getInsertionIndex;\n\n    if (insertInOrder === undefined) {\n      const property = jsonPath.slice(-1)[0];\n\n      getInsertionIndex = properties => [...properties, property].sort().findIndex(p => p === property);\n    } else if (insertInOrder !== false) {\n      getInsertionIndex = insertInOrder;\n    }\n\n    const edits = (0, jsonc_parser_1.modify)(this.content, jsonPath, value, {\n      getInsertionIndex,\n      // TODO: use indentation from original file.\n      formattingOptions: {\n        insertSpaces: true,\n        tabSize: 2\n      }\n    });\n\n    if (edits.length === 0) {\n      return false;\n    }\n\n    this.content = (0, jsonc_parser_1.applyEdits)(this.content, edits);\n    this._jsonAst = undefined;\n    return true;\n  }\n\n  save() {\n    (0, fs_1.writeFileSync)(this.path, this.content);\n  }\n\n}\n\nexports.JSONFile = JSONFile; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nfunction readAndParseJson(path) {\n  const errors = [];\n  const content = (0, jsonc_parser_1.parse)((0, fs_1.readFileSync)(path, 'utf-8'), errors, {\n    allowTrailingComma: true\n  });\n\n  if (errors.length) {\n    formatError(path, errors);\n  }\n\n  return content;\n}\n\nexports.readAndParseJson = readAndParseJson;\n\nfunction formatError(path, errors) {\n  const {\n    error,\n    offset\n  } = errors[0];\n  throw new Error(`Failed to parse \"${path}\" as JSON AST Object. ${(0, jsonc_parser_1.printParseErrorCode)(error)} at location: ${offset}.`);\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nfunction parseJson(content) {\n  return (0, jsonc_parser_1.parse)(content, undefined, {\n    allowTrailingComma: true\n  });\n}\n\nexports.parseJson = parseJson;","map":{"version":3,"names":["Object","defineProperty","exports","value","parseJson","readAndParseJson","JSONFile","fs_1","require","jsonc_parser_1","constructor","path","buffer","readFileSync","content","toString","Error","JsonAst","_jsonAst","errors","parseTree","allowTrailingComma","length","formatError","get","jsonPath","jsonAstNode","undefined","getNodeValue","node","findNodeAtLocation","modify","insertInOrder","getInsertionIndex","property","slice","properties","sort","findIndex","p","edits","formattingOptions","insertSpaces","tabSize","applyEdits","save","writeFileSync","parse","error","offset","printParseErrorCode"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular/cli/src/utilities/json-file.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseJson = exports.readAndParseJson = exports.JSONFile = void 0;\nconst fs_1 = require(\"fs\");\nconst jsonc_parser_1 = require(\"jsonc-parser\");\n/** @internal */\nclass JSONFile {\n    constructor(path) {\n        this.path = path;\n        const buffer = (0, fs_1.readFileSync)(this.path);\n        if (buffer) {\n            this.content = buffer.toString();\n        }\n        else {\n            throw new Error(`Could not read '${path}'.`);\n        }\n    }\n    get JsonAst() {\n        if (this._jsonAst) {\n            return this._jsonAst;\n        }\n        const errors = [];\n        this._jsonAst = (0, jsonc_parser_1.parseTree)(this.content, errors, { allowTrailingComma: true });\n        if (errors.length) {\n            formatError(this.path, errors);\n        }\n        return this._jsonAst;\n    }\n    get(jsonPath) {\n        const jsonAstNode = this.JsonAst;\n        if (!jsonAstNode) {\n            return undefined;\n        }\n        if (jsonPath.length === 0) {\n            return (0, jsonc_parser_1.getNodeValue)(jsonAstNode);\n        }\n        const node = (0, jsonc_parser_1.findNodeAtLocation)(jsonAstNode, jsonPath);\n        return node === undefined ? undefined : (0, jsonc_parser_1.getNodeValue)(node);\n    }\n    modify(jsonPath, value, insertInOrder) {\n        if (value === undefined && this.get(jsonPath) === undefined) {\n            // Cannot remove a value which doesn't exist.\n            return false;\n        }\n        let getInsertionIndex;\n        if (insertInOrder === undefined) {\n            const property = jsonPath.slice(-1)[0];\n            getInsertionIndex = (properties) => [...properties, property].sort().findIndex((p) => p === property);\n        }\n        else if (insertInOrder !== false) {\n            getInsertionIndex = insertInOrder;\n        }\n        const edits = (0, jsonc_parser_1.modify)(this.content, jsonPath, value, {\n            getInsertionIndex,\n            // TODO: use indentation from original file.\n            formattingOptions: {\n                insertSpaces: true,\n                tabSize: 2,\n            },\n        });\n        if (edits.length === 0) {\n            return false;\n        }\n        this.content = (0, jsonc_parser_1.applyEdits)(this.content, edits);\n        this._jsonAst = undefined;\n        return true;\n    }\n    save() {\n        (0, fs_1.writeFileSync)(this.path, this.content);\n    }\n}\nexports.JSONFile = JSONFile;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction readAndParseJson(path) {\n    const errors = [];\n    const content = (0, jsonc_parser_1.parse)((0, fs_1.readFileSync)(path, 'utf-8'), errors, { allowTrailingComma: true });\n    if (errors.length) {\n        formatError(path, errors);\n    }\n    return content;\n}\nexports.readAndParseJson = readAndParseJson;\nfunction formatError(path, errors) {\n    const { error, offset } = errors[0];\n    throw new Error(`Failed to parse \"${path}\" as JSON AST Object. ${(0, jsonc_parser_1.printParseErrorCode)(error)} at location: ${offset}.`);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction parseJson(content) {\n    return (0, jsonc_parser_1.parse)(content, undefined, { allowTrailingComma: true });\n}\nexports.parseJson = parseJson;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}