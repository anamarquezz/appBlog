{"ast":null,"code":"'use strict';\n\nconst gitHosts = require('./git-host-info.js');\n\nclass GitHost {\n  constructor(type, user, auth, project, committish, defaultRepresentation, opts = {}) {\n    Object.assign(this, gitHosts[type]);\n    this.type = type;\n    this.user = user;\n    this.auth = auth;\n    this.project = project;\n    this.committish = committish;\n    this.default = defaultRepresentation;\n    this.opts = opts;\n  }\n\n  hash() {\n    return this.committish ? `#${this.committish}` : '';\n  }\n\n  ssh(opts) {\n    return this._fill(this.sshtemplate, opts);\n  }\n\n  _fill(template, opts) {\n    if (typeof template === 'function') {\n      const options = { ...this,\n        ...this.opts,\n        ...opts\n      }; // the path should always be set so we don't end up with 'undefined' in urls\n\n      if (!options.path) {\n        options.path = '';\n      } // template functions will insert the leading slash themselves\n\n\n      if (options.path.startsWith('/')) {\n        options.path = options.path.slice(1);\n      }\n\n      if (options.noCommittish) {\n        options.committish = null;\n      }\n\n      const result = template(options);\n      return options.noGitPlus && result.startsWith('git+') ? result.slice(4) : result;\n    }\n\n    return null;\n  }\n\n  sshurl(opts) {\n    return this._fill(this.sshurltemplate, opts);\n  }\n\n  browse(path, fragment, opts) {\n    // not a string, treat path as opts\n    if (typeof path !== 'string') {\n      return this._fill(this.browsetemplate, path);\n    }\n\n    if (typeof fragment !== 'string') {\n      opts = fragment;\n      fragment = null;\n    }\n\n    return this._fill(this.browsefiletemplate, { ...opts,\n      fragment,\n      path\n    });\n  }\n\n  docs(opts) {\n    return this._fill(this.docstemplate, opts);\n  }\n\n  bugs(opts) {\n    return this._fill(this.bugstemplate, opts);\n  }\n\n  https(opts) {\n    return this._fill(this.httpstemplate, opts);\n  }\n\n  git(opts) {\n    return this._fill(this.gittemplate, opts);\n  }\n\n  shortcut(opts) {\n    return this._fill(this.shortcuttemplate, opts);\n  }\n\n  path(opts) {\n    return this._fill(this.pathtemplate, opts);\n  }\n\n  tarball(opts) {\n    return this._fill(this.tarballtemplate, { ...opts,\n      noCommittish: false\n    });\n  }\n\n  file(path, opts) {\n    return this._fill(this.filetemplate, { ...opts,\n      path\n    });\n  }\n\n  edit(path, opts) {\n    return this._fill(this.edittemplate, { ...opts,\n      path\n    });\n  }\n\n  getDefaultRepresentation() {\n    return this.default;\n  }\n\n  toString(opts) {\n    if (this.default && typeof this[this.default] === 'function') {\n      return this[this.default](opts);\n    }\n\n    return this.sshurl(opts);\n  }\n\n}\n\nmodule.exports = GitHost;","map":{"version":3,"names":["gitHosts","require","GitHost","constructor","type","user","auth","project","committish","defaultRepresentation","opts","Object","assign","default","hash","ssh","_fill","sshtemplate","template","options","path","startsWith","slice","noCommittish","result","noGitPlus","sshurl","sshurltemplate","browse","fragment","browsetemplate","browsefiletemplate","docs","docstemplate","bugs","bugstemplate","https","httpstemplate","git","gittemplate","shortcut","shortcuttemplate","pathtemplate","tarball","tarballtemplate","file","filetemplate","edit","edittemplate","getDefaultRepresentation","toString","module","exports"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/hosted-git-info/lib/git-host.js"],"sourcesContent":["'use strict'\nconst gitHosts = require('./git-host-info.js')\n\nclass GitHost {\n  constructor (type, user, auth, project, committish, defaultRepresentation, opts = {}) {\n    Object.assign(this, gitHosts[type])\n    this.type = type\n    this.user = user\n    this.auth = auth\n    this.project = project\n    this.committish = committish\n    this.default = defaultRepresentation\n    this.opts = opts\n  }\n\n  hash () {\n    return this.committish ? `#${this.committish}` : ''\n  }\n\n  ssh (opts) {\n    return this._fill(this.sshtemplate, opts)\n  }\n\n  _fill (template, opts) {\n    if (typeof template === 'function') {\n      const options = { ...this, ...this.opts, ...opts }\n\n      // the path should always be set so we don't end up with 'undefined' in urls\n      if (!options.path) {\n        options.path = ''\n      }\n\n      // template functions will insert the leading slash themselves\n      if (options.path.startsWith('/')) {\n        options.path = options.path.slice(1)\n      }\n\n      if (options.noCommittish) {\n        options.committish = null\n      }\n\n      const result = template(options)\n      return options.noGitPlus && result.startsWith('git+') ? result.slice(4) : result\n    }\n\n    return null\n  }\n\n  sshurl (opts) {\n    return this._fill(this.sshurltemplate, opts)\n  }\n\n  browse (path, fragment, opts) {\n    // not a string, treat path as opts\n    if (typeof path !== 'string') {\n      return this._fill(this.browsetemplate, path)\n    }\n\n    if (typeof fragment !== 'string') {\n      opts = fragment\n      fragment = null\n    }\n    return this._fill(this.browsefiletemplate, { ...opts, fragment, path })\n  }\n\n  docs (opts) {\n    return this._fill(this.docstemplate, opts)\n  }\n\n  bugs (opts) {\n    return this._fill(this.bugstemplate, opts)\n  }\n\n  https (opts) {\n    return this._fill(this.httpstemplate, opts)\n  }\n\n  git (opts) {\n    return this._fill(this.gittemplate, opts)\n  }\n\n  shortcut (opts) {\n    return this._fill(this.shortcuttemplate, opts)\n  }\n\n  path (opts) {\n    return this._fill(this.pathtemplate, opts)\n  }\n\n  tarball (opts) {\n    return this._fill(this.tarballtemplate, { ...opts, noCommittish: false })\n  }\n\n  file (path, opts) {\n    return this._fill(this.filetemplate, { ...opts, path })\n  }\n\n  edit (path, opts) {\n    return this._fill(this.edittemplate, { ...opts, path })\n  }\n\n  getDefaultRepresentation () {\n    return this.default\n  }\n\n  toString (opts) {\n    if (this.default && typeof this[this.default] === 'function') {\n      return this[this.default](opts)\n    }\n\n    return this.sshurl(opts)\n  }\n}\nmodule.exports = GitHost\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}