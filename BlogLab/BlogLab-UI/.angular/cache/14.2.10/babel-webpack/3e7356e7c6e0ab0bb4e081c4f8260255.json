{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Logger = void 0;\n\nconst rxjs_1 = require(\"rxjs\");\n\nclass Logger extends rxjs_1.Observable {\n  constructor(name, parent = null) {\n    super();\n    this.name = name;\n    this.parent = parent;\n    this._subject = new rxjs_1.Subject();\n    this._obs = rxjs_1.EMPTY;\n    this._subscription = null;\n    const path = [];\n    let p = parent;\n\n    while (p) {\n      path.push(p.name);\n      p = p.parent;\n    }\n\n    this._metadata = {\n      name,\n      path\n    };\n    this._observable = this._subject.asObservable();\n\n    if (this.parent && this.parent._subject) {\n      // When the parent completes, complete us as well.\n      this.parent._subject.subscribe(undefined, undefined, () => this.complete());\n    }\n  }\n\n  get _observable() {\n    return this._obs;\n  }\n\n  set _observable(v) {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n\n    this._obs = v;\n\n    if (this.parent) {\n      this._subscription = this.subscribe(value => {\n        if (this.parent) {\n          this.parent._subject.next(value);\n        }\n      }, error => {\n        if (this.parent) {\n          this.parent._subject.error(error);\n        }\n      }, () => {\n        if (this._subscription) {\n          this._subscription.unsubscribe();\n        }\n\n        this._subscription = null;\n      });\n    }\n  }\n\n  asApi() {\n    return {\n      createChild: name => this.createChild(name),\n      log: (level, message, metadata) => {\n        return this.log(level, message, metadata);\n      },\n      debug: (message, metadata) => this.debug(message, metadata),\n      info: (message, metadata) => this.info(message, metadata),\n      warn: (message, metadata) => this.warn(message, metadata),\n      error: (message, metadata) => this.error(message, metadata),\n      fatal: (message, metadata) => this.fatal(message, metadata)\n    };\n  }\n\n  createChild(name) {\n    return new this.constructor(name, this);\n  }\n\n  complete() {\n    this._subject.complete();\n  }\n\n  log(level, message, metadata = {}) {\n    const entry = Object.assign({}, metadata, this._metadata, {\n      level,\n      message,\n      timestamp: +Date.now()\n    });\n\n    this._subject.next(entry);\n  }\n\n  next(entry) {\n    this._subject.next(entry);\n  }\n\n  debug(message, metadata = {}) {\n    return this.log('debug', message, metadata);\n  }\n\n  info(message, metadata = {}) {\n    return this.log('info', message, metadata);\n  }\n\n  warn(message, metadata = {}) {\n    return this.log('warn', message, metadata);\n  }\n\n  error(message, metadata = {}) {\n    return this.log('error', message, metadata);\n  }\n\n  fatal(message, metadata = {}) {\n    return this.log('fatal', message, metadata);\n  }\n\n  toString() {\n    return `<Logger(${this.name})>`;\n  }\n\n  lift(operator) {\n    return this._observable.lift(operator);\n  }\n\n  subscribe(_observerOrNext, _error, _complete) {\n    // eslint-disable-next-line prefer-spread\n    return this._observable.subscribe.apply(this._observable, // eslint-disable-next-line prefer-rest-params\n    arguments);\n  }\n\n  forEach(next, PromiseCtor) {\n    return this._observable.forEach(next, PromiseCtor);\n  }\n\n}\n\nexports.Logger = Logger;","map":{"version":3,"names":["Object","defineProperty","exports","value","Logger","rxjs_1","require","Observable","constructor","name","parent","_subject","Subject","_obs","EMPTY","_subscription","path","p","push","_metadata","_observable","asObservable","subscribe","undefined","complete","v","unsubscribe","next","error","asApi","createChild","log","level","message","metadata","debug","info","warn","fatal","entry","assign","timestamp","Date","now","toString","lift","operator","_observerOrNext","_error","_complete","apply","arguments","forEach","PromiseCtor"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/core/src/logger/logger.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = void 0;\nconst rxjs_1 = require(\"rxjs\");\nclass Logger extends rxjs_1.Observable {\n    constructor(name, parent = null) {\n        super();\n        this.name = name;\n        this.parent = parent;\n        this._subject = new rxjs_1.Subject();\n        this._obs = rxjs_1.EMPTY;\n        this._subscription = null;\n        const path = [];\n        let p = parent;\n        while (p) {\n            path.push(p.name);\n            p = p.parent;\n        }\n        this._metadata = { name, path };\n        this._observable = this._subject.asObservable();\n        if (this.parent && this.parent._subject) {\n            // When the parent completes, complete us as well.\n            this.parent._subject.subscribe(undefined, undefined, () => this.complete());\n        }\n    }\n    get _observable() {\n        return this._obs;\n    }\n    set _observable(v) {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        this._obs = v;\n        if (this.parent) {\n            this._subscription = this.subscribe((value) => {\n                if (this.parent) {\n                    this.parent._subject.next(value);\n                }\n            }, (error) => {\n                if (this.parent) {\n                    this.parent._subject.error(error);\n                }\n            }, () => {\n                if (this._subscription) {\n                    this._subscription.unsubscribe();\n                }\n                this._subscription = null;\n            });\n        }\n    }\n    asApi() {\n        return {\n            createChild: (name) => this.createChild(name),\n            log: (level, message, metadata) => {\n                return this.log(level, message, metadata);\n            },\n            debug: (message, metadata) => this.debug(message, metadata),\n            info: (message, metadata) => this.info(message, metadata),\n            warn: (message, metadata) => this.warn(message, metadata),\n            error: (message, metadata) => this.error(message, metadata),\n            fatal: (message, metadata) => this.fatal(message, metadata),\n        };\n    }\n    createChild(name) {\n        return new this.constructor(name, this);\n    }\n    complete() {\n        this._subject.complete();\n    }\n    log(level, message, metadata = {}) {\n        const entry = Object.assign({}, metadata, this._metadata, {\n            level,\n            message,\n            timestamp: +Date.now(),\n        });\n        this._subject.next(entry);\n    }\n    next(entry) {\n        this._subject.next(entry);\n    }\n    debug(message, metadata = {}) {\n        return this.log('debug', message, metadata);\n    }\n    info(message, metadata = {}) {\n        return this.log('info', message, metadata);\n    }\n    warn(message, metadata = {}) {\n        return this.log('warn', message, metadata);\n    }\n    error(message, metadata = {}) {\n        return this.log('error', message, metadata);\n    }\n    fatal(message, metadata = {}) {\n        return this.log('fatal', message, metadata);\n    }\n    toString() {\n        return `<Logger(${this.name})>`;\n    }\n    lift(operator) {\n        return this._observable.lift(operator);\n    }\n    subscribe(_observerOrNext, _error, _complete) {\n        // eslint-disable-next-line prefer-spread\n        return this._observable.subscribe.apply(this._observable, \n        // eslint-disable-next-line prefer-rest-params\n        arguments);\n    }\n    forEach(next, PromiseCtor) {\n        return this._observable.forEach(next, PromiseCtor);\n    }\n}\nexports.Logger = Logger;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}