{"ast":null,"code":"/*global Buffer*/\n// Named constants with unique integer values\nvar C = {}; // Tokens\n\nvar LEFT_BRACE = C.LEFT_BRACE = 0x1;\nvar RIGHT_BRACE = C.RIGHT_BRACE = 0x2;\nvar LEFT_BRACKET = C.LEFT_BRACKET = 0x3;\nvar RIGHT_BRACKET = C.RIGHT_BRACKET = 0x4;\nvar COLON = C.COLON = 0x5;\nvar COMMA = C.COMMA = 0x6;\nvar TRUE = C.TRUE = 0x7;\nvar FALSE = C.FALSE = 0x8;\nvar NULL = C.NULL = 0x9;\nvar STRING = C.STRING = 0xa;\nvar NUMBER = C.NUMBER = 0xb; // Tokenizer States\n\nvar START = C.START = 0x11;\nvar STOP = C.STOP = 0x12;\nvar TRUE1 = C.TRUE1 = 0x21;\nvar TRUE2 = C.TRUE2 = 0x22;\nvar TRUE3 = C.TRUE3 = 0x23;\nvar FALSE1 = C.FALSE1 = 0x31;\nvar FALSE2 = C.FALSE2 = 0x32;\nvar FALSE3 = C.FALSE3 = 0x33;\nvar FALSE4 = C.FALSE4 = 0x34;\nvar NULL1 = C.NULL1 = 0x41;\nvar NULL2 = C.NULL2 = 0x42;\nvar NULL3 = C.NULL3 = 0x43;\nvar NUMBER1 = C.NUMBER1 = 0x51;\nvar NUMBER3 = C.NUMBER3 = 0x53;\nvar STRING1 = C.STRING1 = 0x61;\nvar STRING2 = C.STRING2 = 0x62;\nvar STRING3 = C.STRING3 = 0x63;\nvar STRING4 = C.STRING4 = 0x64;\nvar STRING5 = C.STRING5 = 0x65;\nvar STRING6 = C.STRING6 = 0x66; // Parser States\n\nvar VALUE = C.VALUE = 0x71;\nvar KEY = C.KEY = 0x72; // Parser Modes\n\nvar OBJECT = C.OBJECT = 0x81;\nvar ARRAY = C.ARRAY = 0x82; // Character constants\n\nvar BACK_SLASH = \"\\\\\".charCodeAt(0);\nvar FORWARD_SLASH = \"\\/\".charCodeAt(0);\nvar BACKSPACE = \"\\b\".charCodeAt(0);\nvar FORM_FEED = \"\\f\".charCodeAt(0);\nvar NEWLINE = \"\\n\".charCodeAt(0);\nvar CARRIAGE_RETURN = \"\\r\".charCodeAt(0);\nvar TAB = \"\\t\".charCodeAt(0);\nvar STRING_BUFFER_SIZE = 64 * 1024;\n\nfunction Parser() {\n  this.tState = START;\n  this.value = undefined;\n  this.string = undefined; // string data\n\n  this.stringBuffer = Buffer.alloc ? Buffer.alloc(STRING_BUFFER_SIZE) : new Buffer(STRING_BUFFER_SIZE);\n  this.stringBufferOffset = 0;\n  this.unicode = undefined; // unicode escapes\n\n  this.highSurrogate = undefined;\n  this.key = undefined;\n  this.mode = undefined;\n  this.stack = [];\n  this.state = VALUE;\n  this.bytes_remaining = 0; // number of bytes remaining in multi byte utf8 char to read after split boundary\n\n  this.bytes_in_sequence = 0; // bytes in multi byte utf8 char to read\n\n  this.temp_buffs = {\n    \"2\": new Buffer(2),\n    \"3\": new Buffer(3),\n    \"4\": new Buffer(4)\n  }; // for rebuilding chars split before boundary is reached\n  // Stream offset\n\n  this.offset = -1;\n} // Slow code to string converter (only used when throwing syntax errors)\n\n\nParser.toknam = function (code) {\n  var keys = Object.keys(C);\n\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n\n    if (C[key] === code) {\n      return key;\n    }\n  }\n\n  return code && \"0x\" + code.toString(16);\n};\n\nvar proto = Parser.prototype;\n\nproto.onError = function (err) {\n  throw err;\n};\n\nproto.charError = function (buffer, i) {\n  this.tState = STOP;\n  this.onError(new Error(\"Unexpected \" + JSON.stringify(String.fromCharCode(buffer[i])) + \" at position \" + i + \" in state \" + Parser.toknam(this.tState)));\n};\n\nproto.appendStringChar = function (char) {\n  if (this.stringBufferOffset >= STRING_BUFFER_SIZE) {\n    this.string += this.stringBuffer.toString('utf8');\n    this.stringBufferOffset = 0;\n  }\n\n  this.stringBuffer[this.stringBufferOffset++] = char;\n};\n\nproto.appendStringBuf = function (buf, start, end) {\n  var size = buf.length;\n\n  if (typeof start === 'number') {\n    if (typeof end === 'number') {\n      if (end < 0) {\n        // adding a negative end decreeses the size\n        size = buf.length - start + end;\n      } else {\n        size = end - start;\n      }\n    } else {\n      size = buf.length - start;\n    }\n  }\n\n  if (size < 0) {\n    size = 0;\n  }\n\n  if (this.stringBufferOffset + size > STRING_BUFFER_SIZE) {\n    this.string += this.stringBuffer.toString('utf8', 0, this.stringBufferOffset);\n    this.stringBufferOffset = 0;\n  }\n\n  buf.copy(this.stringBuffer, this.stringBufferOffset, start, end);\n  this.stringBufferOffset += size;\n};\n\nproto.write = function (buffer) {\n  if (typeof buffer === \"string\") buffer = new Buffer(buffer);\n  var n;\n\n  for (var i = 0, l = buffer.length; i < l; i++) {\n    if (this.tState === START) {\n      n = buffer[i];\n      this.offset++;\n\n      if (n === 0x7b) {\n        this.onToken(LEFT_BRACE, \"{\"); // {\n      } else if (n === 0x7d) {\n        this.onToken(RIGHT_BRACE, \"}\"); // }\n      } else if (n === 0x5b) {\n        this.onToken(LEFT_BRACKET, \"[\"); // [\n      } else if (n === 0x5d) {\n        this.onToken(RIGHT_BRACKET, \"]\"); // ]\n      } else if (n === 0x3a) {\n        this.onToken(COLON, \":\"); // :\n      } else if (n === 0x2c) {\n        this.onToken(COMMA, \",\"); // ,\n      } else if (n === 0x74) {\n        this.tState = TRUE1; // t\n      } else if (n === 0x66) {\n        this.tState = FALSE1; // f\n      } else if (n === 0x6e) {\n        this.tState = NULL1; // n\n      } else if (n === 0x22) {\n        // \"\n        this.string = \"\";\n        this.stringBufferOffset = 0;\n        this.tState = STRING1;\n      } else if (n === 0x2d) {\n        this.string = \"-\";\n        this.tState = NUMBER1; // -\n      } else {\n        if (n >= 0x30 && n < 0x40) {\n          // 1-9\n          this.string = String.fromCharCode(n);\n          this.tState = NUMBER3;\n        } else if (n === 0x20 || n === 0x09 || n === 0x0a || n === 0x0d) {// whitespace\n        } else {\n          return this.charError(buffer, i);\n        }\n      }\n    } else if (this.tState === STRING1) {\n      // After open quote\n      n = buffer[i]; // get current byte from buffer\n      // check for carry over of a multi byte char split between data chunks\n      // & fill temp buffer it with start of this data chunk up to the boundary limit set in the last iteration\n\n      if (this.bytes_remaining > 0) {\n        for (var j = 0; j < this.bytes_remaining; j++) {\n          this.temp_buffs[this.bytes_in_sequence][this.bytes_in_sequence - this.bytes_remaining + j] = buffer[j];\n        }\n\n        this.appendStringBuf(this.temp_buffs[this.bytes_in_sequence]);\n        this.bytes_in_sequence = this.bytes_remaining = 0;\n        i = i + j - 1;\n      } else if (this.bytes_remaining === 0 && n >= 128) {\n        // else if no remainder bytes carried over, parse multi byte (>=128) chars one at a time\n        if (n <= 193 || n > 244) {\n          return this.onError(new Error(\"Invalid UTF-8 character at position \" + i + \" in state \" + Parser.toknam(this.tState)));\n        }\n\n        if (n >= 194 && n <= 223) this.bytes_in_sequence = 2;\n        if (n >= 224 && n <= 239) this.bytes_in_sequence = 3;\n        if (n >= 240 && n <= 244) this.bytes_in_sequence = 4;\n\n        if (this.bytes_in_sequence + i > buffer.length) {\n          // if bytes needed to complete char fall outside buffer length, we have a boundary split\n          for (var k = 0; k <= buffer.length - 1 - i; k++) {\n            this.temp_buffs[this.bytes_in_sequence][k] = buffer[i + k]; // fill temp buffer of correct size with bytes available in this chunk\n          }\n\n          this.bytes_remaining = i + this.bytes_in_sequence - buffer.length;\n          i = buffer.length - 1;\n        } else {\n          this.appendStringBuf(buffer, i, i + this.bytes_in_sequence);\n          i = i + this.bytes_in_sequence - 1;\n        }\n      } else if (n === 0x22) {\n        this.tState = START;\n        this.string += this.stringBuffer.toString('utf8', 0, this.stringBufferOffset);\n        this.stringBufferOffset = 0;\n        this.onToken(STRING, this.string);\n        this.offset += Buffer.byteLength(this.string, 'utf8') + 1;\n        this.string = undefined;\n      } else if (n === 0x5c) {\n        this.tState = STRING2;\n      } else if (n >= 0x20) {\n        this.appendStringChar(n);\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === STRING2) {\n      // After backslash\n      n = buffer[i];\n\n      if (n === 0x22) {\n        this.appendStringChar(n);\n        this.tState = STRING1;\n      } else if (n === 0x5c) {\n        this.appendStringChar(BACK_SLASH);\n        this.tState = STRING1;\n      } else if (n === 0x2f) {\n        this.appendStringChar(FORWARD_SLASH);\n        this.tState = STRING1;\n      } else if (n === 0x62) {\n        this.appendStringChar(BACKSPACE);\n        this.tState = STRING1;\n      } else if (n === 0x66) {\n        this.appendStringChar(FORM_FEED);\n        this.tState = STRING1;\n      } else if (n === 0x6e) {\n        this.appendStringChar(NEWLINE);\n        this.tState = STRING1;\n      } else if (n === 0x72) {\n        this.appendStringChar(CARRIAGE_RETURN);\n        this.tState = STRING1;\n      } else if (n === 0x74) {\n        this.appendStringChar(TAB);\n        this.tState = STRING1;\n      } else if (n === 0x75) {\n        this.unicode = \"\";\n        this.tState = STRING3;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === STRING3 || this.tState === STRING4 || this.tState === STRING5 || this.tState === STRING6) {\n      // unicode hex codes\n      n = buffer[i]; // 0-9 A-F a-f\n\n      if (n >= 0x30 && n < 0x40 || n > 0x40 && n <= 0x46 || n > 0x60 && n <= 0x66) {\n        this.unicode += String.fromCharCode(n);\n\n        if (this.tState++ === STRING6) {\n          var intVal = parseInt(this.unicode, 16);\n          this.unicode = undefined;\n\n          if (this.highSurrogate !== undefined && intVal >= 0xDC00 && intVal < 0xDFFF + 1) {\n            //<56320,57343> - lowSurrogate\n            this.appendStringBuf(new Buffer(String.fromCharCode(this.highSurrogate, intVal)));\n            this.highSurrogate = undefined;\n          } else if (this.highSurrogate === undefined && intVal >= 0xD800 && intVal < 0xDBFF + 1) {\n            //<55296,56319> - highSurrogate\n            this.highSurrogate = intVal;\n          } else {\n            if (this.highSurrogate !== undefined) {\n              this.appendStringBuf(new Buffer(String.fromCharCode(this.highSurrogate)));\n              this.highSurrogate = undefined;\n            }\n\n            this.appendStringBuf(new Buffer(String.fromCharCode(intVal)));\n          }\n\n          this.tState = STRING1;\n        }\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === NUMBER1 || this.tState === NUMBER3) {\n      n = buffer[i];\n\n      switch (n) {\n        case 0x30: // 0\n\n        case 0x31: // 1\n\n        case 0x32: // 2\n\n        case 0x33: // 3\n\n        case 0x34: // 4\n\n        case 0x35: // 5\n\n        case 0x36: // 6\n\n        case 0x37: // 7\n\n        case 0x38: // 8\n\n        case 0x39: // 9\n\n        case 0x2e: // .\n\n        case 0x65: // e\n\n        case 0x45: // E\n\n        case 0x2b: // +\n\n        case 0x2d:\n          // -\n          this.string += String.fromCharCode(n);\n          this.tState = NUMBER3;\n          break;\n\n        default:\n          this.tState = START;\n          var result = Number(this.string);\n\n          if (isNaN(result)) {\n            return this.charError(buffer, i);\n          }\n\n          if (this.string.match(/[0-9]+/) == this.string && result.toString() != this.string) {\n            // Long string of digits which is an ID string and not valid and/or safe JavaScript integer Number\n            this.onToken(STRING, this.string);\n          } else {\n            this.onToken(NUMBER, result);\n          }\n\n          this.offset += this.string.length - 1;\n          this.string = undefined;\n          i--;\n          break;\n      }\n    } else if (this.tState === TRUE1) {\n      // r\n      if (buffer[i] === 0x72) {\n        this.tState = TRUE2;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === TRUE2) {\n      // u\n      if (buffer[i] === 0x75) {\n        this.tState = TRUE3;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === TRUE3) {\n      // e\n      if (buffer[i] === 0x65) {\n        this.tState = START;\n        this.onToken(TRUE, true);\n        this.offset += 3;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === FALSE1) {\n      // a\n      if (buffer[i] === 0x61) {\n        this.tState = FALSE2;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === FALSE2) {\n      // l\n      if (buffer[i] === 0x6c) {\n        this.tState = FALSE3;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === FALSE3) {\n      // s\n      if (buffer[i] === 0x73) {\n        this.tState = FALSE4;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === FALSE4) {\n      // e\n      if (buffer[i] === 0x65) {\n        this.tState = START;\n        this.onToken(FALSE, false);\n        this.offset += 4;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === NULL1) {\n      // u\n      if (buffer[i] === 0x75) {\n        this.tState = NULL2;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === NULL2) {\n      // l\n      if (buffer[i] === 0x6c) {\n        this.tState = NULL3;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === NULL3) {\n      // l\n      if (buffer[i] === 0x6c) {\n        this.tState = START;\n        this.onToken(NULL, null);\n        this.offset += 3;\n      } else {\n        return this.charError(buffer, i);\n      }\n    }\n  }\n};\n\nproto.onToken = function (token, value) {// Override this to get events\n};\n\nproto.parseError = function (token, value) {\n  this.tState = STOP;\n  this.onError(new Error(\"Unexpected \" + Parser.toknam(token) + (value ? \"(\" + JSON.stringify(value) + \")\" : \"\") + \" in state \" + Parser.toknam(this.state)));\n};\n\nproto.push = function () {\n  this.stack.push({\n    value: this.value,\n    key: this.key,\n    mode: this.mode\n  });\n};\n\nproto.pop = function () {\n  var value = this.value;\n  var parent = this.stack.pop();\n  this.value = parent.value;\n  this.key = parent.key;\n  this.mode = parent.mode;\n  this.emit(value);\n\n  if (!this.mode) {\n    this.state = VALUE;\n  }\n};\n\nproto.emit = function (value) {\n  if (this.mode) {\n    this.state = COMMA;\n  }\n\n  this.onValue(value);\n};\n\nproto.onValue = function (value) {// Override me\n};\n\nproto.onToken = function (token, value) {\n  if (this.state === VALUE) {\n    if (token === STRING || token === NUMBER || token === TRUE || token === FALSE || token === NULL) {\n      if (this.value) {\n        this.value[this.key] = value;\n      }\n\n      this.emit(value);\n    } else if (token === LEFT_BRACE) {\n      this.push();\n\n      if (this.value) {\n        this.value = this.value[this.key] = {};\n      } else {\n        this.value = {};\n      }\n\n      this.key = undefined;\n      this.state = KEY;\n      this.mode = OBJECT;\n    } else if (token === LEFT_BRACKET) {\n      this.push();\n\n      if (this.value) {\n        this.value = this.value[this.key] = [];\n      } else {\n        this.value = [];\n      }\n\n      this.key = 0;\n      this.mode = ARRAY;\n      this.state = VALUE;\n    } else if (token === RIGHT_BRACE) {\n      if (this.mode === OBJECT) {\n        this.pop();\n      } else {\n        return this.parseError(token, value);\n      }\n    } else if (token === RIGHT_BRACKET) {\n      if (this.mode === ARRAY) {\n        this.pop();\n      } else {\n        return this.parseError(token, value);\n      }\n    } else {\n      return this.parseError(token, value);\n    }\n  } else if (this.state === KEY) {\n    if (token === STRING) {\n      this.key = value;\n      this.state = COLON;\n    } else if (token === RIGHT_BRACE) {\n      this.pop();\n    } else {\n      return this.parseError(token, value);\n    }\n  } else if (this.state === COLON) {\n    if (token === COLON) {\n      this.state = VALUE;\n    } else {\n      return this.parseError(token, value);\n    }\n  } else if (this.state === COMMA) {\n    if (token === COMMA) {\n      if (this.mode === ARRAY) {\n        this.key++;\n        this.state = VALUE;\n      } else if (this.mode === OBJECT) {\n        this.state = KEY;\n      }\n    } else if (token === RIGHT_BRACKET && this.mode === ARRAY || token === RIGHT_BRACE && this.mode === OBJECT) {\n      this.pop();\n    } else {\n      return this.parseError(token, value);\n    }\n  } else {\n    return this.parseError(token, value);\n  }\n};\n\nParser.C = C;\nmodule.exports = Parser;","map":{"version":3,"names":["C","LEFT_BRACE","RIGHT_BRACE","LEFT_BRACKET","RIGHT_BRACKET","COLON","COMMA","TRUE","FALSE","NULL","STRING","NUMBER","START","STOP","TRUE1","TRUE2","TRUE3","FALSE1","FALSE2","FALSE3","FALSE4","NULL1","NULL2","NULL3","NUMBER1","NUMBER3","STRING1","STRING2","STRING3","STRING4","STRING5","STRING6","VALUE","KEY","OBJECT","ARRAY","BACK_SLASH","charCodeAt","FORWARD_SLASH","BACKSPACE","FORM_FEED","NEWLINE","CARRIAGE_RETURN","TAB","STRING_BUFFER_SIZE","Parser","tState","value","undefined","string","stringBuffer","Buffer","alloc","stringBufferOffset","unicode","highSurrogate","key","mode","stack","state","bytes_remaining","bytes_in_sequence","temp_buffs","offset","toknam","code","keys","Object","i","l","length","toString","proto","prototype","onError","err","charError","buffer","Error","JSON","stringify","String","fromCharCode","appendStringChar","char","appendStringBuf","buf","start","end","size","copy","write","n","onToken","j","k","byteLength","intVal","parseInt","result","Number","isNaN","match","token","parseError","push","pop","parent","emit","onValue","module","exports"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/jsonparse/jsonparse.js"],"sourcesContent":["/*global Buffer*/\n// Named constants with unique integer values\nvar C = {};\n// Tokens\nvar LEFT_BRACE    = C.LEFT_BRACE    = 0x1;\nvar RIGHT_BRACE   = C.RIGHT_BRACE   = 0x2;\nvar LEFT_BRACKET  = C.LEFT_BRACKET  = 0x3;\nvar RIGHT_BRACKET = C.RIGHT_BRACKET = 0x4;\nvar COLON         = C.COLON         = 0x5;\nvar COMMA         = C.COMMA         = 0x6;\nvar TRUE          = C.TRUE          = 0x7;\nvar FALSE         = C.FALSE         = 0x8;\nvar NULL          = C.NULL          = 0x9;\nvar STRING        = C.STRING        = 0xa;\nvar NUMBER        = C.NUMBER        = 0xb;\n// Tokenizer States\nvar START   = C.START   = 0x11;\nvar STOP    = C.STOP    = 0x12;\nvar TRUE1   = C.TRUE1   = 0x21;\nvar TRUE2   = C.TRUE2   = 0x22;\nvar TRUE3   = C.TRUE3   = 0x23;\nvar FALSE1  = C.FALSE1  = 0x31;\nvar FALSE2  = C.FALSE2  = 0x32;\nvar FALSE3  = C.FALSE3  = 0x33;\nvar FALSE4  = C.FALSE4  = 0x34;\nvar NULL1   = C.NULL1   = 0x41;\nvar NULL2   = C.NULL2   = 0x42;\nvar NULL3   = C.NULL3   = 0x43;\nvar NUMBER1 = C.NUMBER1 = 0x51;\nvar NUMBER3 = C.NUMBER3 = 0x53;\nvar STRING1 = C.STRING1 = 0x61;\nvar STRING2 = C.STRING2 = 0x62;\nvar STRING3 = C.STRING3 = 0x63;\nvar STRING4 = C.STRING4 = 0x64;\nvar STRING5 = C.STRING5 = 0x65;\nvar STRING6 = C.STRING6 = 0x66;\n// Parser States\nvar VALUE   = C.VALUE   = 0x71;\nvar KEY     = C.KEY     = 0x72;\n// Parser Modes\nvar OBJECT  = C.OBJECT  = 0x81;\nvar ARRAY   = C.ARRAY   = 0x82;\n// Character constants\nvar BACK_SLASH =      \"\\\\\".charCodeAt(0);\nvar FORWARD_SLASH =   \"\\/\".charCodeAt(0);\nvar BACKSPACE =       \"\\b\".charCodeAt(0);\nvar FORM_FEED =       \"\\f\".charCodeAt(0);\nvar NEWLINE =         \"\\n\".charCodeAt(0);\nvar CARRIAGE_RETURN = \"\\r\".charCodeAt(0);\nvar TAB =             \"\\t\".charCodeAt(0);\n\nvar STRING_BUFFER_SIZE = 64 * 1024;\n\nfunction Parser() {\n  this.tState = START;\n  this.value = undefined;\n\n  this.string = undefined; // string data\n  this.stringBuffer = Buffer.alloc ? Buffer.alloc(STRING_BUFFER_SIZE) : new Buffer(STRING_BUFFER_SIZE);\n  this.stringBufferOffset = 0;\n  this.unicode = undefined; // unicode escapes\n  this.highSurrogate = undefined;\n\n  this.key = undefined;\n  this.mode = undefined;\n  this.stack = [];\n  this.state = VALUE;\n  this.bytes_remaining = 0; // number of bytes remaining in multi byte utf8 char to read after split boundary\n  this.bytes_in_sequence = 0; // bytes in multi byte utf8 char to read\n  this.temp_buffs = { \"2\": new Buffer(2), \"3\": new Buffer(3), \"4\": new Buffer(4) }; // for rebuilding chars split before boundary is reached\n\n  // Stream offset\n  this.offset = -1;\n}\n\n// Slow code to string converter (only used when throwing syntax errors)\nParser.toknam = function (code) {\n  var keys = Object.keys(C);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    if (C[key] === code) { return key; }\n  }\n  return code && (\"0x\" + code.toString(16));\n};\n\nvar proto = Parser.prototype;\nproto.onError = function (err) { throw err; };\nproto.charError = function (buffer, i) {\n  this.tState = STOP;\n  this.onError(new Error(\"Unexpected \" + JSON.stringify(String.fromCharCode(buffer[i])) + \" at position \" + i + \" in state \" + Parser.toknam(this.tState)));\n};\nproto.appendStringChar = function (char) {\n  if (this.stringBufferOffset >= STRING_BUFFER_SIZE) {\n    this.string += this.stringBuffer.toString('utf8');\n    this.stringBufferOffset = 0;\n  }\n\n  this.stringBuffer[this.stringBufferOffset++] = char;\n};\nproto.appendStringBuf = function (buf, start, end) {\n  var size = buf.length;\n  if (typeof start === 'number') {\n    if (typeof end === 'number') {\n      if (end < 0) {\n        // adding a negative end decreeses the size\n        size = buf.length - start + end;\n      } else {\n        size = end - start;\n      }\n    } else {\n      size = buf.length - start;\n    }\n  }\n\n  if (size < 0) {\n    size = 0;\n  }\n\n  if (this.stringBufferOffset + size > STRING_BUFFER_SIZE) {\n    this.string += this.stringBuffer.toString('utf8', 0, this.stringBufferOffset);\n    this.stringBufferOffset = 0;\n  }\n\n  buf.copy(this.stringBuffer, this.stringBufferOffset, start, end);\n  this.stringBufferOffset += size;\n};\nproto.write = function (buffer) {\n  if (typeof buffer === \"string\") buffer = new Buffer(buffer);\n  var n;\n  for (var i = 0, l = buffer.length; i < l; i++) {\n    if (this.tState === START){\n      n = buffer[i];\n      this.offset++;\n      if(n === 0x7b){ this.onToken(LEFT_BRACE, \"{\"); // {\n      }else if(n === 0x7d){ this.onToken(RIGHT_BRACE, \"}\"); // }\n      }else if(n === 0x5b){ this.onToken(LEFT_BRACKET, \"[\"); // [\n      }else if(n === 0x5d){ this.onToken(RIGHT_BRACKET, \"]\"); // ]\n      }else if(n === 0x3a){ this.onToken(COLON, \":\");  // :\n      }else if(n === 0x2c){ this.onToken(COMMA, \",\"); // ,\n      }else if(n === 0x74){ this.tState = TRUE1;  // t\n      }else if(n === 0x66){ this.tState = FALSE1;  // f\n      }else if(n === 0x6e){ this.tState = NULL1; // n\n      }else if(n === 0x22){ // \"\n        this.string = \"\";\n        this.stringBufferOffset = 0;\n        this.tState = STRING1;\n      }else if(n === 0x2d){ this.string = \"-\"; this.tState = NUMBER1; // -\n      }else{\n        if (n >= 0x30 && n < 0x40) { // 1-9\n          this.string = String.fromCharCode(n); this.tState = NUMBER3;\n        } else if (n === 0x20 || n === 0x09 || n === 0x0a || n === 0x0d) {\n          // whitespace\n        } else {\n          return this.charError(buffer, i);\n        }\n      }\n    }else if (this.tState === STRING1){ // After open quote\n      n = buffer[i]; // get current byte from buffer\n      // check for carry over of a multi byte char split between data chunks\n      // & fill temp buffer it with start of this data chunk up to the boundary limit set in the last iteration\n      if (this.bytes_remaining > 0) {\n        for (var j = 0; j < this.bytes_remaining; j++) {\n          this.temp_buffs[this.bytes_in_sequence][this.bytes_in_sequence - this.bytes_remaining + j] = buffer[j];\n        }\n\n        this.appendStringBuf(this.temp_buffs[this.bytes_in_sequence]);\n        this.bytes_in_sequence = this.bytes_remaining = 0;\n        i = i + j - 1;\n      } else if (this.bytes_remaining === 0 && n >= 128) { // else if no remainder bytes carried over, parse multi byte (>=128) chars one at a time\n        if (n <= 193 || n > 244) {\n          return this.onError(new Error(\"Invalid UTF-8 character at position \" + i + \" in state \" + Parser.toknam(this.tState)));\n        }\n        if ((n >= 194) && (n <= 223)) this.bytes_in_sequence = 2;\n        if ((n >= 224) && (n <= 239)) this.bytes_in_sequence = 3;\n        if ((n >= 240) && (n <= 244)) this.bytes_in_sequence = 4;\n        if ((this.bytes_in_sequence + i) > buffer.length) { // if bytes needed to complete char fall outside buffer length, we have a boundary split\n          for (var k = 0; k <= (buffer.length - 1 - i); k++) {\n            this.temp_buffs[this.bytes_in_sequence][k] = buffer[i + k]; // fill temp buffer of correct size with bytes available in this chunk\n          }\n          this.bytes_remaining = (i + this.bytes_in_sequence) - buffer.length;\n          i = buffer.length - 1;\n        } else {\n          this.appendStringBuf(buffer, i, i + this.bytes_in_sequence);\n          i = i + this.bytes_in_sequence - 1;\n        }\n      } else if (n === 0x22) {\n        this.tState = START;\n        this.string += this.stringBuffer.toString('utf8', 0, this.stringBufferOffset);\n        this.stringBufferOffset = 0;\n        this.onToken(STRING, this.string);\n        this.offset += Buffer.byteLength(this.string, 'utf8') + 1;\n        this.string = undefined;\n      }\n      else if (n === 0x5c) {\n        this.tState = STRING2;\n      }\n      else if (n >= 0x20) { this.appendStringChar(n); }\n      else {\n          return this.charError(buffer, i);\n      }\n    }else if (this.tState === STRING2){ // After backslash\n      n = buffer[i];\n      if(n === 0x22){ this.appendStringChar(n); this.tState = STRING1;\n      }else if(n === 0x5c){ this.appendStringChar(BACK_SLASH); this.tState = STRING1;\n      }else if(n === 0x2f){ this.appendStringChar(FORWARD_SLASH); this.tState = STRING1;\n      }else if(n === 0x62){ this.appendStringChar(BACKSPACE); this.tState = STRING1;\n      }else if(n === 0x66){ this.appendStringChar(FORM_FEED); this.tState = STRING1;\n      }else if(n === 0x6e){ this.appendStringChar(NEWLINE); this.tState = STRING1;\n      }else if(n === 0x72){ this.appendStringChar(CARRIAGE_RETURN); this.tState = STRING1;\n      }else if(n === 0x74){ this.appendStringChar(TAB); this.tState = STRING1;\n      }else if(n === 0x75){ this.unicode = \"\"; this.tState = STRING3;\n      }else{\n        return this.charError(buffer, i);\n      }\n    }else if (this.tState === STRING3 || this.tState === STRING4 || this.tState === STRING5 || this.tState === STRING6){ // unicode hex codes\n      n = buffer[i];\n      // 0-9 A-F a-f\n      if ((n >= 0x30 && n < 0x40) || (n > 0x40 && n <= 0x46) || (n > 0x60 && n <= 0x66)) {\n        this.unicode += String.fromCharCode(n);\n        if (this.tState++ === STRING6) {\n          var intVal = parseInt(this.unicode, 16);\n          this.unicode = undefined;\n          if (this.highSurrogate !== undefined && intVal >= 0xDC00 && intVal < (0xDFFF + 1)) { //<56320,57343> - lowSurrogate\n            this.appendStringBuf(new Buffer(String.fromCharCode(this.highSurrogate, intVal)));\n            this.highSurrogate = undefined;\n          } else if (this.highSurrogate === undefined && intVal >= 0xD800 && intVal < (0xDBFF + 1)) { //<55296,56319> - highSurrogate\n            this.highSurrogate = intVal;\n          } else {\n            if (this.highSurrogate !== undefined) {\n              this.appendStringBuf(new Buffer(String.fromCharCode(this.highSurrogate)));\n              this.highSurrogate = undefined;\n            }\n            this.appendStringBuf(new Buffer(String.fromCharCode(intVal)));\n          }\n          this.tState = STRING1;\n        }\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === NUMBER1 || this.tState === NUMBER3) {\n        n = buffer[i];\n\n        switch (n) {\n          case 0x30: // 0\n          case 0x31: // 1\n          case 0x32: // 2\n          case 0x33: // 3\n          case 0x34: // 4\n          case 0x35: // 5\n          case 0x36: // 6\n          case 0x37: // 7\n          case 0x38: // 8\n          case 0x39: // 9\n          case 0x2e: // .\n          case 0x65: // e\n          case 0x45: // E\n          case 0x2b: // +\n          case 0x2d: // -\n            this.string += String.fromCharCode(n);\n            this.tState = NUMBER3;\n            break;\n          default:\n            this.tState = START;\n            var result = Number(this.string);\n\n            if (isNaN(result)){\n              return this.charError(buffer, i);\n            }\n\n            if ((this.string.match(/[0-9]+/) == this.string) && (result.toString() != this.string)) {\n              // Long string of digits which is an ID string and not valid and/or safe JavaScript integer Number\n              this.onToken(STRING, this.string);\n            } else {\n              this.onToken(NUMBER, result);\n            }\n\n            this.offset += this.string.length - 1;\n            this.string = undefined;\n            i--;\n            break;\n        }\n    }else if (this.tState === TRUE1){ // r\n      if (buffer[i] === 0x72) { this.tState = TRUE2; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === TRUE2){ // u\n      if (buffer[i] === 0x75) { this.tState = TRUE3; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === TRUE3){ // e\n      if (buffer[i] === 0x65) { this.tState = START; this.onToken(TRUE, true); this.offset+= 3; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === FALSE1){ // a\n      if (buffer[i] === 0x61) { this.tState = FALSE2; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === FALSE2){ // l\n      if (buffer[i] === 0x6c) { this.tState = FALSE3; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === FALSE3){ // s\n      if (buffer[i] === 0x73) { this.tState = FALSE4; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === FALSE4){ // e\n      if (buffer[i] === 0x65) { this.tState = START; this.onToken(FALSE, false); this.offset+= 4; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === NULL1){ // u\n      if (buffer[i] === 0x75) { this.tState = NULL2; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === NULL2){ // l\n      if (buffer[i] === 0x6c) { this.tState = NULL3; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === NULL3){ // l\n      if (buffer[i] === 0x6c) { this.tState = START; this.onToken(NULL, null); this.offset += 3; }\n      else { return this.charError(buffer, i); }\n    }\n  }\n};\nproto.onToken = function (token, value) {\n  // Override this to get events\n};\n\nproto.parseError = function (token, value) {\n  this.tState = STOP;\n  this.onError(new Error(\"Unexpected \" + Parser.toknam(token) + (value ? (\"(\" + JSON.stringify(value) + \")\") : \"\") + \" in state \" + Parser.toknam(this.state)));\n};\nproto.push = function () {\n  this.stack.push({value: this.value, key: this.key, mode: this.mode});\n};\nproto.pop = function () {\n  var value = this.value;\n  var parent = this.stack.pop();\n  this.value = parent.value;\n  this.key = parent.key;\n  this.mode = parent.mode;\n  this.emit(value);\n  if (!this.mode) { this.state = VALUE; }\n};\nproto.emit = function (value) {\n  if (this.mode) { this.state = COMMA; }\n  this.onValue(value);\n};\nproto.onValue = function (value) {\n  // Override me\n};\nproto.onToken = function (token, value) {\n  if(this.state === VALUE){\n    if(token === STRING || token === NUMBER || token === TRUE || token === FALSE || token === NULL){\n      if (this.value) {\n        this.value[this.key] = value;\n      }\n      this.emit(value);\n    }else if(token === LEFT_BRACE){\n      this.push();\n      if (this.value) {\n        this.value = this.value[this.key] = {};\n      } else {\n        this.value = {};\n      }\n      this.key = undefined;\n      this.state = KEY;\n      this.mode = OBJECT;\n    }else if(token === LEFT_BRACKET){\n      this.push();\n      if (this.value) {\n        this.value = this.value[this.key] = [];\n      } else {\n        this.value = [];\n      }\n      this.key = 0;\n      this.mode = ARRAY;\n      this.state = VALUE;\n    }else if(token === RIGHT_BRACE){\n      if (this.mode === OBJECT) {\n        this.pop();\n      } else {\n        return this.parseError(token, value);\n      }\n    }else if(token === RIGHT_BRACKET){\n      if (this.mode === ARRAY) {\n        this.pop();\n      } else {\n        return this.parseError(token, value);\n      }\n    }else{\n      return this.parseError(token, value);\n    }\n  }else if(this.state === KEY){\n    if (token === STRING) {\n      this.key = value;\n      this.state = COLON;\n    } else if (token === RIGHT_BRACE) {\n      this.pop();\n    } else {\n      return this.parseError(token, value);\n    }\n  }else if(this.state === COLON){\n    if (token === COLON) { this.state = VALUE; }\n    else { return this.parseError(token, value); }\n  }else if(this.state === COMMA){\n    if (token === COMMA) {\n      if (this.mode === ARRAY) { this.key++; this.state = VALUE; }\n      else if (this.mode === OBJECT) { this.state = KEY; }\n\n    } else if (token === RIGHT_BRACKET && this.mode === ARRAY || token === RIGHT_BRACE && this.mode === OBJECT) {\n      this.pop();\n    } else {\n      return this.parseError(token, value);\n    }\n  }else{\n    return this.parseError(token, value);\n  }\n};\n\nParser.C = C;\n\nmodule.exports = Parser;\n"],"mappings":"AAAA;AACA;AACA,IAAIA,CAAC,GAAG,EAAR,C,CACA;;AACA,IAAIC,UAAU,GAAMD,CAAC,CAACC,UAAF,GAAkB,GAAtC;AACA,IAAIC,WAAW,GAAKF,CAAC,CAACE,WAAF,GAAkB,GAAtC;AACA,IAAIC,YAAY,GAAIH,CAAC,CAACG,YAAF,GAAkB,GAAtC;AACA,IAAIC,aAAa,GAAGJ,CAAC,CAACI,aAAF,GAAkB,GAAtC;AACA,IAAIC,KAAK,GAAWL,CAAC,CAACK,KAAF,GAAkB,GAAtC;AACA,IAAIC,KAAK,GAAWN,CAAC,CAACM,KAAF,GAAkB,GAAtC;AACA,IAAIC,IAAI,GAAYP,CAAC,CAACO,IAAF,GAAkB,GAAtC;AACA,IAAIC,KAAK,GAAWR,CAAC,CAACQ,KAAF,GAAkB,GAAtC;AACA,IAAIC,IAAI,GAAYT,CAAC,CAACS,IAAF,GAAkB,GAAtC;AACA,IAAIC,MAAM,GAAUV,CAAC,CAACU,MAAF,GAAkB,GAAtC;AACA,IAAIC,MAAM,GAAUX,CAAC,CAACW,MAAF,GAAkB,GAAtC,C,CACA;;AACA,IAAIC,KAAK,GAAKZ,CAAC,CAACY,KAAF,GAAY,IAA1B;AACA,IAAIC,IAAI,GAAMb,CAAC,CAACa,IAAF,GAAY,IAA1B;AACA,IAAIC,KAAK,GAAKd,CAAC,CAACc,KAAF,GAAY,IAA1B;AACA,IAAIC,KAAK,GAAKf,CAAC,CAACe,KAAF,GAAY,IAA1B;AACA,IAAIC,KAAK,GAAKhB,CAAC,CAACgB,KAAF,GAAY,IAA1B;AACA,IAAIC,MAAM,GAAIjB,CAAC,CAACiB,MAAF,GAAY,IAA1B;AACA,IAAIC,MAAM,GAAIlB,CAAC,CAACkB,MAAF,GAAY,IAA1B;AACA,IAAIC,MAAM,GAAInB,CAAC,CAACmB,MAAF,GAAY,IAA1B;AACA,IAAIC,MAAM,GAAIpB,CAAC,CAACoB,MAAF,GAAY,IAA1B;AACA,IAAIC,KAAK,GAAKrB,CAAC,CAACqB,KAAF,GAAY,IAA1B;AACA,IAAIC,KAAK,GAAKtB,CAAC,CAACsB,KAAF,GAAY,IAA1B;AACA,IAAIC,KAAK,GAAKvB,CAAC,CAACuB,KAAF,GAAY,IAA1B;AACA,IAAIC,OAAO,GAAGxB,CAAC,CAACwB,OAAF,GAAY,IAA1B;AACA,IAAIC,OAAO,GAAGzB,CAAC,CAACyB,OAAF,GAAY,IAA1B;AACA,IAAIC,OAAO,GAAG1B,CAAC,CAAC0B,OAAF,GAAY,IAA1B;AACA,IAAIC,OAAO,GAAG3B,CAAC,CAAC2B,OAAF,GAAY,IAA1B;AACA,IAAIC,OAAO,GAAG5B,CAAC,CAAC4B,OAAF,GAAY,IAA1B;AACA,IAAIC,OAAO,GAAG7B,CAAC,CAAC6B,OAAF,GAAY,IAA1B;AACA,IAAIC,OAAO,GAAG9B,CAAC,CAAC8B,OAAF,GAAY,IAA1B;AACA,IAAIC,OAAO,GAAG/B,CAAC,CAAC+B,OAAF,GAAY,IAA1B,C,CACA;;AACA,IAAIC,KAAK,GAAKhC,CAAC,CAACgC,KAAF,GAAY,IAA1B;AACA,IAAIC,GAAG,GAAOjC,CAAC,CAACiC,GAAF,GAAY,IAA1B,C,CACA;;AACA,IAAIC,MAAM,GAAIlC,CAAC,CAACkC,MAAF,GAAY,IAA1B;AACA,IAAIC,KAAK,GAAKnC,CAAC,CAACmC,KAAF,GAAY,IAA1B,C,CACA;;AACA,IAAIC,UAAU,GAAQ,KAAKC,UAAL,CAAgB,CAAhB,CAAtB;AACA,IAAIC,aAAa,GAAK,KAAKD,UAAL,CAAgB,CAAhB,CAAtB;AACA,IAAIE,SAAS,GAAS,KAAKF,UAAL,CAAgB,CAAhB,CAAtB;AACA,IAAIG,SAAS,GAAS,KAAKH,UAAL,CAAgB,CAAhB,CAAtB;AACA,IAAII,OAAO,GAAW,KAAKJ,UAAL,CAAgB,CAAhB,CAAtB;AACA,IAAIK,eAAe,GAAG,KAAKL,UAAL,CAAgB,CAAhB,CAAtB;AACA,IAAIM,GAAG,GAAe,KAAKN,UAAL,CAAgB,CAAhB,CAAtB;AAEA,IAAIO,kBAAkB,GAAG,KAAK,IAA9B;;AAEA,SAASC,MAAT,GAAkB;EAChB,KAAKC,MAAL,GAAclC,KAAd;EACA,KAAKmC,KAAL,GAAaC,SAAb;EAEA,KAAKC,MAAL,GAAcD,SAAd,CAJgB,CAIS;;EACzB,KAAKE,YAAL,GAAoBC,MAAM,CAACC,KAAP,GAAeD,MAAM,CAACC,KAAP,CAAaR,kBAAb,CAAf,GAAkD,IAAIO,MAAJ,CAAWP,kBAAX,CAAtE;EACA,KAAKS,kBAAL,GAA0B,CAA1B;EACA,KAAKC,OAAL,GAAeN,SAAf,CAPgB,CAOU;;EAC1B,KAAKO,aAAL,GAAqBP,SAArB;EAEA,KAAKQ,GAAL,GAAWR,SAAX;EACA,KAAKS,IAAL,GAAYT,SAAZ;EACA,KAAKU,KAAL,GAAa,EAAb;EACA,KAAKC,KAAL,GAAa3B,KAAb;EACA,KAAK4B,eAAL,GAAuB,CAAvB,CAdgB,CAcU;;EAC1B,KAAKC,iBAAL,GAAyB,CAAzB,CAfgB,CAeY;;EAC5B,KAAKC,UAAL,GAAkB;IAAE,KAAK,IAAIX,MAAJ,CAAW,CAAX,CAAP;IAAsB,KAAK,IAAIA,MAAJ,CAAW,CAAX,CAA3B;IAA0C,KAAK,IAAIA,MAAJ,CAAW,CAAX;EAA/C,CAAlB,CAhBgB,CAgBkE;EAElF;;EACA,KAAKY,MAAL,GAAc,CAAC,CAAf;AACD,C,CAED;;;AACAlB,MAAM,CAACmB,MAAP,GAAgB,UAAUC,IAAV,EAAgB;EAC9B,IAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYlE,CAAZ,CAAX;;EACA,KAAK,IAAIoE,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCF,CAAC,GAAGC,CAArC,EAAwCD,CAAC,EAAzC,EAA6C;IAC3C,IAAIZ,GAAG,GAAGU,IAAI,CAACE,CAAD,CAAd;;IACA,IAAIpE,CAAC,CAACwD,GAAD,CAAD,KAAWS,IAAf,EAAqB;MAAE,OAAOT,GAAP;IAAa;EACrC;;EACD,OAAOS,IAAI,IAAK,OAAOA,IAAI,CAACM,QAAL,CAAc,EAAd,CAAvB;AACD,CAPD;;AASA,IAAIC,KAAK,GAAG3B,MAAM,CAAC4B,SAAnB;;AACAD,KAAK,CAACE,OAAN,GAAgB,UAAUC,GAAV,EAAe;EAAE,MAAMA,GAAN;AAAY,CAA7C;;AACAH,KAAK,CAACI,SAAN,GAAkB,UAAUC,MAAV,EAAkBT,CAAlB,EAAqB;EACrC,KAAKtB,MAAL,GAAcjC,IAAd;EACA,KAAK6D,OAAL,CAAa,IAAII,KAAJ,CAAU,gBAAgBC,IAAI,CAACC,SAAL,CAAeC,MAAM,CAACC,YAAP,CAAoBL,MAAM,CAACT,CAAD,CAA1B,CAAf,CAAhB,GAAiE,eAAjE,GAAmFA,CAAnF,GAAuF,YAAvF,GAAsGvB,MAAM,CAACmB,MAAP,CAAc,KAAKlB,MAAnB,CAAhH,CAAb;AACD,CAHD;;AAIA0B,KAAK,CAACW,gBAAN,GAAyB,UAAUC,IAAV,EAAgB;EACvC,IAAI,KAAK/B,kBAAL,IAA2BT,kBAA/B,EAAmD;IACjD,KAAKK,MAAL,IAAe,KAAKC,YAAL,CAAkBqB,QAAlB,CAA2B,MAA3B,CAAf;IACA,KAAKlB,kBAAL,GAA0B,CAA1B;EACD;;EAED,KAAKH,YAAL,CAAkB,KAAKG,kBAAL,EAAlB,IAA+C+B,IAA/C;AACD,CAPD;;AAQAZ,KAAK,CAACa,eAAN,GAAwB,UAAUC,GAAV,EAAeC,KAAf,EAAsBC,GAAtB,EAA2B;EACjD,IAAIC,IAAI,GAAGH,GAAG,CAAChB,MAAf;;EACA,IAAI,OAAOiB,KAAP,KAAiB,QAArB,EAA+B;IAC7B,IAAI,OAAOC,GAAP,KAAe,QAAnB,EAA6B;MAC3B,IAAIA,GAAG,GAAG,CAAV,EAAa;QACX;QACAC,IAAI,GAAGH,GAAG,CAAChB,MAAJ,GAAaiB,KAAb,GAAqBC,GAA5B;MACD,CAHD,MAGO;QACLC,IAAI,GAAGD,GAAG,GAAGD,KAAb;MACD;IACF,CAPD,MAOO;MACLE,IAAI,GAAGH,GAAG,CAAChB,MAAJ,GAAaiB,KAApB;IACD;EACF;;EAED,IAAIE,IAAI,GAAG,CAAX,EAAc;IACZA,IAAI,GAAG,CAAP;EACD;;EAED,IAAI,KAAKpC,kBAAL,GAA0BoC,IAA1B,GAAiC7C,kBAArC,EAAyD;IACvD,KAAKK,MAAL,IAAe,KAAKC,YAAL,CAAkBqB,QAAlB,CAA2B,MAA3B,EAAmC,CAAnC,EAAsC,KAAKlB,kBAA3C,CAAf;IACA,KAAKA,kBAAL,GAA0B,CAA1B;EACD;;EAEDiC,GAAG,CAACI,IAAJ,CAAS,KAAKxC,YAAd,EAA4B,KAAKG,kBAAjC,EAAqDkC,KAArD,EAA4DC,GAA5D;EACA,KAAKnC,kBAAL,IAA2BoC,IAA3B;AACD,CA1BD;;AA2BAjB,KAAK,CAACmB,KAAN,GAAc,UAAUd,MAAV,EAAkB;EAC9B,IAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgCA,MAAM,GAAG,IAAI1B,MAAJ,CAAW0B,MAAX,CAAT;EAChC,IAAIe,CAAJ;;EACA,KAAK,IAAIxB,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGQ,MAAM,CAACP,MAA3B,EAAmCF,CAAC,GAAGC,CAAvC,EAA0CD,CAAC,EAA3C,EAA+C;IAC7C,IAAI,KAAKtB,MAAL,KAAgBlC,KAApB,EAA0B;MACxBgF,CAAC,GAAGf,MAAM,CAACT,CAAD,CAAV;MACA,KAAKL,MAAL;;MACA,IAAG6B,CAAC,KAAK,IAAT,EAAc;QAAE,KAAKC,OAAL,CAAa5F,UAAb,EAAyB,GAAzB,EAAF,CAAiC;MAC9C,CADD,MACM,IAAG2F,CAAC,KAAK,IAAT,EAAc;QAAE,KAAKC,OAAL,CAAa3F,WAAb,EAA0B,GAA1B,EAAF,CAAkC;MACrD,CADK,MACA,IAAG0F,CAAC,KAAK,IAAT,EAAc;QAAE,KAAKC,OAAL,CAAa1F,YAAb,EAA2B,GAA3B,EAAF,CAAmC;MACtD,CADK,MACA,IAAGyF,CAAC,KAAK,IAAT,EAAc;QAAE,KAAKC,OAAL,CAAazF,aAAb,EAA4B,GAA5B,EAAF,CAAoC;MACvD,CADK,MACA,IAAGwF,CAAC,KAAK,IAAT,EAAc;QAAE,KAAKC,OAAL,CAAaxF,KAAb,EAAoB,GAApB,EAAF,CAA6B;MAChD,CADK,MACA,IAAGuF,CAAC,KAAK,IAAT,EAAc;QAAE,KAAKC,OAAL,CAAavF,KAAb,EAAoB,GAApB,EAAF,CAA4B;MAC/C,CADK,MACA,IAAGsF,CAAC,KAAK,IAAT,EAAc;QAAE,KAAK9C,MAAL,GAAchC,KAAd,CAAF,CAAwB;MAC3C,CADK,MACA,IAAG8E,CAAC,KAAK,IAAT,EAAc;QAAE,KAAK9C,MAAL,GAAc7B,MAAd,CAAF,CAAyB;MAC5C,CADK,MACA,IAAG2E,CAAC,KAAK,IAAT,EAAc;QAAE,KAAK9C,MAAL,GAAczB,KAAd,CAAF,CAAuB;MAC1C,CADK,MACA,IAAGuE,CAAC,KAAK,IAAT,EAAc;QAAE;QACpB,KAAK3C,MAAL,GAAc,EAAd;QACA,KAAKI,kBAAL,GAA0B,CAA1B;QACA,KAAKP,MAAL,GAAcpB,OAAd;MACD,CAJK,MAIA,IAAGkE,CAAC,KAAK,IAAT,EAAc;QAAE,KAAK3C,MAAL,GAAc,GAAd;QAAmB,KAAKH,MAAL,GAActB,OAAd,CAArB,CAA4C;MAC/D,CADK,MACD;QACH,IAAIoE,CAAC,IAAI,IAAL,IAAaA,CAAC,GAAG,IAArB,EAA2B;UAAE;UAC3B,KAAK3C,MAAL,GAAcgC,MAAM,CAACC,YAAP,CAAoBU,CAApB,CAAd;UAAsC,KAAK9C,MAAL,GAAcrB,OAAd;QACvC,CAFD,MAEO,IAAImE,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAK,IAApB,IAA4BA,CAAC,KAAK,IAAlC,IAA0CA,CAAC,KAAK,IAApD,EAA0D,CAC/D;QACD,CAFM,MAEA;UACL,OAAO,KAAKhB,SAAL,CAAeC,MAAf,EAAuBT,CAAvB,CAAP;QACD;MACF;IACF,CA1BD,MA0BM,IAAI,KAAKtB,MAAL,KAAgBpB,OAApB,EAA4B;MAAE;MAClCkE,CAAC,GAAGf,MAAM,CAACT,CAAD,CAAV,CADgC,CACjB;MACf;MACA;;MACA,IAAI,KAAKR,eAAL,GAAuB,CAA3B,EAA8B;QAC5B,KAAK,IAAIkC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKlC,eAAzB,EAA0CkC,CAAC,EAA3C,EAA+C;UAC7C,KAAKhC,UAAL,CAAgB,KAAKD,iBAArB,EAAwC,KAAKA,iBAAL,GAAyB,KAAKD,eAA9B,GAAgDkC,CAAxF,IAA6FjB,MAAM,CAACiB,CAAD,CAAnG;QACD;;QAED,KAAKT,eAAL,CAAqB,KAAKvB,UAAL,CAAgB,KAAKD,iBAArB,CAArB;QACA,KAAKA,iBAAL,GAAyB,KAAKD,eAAL,GAAuB,CAAhD;QACAQ,CAAC,GAAGA,CAAC,GAAG0B,CAAJ,GAAQ,CAAZ;MACD,CARD,MAQO,IAAI,KAAKlC,eAAL,KAAyB,CAAzB,IAA8BgC,CAAC,IAAI,GAAvC,EAA4C;QAAE;QACnD,IAAIA,CAAC,IAAI,GAAL,IAAYA,CAAC,GAAG,GAApB,EAAyB;UACvB,OAAO,KAAKlB,OAAL,CAAa,IAAII,KAAJ,CAAU,yCAAyCV,CAAzC,GAA6C,YAA7C,GAA4DvB,MAAM,CAACmB,MAAP,CAAc,KAAKlB,MAAnB,CAAtE,CAAb,CAAP;QACD;;QACD,IAAK8C,CAAC,IAAI,GAAN,IAAeA,CAAC,IAAI,GAAxB,EAA8B,KAAK/B,iBAAL,GAAyB,CAAzB;QAC9B,IAAK+B,CAAC,IAAI,GAAN,IAAeA,CAAC,IAAI,GAAxB,EAA8B,KAAK/B,iBAAL,GAAyB,CAAzB;QAC9B,IAAK+B,CAAC,IAAI,GAAN,IAAeA,CAAC,IAAI,GAAxB,EAA8B,KAAK/B,iBAAL,GAAyB,CAAzB;;QAC9B,IAAK,KAAKA,iBAAL,GAAyBO,CAA1B,GAA+BS,MAAM,CAACP,MAA1C,EAAkD;UAAE;UAClD,KAAK,IAAIyB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAKlB,MAAM,CAACP,MAAP,GAAgB,CAAhB,GAAoBF,CAA1C,EAA8C2B,CAAC,EAA/C,EAAmD;YACjD,KAAKjC,UAAL,CAAgB,KAAKD,iBAArB,EAAwCkC,CAAxC,IAA6ClB,MAAM,CAACT,CAAC,GAAG2B,CAAL,CAAnD,CADiD,CACW;UAC7D;;UACD,KAAKnC,eAAL,GAAwBQ,CAAC,GAAG,KAAKP,iBAAV,GAA+BgB,MAAM,CAACP,MAA7D;UACAF,CAAC,GAAGS,MAAM,CAACP,MAAP,GAAgB,CAApB;QACD,CAND,MAMO;UACL,KAAKe,eAAL,CAAqBR,MAArB,EAA6BT,CAA7B,EAAgCA,CAAC,GAAG,KAAKP,iBAAzC;UACAO,CAAC,GAAGA,CAAC,GAAG,KAAKP,iBAAT,GAA6B,CAAjC;QACD;MACF,CAjBM,MAiBA,IAAI+B,CAAC,KAAK,IAAV,EAAgB;QACrB,KAAK9C,MAAL,GAAclC,KAAd;QACA,KAAKqC,MAAL,IAAe,KAAKC,YAAL,CAAkBqB,QAAlB,CAA2B,MAA3B,EAAmC,CAAnC,EAAsC,KAAKlB,kBAA3C,CAAf;QACA,KAAKA,kBAAL,GAA0B,CAA1B;QACA,KAAKwC,OAAL,CAAanF,MAAb,EAAqB,KAAKuC,MAA1B;QACA,KAAKc,MAAL,IAAeZ,MAAM,CAAC6C,UAAP,CAAkB,KAAK/C,MAAvB,EAA+B,MAA/B,IAAyC,CAAxD;QACA,KAAKA,MAAL,GAAcD,SAAd;MACD,CAPM,MAQF,IAAI4C,CAAC,KAAK,IAAV,EAAgB;QACnB,KAAK9C,MAAL,GAAcnB,OAAd;MACD,CAFI,MAGA,IAAIiE,CAAC,IAAI,IAAT,EAAe;QAAE,KAAKT,gBAAL,CAAsBS,CAAtB;MAA2B,CAA5C,MACA;QACD,OAAO,KAAKhB,SAAL,CAAeC,MAAf,EAAuBT,CAAvB,CAAP;MACH;IACF,CA5CK,MA4CA,IAAI,KAAKtB,MAAL,KAAgBnB,OAApB,EAA4B;MAAE;MAClCiE,CAAC,GAAGf,MAAM,CAACT,CAAD,CAAV;;MACA,IAAGwB,CAAC,KAAK,IAAT,EAAc;QAAE,KAAKT,gBAAL,CAAsBS,CAAtB;QAA0B,KAAK9C,MAAL,GAAcpB,OAAd;MACzC,CADD,MACM,IAAGkE,CAAC,KAAK,IAAT,EAAc;QAAE,KAAKT,gBAAL,CAAsB/C,UAAtB;QAAmC,KAAKU,MAAL,GAAcpB,OAAd;MACxD,CADK,MACA,IAAGkE,CAAC,KAAK,IAAT,EAAc;QAAE,KAAKT,gBAAL,CAAsB7C,aAAtB;QAAsC,KAAKQ,MAAL,GAAcpB,OAAd;MAC3D,CADK,MACA,IAAGkE,CAAC,KAAK,IAAT,EAAc;QAAE,KAAKT,gBAAL,CAAsB5C,SAAtB;QAAkC,KAAKO,MAAL,GAAcpB,OAAd;MACvD,CADK,MACA,IAAGkE,CAAC,KAAK,IAAT,EAAc;QAAE,KAAKT,gBAAL,CAAsB3C,SAAtB;QAAkC,KAAKM,MAAL,GAAcpB,OAAd;MACvD,CADK,MACA,IAAGkE,CAAC,KAAK,IAAT,EAAc;QAAE,KAAKT,gBAAL,CAAsB1C,OAAtB;QAAgC,KAAKK,MAAL,GAAcpB,OAAd;MACrD,CADK,MACA,IAAGkE,CAAC,KAAK,IAAT,EAAc;QAAE,KAAKT,gBAAL,CAAsBzC,eAAtB;QAAwC,KAAKI,MAAL,GAAcpB,OAAd;MAC7D,CADK,MACA,IAAGkE,CAAC,KAAK,IAAT,EAAc;QAAE,KAAKT,gBAAL,CAAsBxC,GAAtB;QAA4B,KAAKG,MAAL,GAAcpB,OAAd;MACjD,CADK,MACA,IAAGkE,CAAC,KAAK,IAAT,EAAc;QAAE,KAAKtC,OAAL,GAAe,EAAf;QAAmB,KAAKR,MAAL,GAAclB,OAAd;MACxC,CADK,MACD;QACH,OAAO,KAAKgD,SAAL,CAAeC,MAAf,EAAuBT,CAAvB,CAAP;MACD;IACF,CAdK,MAcA,IAAI,KAAKtB,MAAL,KAAgBlB,OAAhB,IAA2B,KAAKkB,MAAL,KAAgBjB,OAA3C,IAAsD,KAAKiB,MAAL,KAAgBhB,OAAtE,IAAiF,KAAKgB,MAAL,KAAgBf,OAArG,EAA6G;MAAE;MACnH6D,CAAC,GAAGf,MAAM,CAACT,CAAD,CAAV,CADiH,CAEjH;;MACA,IAAKwB,CAAC,IAAI,IAAL,IAAaA,CAAC,GAAG,IAAlB,IAA4BA,CAAC,GAAG,IAAJ,IAAYA,CAAC,IAAI,IAA7C,IAAuDA,CAAC,GAAG,IAAJ,IAAYA,CAAC,IAAI,IAA5E,EAAmF;QACjF,KAAKtC,OAAL,IAAgB2B,MAAM,CAACC,YAAP,CAAoBU,CAApB,CAAhB;;QACA,IAAI,KAAK9C,MAAL,OAAkBf,OAAtB,EAA+B;UAC7B,IAAIkE,MAAM,GAAGC,QAAQ,CAAC,KAAK5C,OAAN,EAAe,EAAf,CAArB;UACA,KAAKA,OAAL,GAAeN,SAAf;;UACA,IAAI,KAAKO,aAAL,KAAuBP,SAAvB,IAAoCiD,MAAM,IAAI,MAA9C,IAAwDA,MAAM,GAAI,SAAS,CAA/E,EAAmF;YAAE;YACnF,KAAKZ,eAAL,CAAqB,IAAIlC,MAAJ,CAAW8B,MAAM,CAACC,YAAP,CAAoB,KAAK3B,aAAzB,EAAwC0C,MAAxC,CAAX,CAArB;YACA,KAAK1C,aAAL,GAAqBP,SAArB;UACD,CAHD,MAGO,IAAI,KAAKO,aAAL,KAAuBP,SAAvB,IAAoCiD,MAAM,IAAI,MAA9C,IAAwDA,MAAM,GAAI,SAAS,CAA/E,EAAmF;YAAE;YAC1F,KAAK1C,aAAL,GAAqB0C,MAArB;UACD,CAFM,MAEA;YACL,IAAI,KAAK1C,aAAL,KAAuBP,SAA3B,EAAsC;cACpC,KAAKqC,eAAL,CAAqB,IAAIlC,MAAJ,CAAW8B,MAAM,CAACC,YAAP,CAAoB,KAAK3B,aAAzB,CAAX,CAArB;cACA,KAAKA,aAAL,GAAqBP,SAArB;YACD;;YACD,KAAKqC,eAAL,CAAqB,IAAIlC,MAAJ,CAAW8B,MAAM,CAACC,YAAP,CAAoBe,MAApB,CAAX,CAArB;UACD;;UACD,KAAKnD,MAAL,GAAcpB,OAAd;QACD;MACF,CAnBD,MAmBO;QACL,OAAO,KAAKkD,SAAL,CAAeC,MAAf,EAAuBT,CAAvB,CAAP;MACD;IACF,CAzBK,MAyBC,IAAI,KAAKtB,MAAL,KAAgBtB,OAAhB,IAA2B,KAAKsB,MAAL,KAAgBrB,OAA/C,EAAwD;MAC3DmE,CAAC,GAAGf,MAAM,CAACT,CAAD,CAAV;;MAEA,QAAQwB,CAAR;QACE,KAAK,IAAL,CADF,CACa;;QACX,KAAK,IAAL,CAFF,CAEa;;QACX,KAAK,IAAL,CAHF,CAGa;;QACX,KAAK,IAAL,CAJF,CAIa;;QACX,KAAK,IAAL,CALF,CAKa;;QACX,KAAK,IAAL,CANF,CAMa;;QACX,KAAK,IAAL,CAPF,CAOa;;QACX,KAAK,IAAL,CARF,CAQa;;QACX,KAAK,IAAL,CATF,CASa;;QACX,KAAK,IAAL,CAVF,CAUa;;QACX,KAAK,IAAL,CAXF,CAWa;;QACX,KAAK,IAAL,CAZF,CAYa;;QACX,KAAK,IAAL,CAbF,CAaa;;QACX,KAAK,IAAL,CAdF,CAca;;QACX,KAAK,IAAL;UAAW;UACT,KAAK3C,MAAL,IAAegC,MAAM,CAACC,YAAP,CAAoBU,CAApB,CAAf;UACA,KAAK9C,MAAL,GAAcrB,OAAd;UACA;;QACF;UACE,KAAKqB,MAAL,GAAclC,KAAd;UACA,IAAIuF,MAAM,GAAGC,MAAM,CAAC,KAAKnD,MAAN,CAAnB;;UAEA,IAAIoD,KAAK,CAACF,MAAD,CAAT,EAAkB;YAChB,OAAO,KAAKvB,SAAL,CAAeC,MAAf,EAAuBT,CAAvB,CAAP;UACD;;UAED,IAAK,KAAKnB,MAAL,CAAYqD,KAAZ,CAAkB,QAAlB,KAA+B,KAAKrD,MAArC,IAAiDkD,MAAM,CAAC5B,QAAP,MAAqB,KAAKtB,MAA/E,EAAwF;YACtF;YACA,KAAK4C,OAAL,CAAanF,MAAb,EAAqB,KAAKuC,MAA1B;UACD,CAHD,MAGO;YACL,KAAK4C,OAAL,CAAalF,MAAb,EAAqBwF,MAArB;UACD;;UAED,KAAKpC,MAAL,IAAe,KAAKd,MAAL,CAAYqB,MAAZ,GAAqB,CAApC;UACA,KAAKrB,MAAL,GAAcD,SAAd;UACAoB,CAAC;UACD;MArCJ;IAuCH,CA1CM,MA0CD,IAAI,KAAKtB,MAAL,KAAgBhC,KAApB,EAA0B;MAAE;MAChC,IAAI+D,MAAM,CAACT,CAAD,CAAN,KAAc,IAAlB,EAAwB;QAAE,KAAKtB,MAAL,GAAc/B,KAAd;MAAsB,CAAhD,MACK;QAAE,OAAO,KAAK6D,SAAL,CAAeC,MAAf,EAAuBT,CAAvB,CAAP;MAAmC;IAC3C,CAHK,MAGA,IAAI,KAAKtB,MAAL,KAAgB/B,KAApB,EAA0B;MAAE;MAChC,IAAI8D,MAAM,CAACT,CAAD,CAAN,KAAc,IAAlB,EAAwB;QAAE,KAAKtB,MAAL,GAAc9B,KAAd;MAAsB,CAAhD,MACK;QAAE,OAAO,KAAK4D,SAAL,CAAeC,MAAf,EAAuBT,CAAvB,CAAP;MAAmC;IAC3C,CAHK,MAGA,IAAI,KAAKtB,MAAL,KAAgB9B,KAApB,EAA0B;MAAE;MAChC,IAAI6D,MAAM,CAACT,CAAD,CAAN,KAAc,IAAlB,EAAwB;QAAE,KAAKtB,MAAL,GAAclC,KAAd;QAAqB,KAAKiF,OAAL,CAAatF,IAAb,EAAmB,IAAnB;QAA0B,KAAKwD,MAAL,IAAc,CAAd;MAAkB,CAA3F,MACK;QAAE,OAAO,KAAKa,SAAL,CAAeC,MAAf,EAAuBT,CAAvB,CAAP;MAAmC;IAC3C,CAHK,MAGA,IAAI,KAAKtB,MAAL,KAAgB7B,MAApB,EAA2B;MAAE;MACjC,IAAI4D,MAAM,CAACT,CAAD,CAAN,KAAc,IAAlB,EAAwB;QAAE,KAAKtB,MAAL,GAAc5B,MAAd;MAAuB,CAAjD,MACK;QAAE,OAAO,KAAK0D,SAAL,CAAeC,MAAf,EAAuBT,CAAvB,CAAP;MAAmC;IAC3C,CAHK,MAGA,IAAI,KAAKtB,MAAL,KAAgB5B,MAApB,EAA2B;MAAE;MACjC,IAAI2D,MAAM,CAACT,CAAD,CAAN,KAAc,IAAlB,EAAwB;QAAE,KAAKtB,MAAL,GAAc3B,MAAd;MAAuB,CAAjD,MACK;QAAE,OAAO,KAAKyD,SAAL,CAAeC,MAAf,EAAuBT,CAAvB,CAAP;MAAmC;IAC3C,CAHK,MAGA,IAAI,KAAKtB,MAAL,KAAgB3B,MAApB,EAA2B;MAAE;MACjC,IAAI0D,MAAM,CAACT,CAAD,CAAN,KAAc,IAAlB,EAAwB;QAAE,KAAKtB,MAAL,GAAc1B,MAAd;MAAuB,CAAjD,MACK;QAAE,OAAO,KAAKwD,SAAL,CAAeC,MAAf,EAAuBT,CAAvB,CAAP;MAAmC;IAC3C,CAHK,MAGA,IAAI,KAAKtB,MAAL,KAAgB1B,MAApB,EAA2B;MAAE;MACjC,IAAIyD,MAAM,CAACT,CAAD,CAAN,KAAc,IAAlB,EAAwB;QAAE,KAAKtB,MAAL,GAAclC,KAAd;QAAqB,KAAKiF,OAAL,CAAarF,KAAb,EAAoB,KAApB;QAA4B,KAAKuD,MAAL,IAAc,CAAd;MAAkB,CAA7F,MACK;QAAE,OAAO,KAAKa,SAAL,CAAeC,MAAf,EAAuBT,CAAvB,CAAP;MAAmC;IAC3C,CAHK,MAGA,IAAI,KAAKtB,MAAL,KAAgBzB,KAApB,EAA0B;MAAE;MAChC,IAAIwD,MAAM,CAACT,CAAD,CAAN,KAAc,IAAlB,EAAwB;QAAE,KAAKtB,MAAL,GAAcxB,KAAd;MAAsB,CAAhD,MACK;QAAE,OAAO,KAAKsD,SAAL,CAAeC,MAAf,EAAuBT,CAAvB,CAAP;MAAmC;IAC3C,CAHK,MAGA,IAAI,KAAKtB,MAAL,KAAgBxB,KAApB,EAA0B;MAAE;MAChC,IAAIuD,MAAM,CAACT,CAAD,CAAN,KAAc,IAAlB,EAAwB;QAAE,KAAKtB,MAAL,GAAcvB,KAAd;MAAsB,CAAhD,MACK;QAAE,OAAO,KAAKqD,SAAL,CAAeC,MAAf,EAAuBT,CAAvB,CAAP;MAAmC;IAC3C,CAHK,MAGA,IAAI,KAAKtB,MAAL,KAAgBvB,KAApB,EAA0B;MAAE;MAChC,IAAIsD,MAAM,CAACT,CAAD,CAAN,KAAc,IAAlB,EAAwB;QAAE,KAAKtB,MAAL,GAAclC,KAAd;QAAqB,KAAKiF,OAAL,CAAapF,IAAb,EAAmB,IAAnB;QAA0B,KAAKsD,MAAL,IAAe,CAAf;MAAmB,CAA5F,MACK;QAAE,OAAO,KAAKa,SAAL,CAAeC,MAAf,EAAuBT,CAAvB,CAAP;MAAmC;IAC3C;EACF;AACF,CA3LD;;AA4LAI,KAAK,CAACqB,OAAN,GAAgB,UAAUU,KAAV,EAAiBxD,KAAjB,EAAwB,CACtC;AACD,CAFD;;AAIAyB,KAAK,CAACgC,UAAN,GAAmB,UAAUD,KAAV,EAAiBxD,KAAjB,EAAwB;EACzC,KAAKD,MAAL,GAAcjC,IAAd;EACA,KAAK6D,OAAL,CAAa,IAAII,KAAJ,CAAU,gBAAgBjC,MAAM,CAACmB,MAAP,CAAcuC,KAAd,CAAhB,IAAwCxD,KAAK,GAAI,MAAMgC,IAAI,CAACC,SAAL,CAAejC,KAAf,CAAN,GAA8B,GAAlC,GAAyC,EAAtF,IAA4F,YAA5F,GAA2GF,MAAM,CAACmB,MAAP,CAAc,KAAKL,KAAnB,CAArH,CAAb;AACD,CAHD;;AAIAa,KAAK,CAACiC,IAAN,GAAa,YAAY;EACvB,KAAK/C,KAAL,CAAW+C,IAAX,CAAgB;IAAC1D,KAAK,EAAE,KAAKA,KAAb;IAAoBS,GAAG,EAAE,KAAKA,GAA9B;IAAmCC,IAAI,EAAE,KAAKA;EAA9C,CAAhB;AACD,CAFD;;AAGAe,KAAK,CAACkC,GAAN,GAAY,YAAY;EACtB,IAAI3D,KAAK,GAAG,KAAKA,KAAjB;EACA,IAAI4D,MAAM,GAAG,KAAKjD,KAAL,CAAWgD,GAAX,EAAb;EACA,KAAK3D,KAAL,GAAa4D,MAAM,CAAC5D,KAApB;EACA,KAAKS,GAAL,GAAWmD,MAAM,CAACnD,GAAlB;EACA,KAAKC,IAAL,GAAYkD,MAAM,CAAClD,IAAnB;EACA,KAAKmD,IAAL,CAAU7D,KAAV;;EACA,IAAI,CAAC,KAAKU,IAAV,EAAgB;IAAE,KAAKE,KAAL,GAAa3B,KAAb;EAAqB;AACxC,CARD;;AASAwC,KAAK,CAACoC,IAAN,GAAa,UAAU7D,KAAV,EAAiB;EAC5B,IAAI,KAAKU,IAAT,EAAe;IAAE,KAAKE,KAAL,GAAarD,KAAb;EAAqB;;EACtC,KAAKuG,OAAL,CAAa9D,KAAb;AACD,CAHD;;AAIAyB,KAAK,CAACqC,OAAN,GAAgB,UAAU9D,KAAV,EAAiB,CAC/B;AACD,CAFD;;AAGAyB,KAAK,CAACqB,OAAN,GAAgB,UAAUU,KAAV,EAAiBxD,KAAjB,EAAwB;EACtC,IAAG,KAAKY,KAAL,KAAe3B,KAAlB,EAAwB;IACtB,IAAGuE,KAAK,KAAK7F,MAAV,IAAoB6F,KAAK,KAAK5F,MAA9B,IAAwC4F,KAAK,KAAKhG,IAAlD,IAA0DgG,KAAK,KAAK/F,KAApE,IAA6E+F,KAAK,KAAK9F,IAA1F,EAA+F;MAC7F,IAAI,KAAKsC,KAAT,EAAgB;QACd,KAAKA,KAAL,CAAW,KAAKS,GAAhB,IAAuBT,KAAvB;MACD;;MACD,KAAK6D,IAAL,CAAU7D,KAAV;IACD,CALD,MAKM,IAAGwD,KAAK,KAAKtG,UAAb,EAAwB;MAC5B,KAAKwG,IAAL;;MACA,IAAI,KAAK1D,KAAT,EAAgB;QACd,KAAKA,KAAL,GAAa,KAAKA,KAAL,CAAW,KAAKS,GAAhB,IAAuB,EAApC;MACD,CAFD,MAEO;QACL,KAAKT,KAAL,GAAa,EAAb;MACD;;MACD,KAAKS,GAAL,GAAWR,SAAX;MACA,KAAKW,KAAL,GAAa1B,GAAb;MACA,KAAKwB,IAAL,GAAYvB,MAAZ;IACD,CAVK,MAUA,IAAGqE,KAAK,KAAKpG,YAAb,EAA0B;MAC9B,KAAKsG,IAAL;;MACA,IAAI,KAAK1D,KAAT,EAAgB;QACd,KAAKA,KAAL,GAAa,KAAKA,KAAL,CAAW,KAAKS,GAAhB,IAAuB,EAApC;MACD,CAFD,MAEO;QACL,KAAKT,KAAL,GAAa,EAAb;MACD;;MACD,KAAKS,GAAL,GAAW,CAAX;MACA,KAAKC,IAAL,GAAYtB,KAAZ;MACA,KAAKwB,KAAL,GAAa3B,KAAb;IACD,CAVK,MAUA,IAAGuE,KAAK,KAAKrG,WAAb,EAAyB;MAC7B,IAAI,KAAKuD,IAAL,KAAcvB,MAAlB,EAA0B;QACxB,KAAKwE,GAAL;MACD,CAFD,MAEO;QACL,OAAO,KAAKF,UAAL,CAAgBD,KAAhB,EAAuBxD,KAAvB,CAAP;MACD;IACF,CANK,MAMA,IAAGwD,KAAK,KAAKnG,aAAb,EAA2B;MAC/B,IAAI,KAAKqD,IAAL,KAActB,KAAlB,EAAyB;QACvB,KAAKuE,GAAL;MACD,CAFD,MAEO;QACL,OAAO,KAAKF,UAAL,CAAgBD,KAAhB,EAAuBxD,KAAvB,CAAP;MACD;IACF,CANK,MAMD;MACH,OAAO,KAAKyD,UAAL,CAAgBD,KAAhB,EAAuBxD,KAAvB,CAAP;IACD;EACF,CAzCD,MAyCM,IAAG,KAAKY,KAAL,KAAe1B,GAAlB,EAAsB;IAC1B,IAAIsE,KAAK,KAAK7F,MAAd,EAAsB;MACpB,KAAK8C,GAAL,GAAWT,KAAX;MACA,KAAKY,KAAL,GAAatD,KAAb;IACD,CAHD,MAGO,IAAIkG,KAAK,KAAKrG,WAAd,EAA2B;MAChC,KAAKwG,GAAL;IACD,CAFM,MAEA;MACL,OAAO,KAAKF,UAAL,CAAgBD,KAAhB,EAAuBxD,KAAvB,CAAP;IACD;EACF,CATK,MASA,IAAG,KAAKY,KAAL,KAAetD,KAAlB,EAAwB;IAC5B,IAAIkG,KAAK,KAAKlG,KAAd,EAAqB;MAAE,KAAKsD,KAAL,GAAa3B,KAAb;IAAqB,CAA5C,MACK;MAAE,OAAO,KAAKwE,UAAL,CAAgBD,KAAhB,EAAuBxD,KAAvB,CAAP;IAAuC;EAC/C,CAHK,MAGA,IAAG,KAAKY,KAAL,KAAerD,KAAlB,EAAwB;IAC5B,IAAIiG,KAAK,KAAKjG,KAAd,EAAqB;MACnB,IAAI,KAAKmD,IAAL,KAActB,KAAlB,EAAyB;QAAE,KAAKqB,GAAL;QAAY,KAAKG,KAAL,GAAa3B,KAAb;MAAqB,CAA5D,MACK,IAAI,KAAKyB,IAAL,KAAcvB,MAAlB,EAA0B;QAAE,KAAKyB,KAAL,GAAa1B,GAAb;MAAmB;IAErD,CAJD,MAIO,IAAIsE,KAAK,KAAKnG,aAAV,IAA2B,KAAKqD,IAAL,KAActB,KAAzC,IAAkDoE,KAAK,KAAKrG,WAAV,IAAyB,KAAKuD,IAAL,KAAcvB,MAA7F,EAAqG;MAC1G,KAAKwE,GAAL;IACD,CAFM,MAEA;MACL,OAAO,KAAKF,UAAL,CAAgBD,KAAhB,EAAuBxD,KAAvB,CAAP;IACD;EACF,CAVK,MAUD;IACH,OAAO,KAAKyD,UAAL,CAAgBD,KAAhB,EAAuBxD,KAAvB,CAAP;EACD;AACF,CAnED;;AAqEAF,MAAM,CAAC7C,CAAP,GAAWA,CAAX;AAEA8G,MAAM,CAACC,OAAP,GAAiBlE,MAAjB"},"metadata":{},"sourceType":"script"}