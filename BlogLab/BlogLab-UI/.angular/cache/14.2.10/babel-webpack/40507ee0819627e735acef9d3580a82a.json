{"ast":null,"code":"'use strict';\n/**\n * `input` type prompt\n */\n\nconst chalk = require('chalk');\n\nconst {\n  map,\n  takeUntil\n} = require('rxjs/operators');\n\nconst Base = require('./base');\n\nconst observe = require('../utils/events');\n\nclass InputPrompt extends Base {\n  /**\n   * Start the Inquiry session\n   * @param  {Function} cb      Callback when prompt is done\n   * @return {this}\n   */\n  _run(cb) {\n    this.done = cb; // Once user confirm (enter key)\n\n    const events = observe(this.rl);\n    const submit = events.line.pipe(map(this.filterInput.bind(this)));\n    const validation = this.handleSubmitEvents(submit);\n    validation.success.forEach(this.onEnd.bind(this));\n    validation.error.forEach(this.onError.bind(this));\n    events.keypress.pipe(takeUntil(validation.success)).forEach(this.onKeypress.bind(this)); // Init\n\n    this.render();\n    return this;\n  }\n  /**\n   * Render the prompt to screen\n   * @return {InputPrompt} self\n   */\n\n\n  render(error) {\n    let bottomContent = '';\n    let appendContent = '';\n    let message = this.getQuestion();\n    const {\n      transformer\n    } = this.opt;\n    const isFinal = this.status === 'answered';\n\n    if (isFinal) {\n      appendContent = this.answer;\n    } else {\n      appendContent = this.rl.line;\n    }\n\n    if (transformer) {\n      message += transformer(appendContent, this.answers, {\n        isFinal\n      });\n    } else {\n      message += isFinal ? chalk.cyan(appendContent) : appendContent;\n    }\n\n    if (error) {\n      bottomContent = chalk.red('>> ') + error;\n    }\n\n    this.screen.render(message, bottomContent);\n  }\n  /**\n   * When user press `enter` key\n   */\n\n\n  filterInput(input) {\n    if (!input) {\n      return this.opt.default == null ? '' : this.opt.default;\n    }\n\n    return input;\n  }\n\n  onEnd(state) {\n    this.answer = state.value;\n    this.status = 'answered'; // Re-render prompt\n\n    this.render();\n    this.screen.done();\n    this.done(state.value);\n  }\n\n  onError({\n    value = '',\n    isValid\n  }) {\n    this.rl.line += value;\n    this.rl.cursor += value.length;\n    this.render(isValid);\n  }\n  /**\n   * When user press a key\n   */\n\n\n  onKeypress() {\n    this.state = 'touched';\n    this.render();\n  }\n\n}\n\nmodule.exports = InputPrompt;","map":{"version":3,"names":["chalk","require","map","takeUntil","Base","observe","InputPrompt","_run","cb","done","events","rl","submit","line","pipe","filterInput","bind","validation","handleSubmitEvents","success","forEach","onEnd","error","onError","keypress","onKeypress","render","bottomContent","appendContent","message","getQuestion","transformer","opt","isFinal","status","answer","answers","cyan","red","screen","input","default","state","value","isValid","cursor","length","module","exports"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/inquirer/lib/prompts/input.js"],"sourcesContent":["'use strict';\n/**\n * `input` type prompt\n */\n\nconst chalk = require('chalk');\nconst { map, takeUntil } = require('rxjs/operators');\nconst Base = require('./base');\nconst observe = require('../utils/events');\n\nclass InputPrompt extends Base {\n  /**\n   * Start the Inquiry session\n   * @param  {Function} cb      Callback when prompt is done\n   * @return {this}\n   */\n\n  _run(cb) {\n    this.done = cb;\n\n    // Once user confirm (enter key)\n    const events = observe(this.rl);\n    const submit = events.line.pipe(map(this.filterInput.bind(this)));\n\n    const validation = this.handleSubmitEvents(submit);\n    validation.success.forEach(this.onEnd.bind(this));\n    validation.error.forEach(this.onError.bind(this));\n\n    events.keypress\n      .pipe(takeUntil(validation.success))\n      .forEach(this.onKeypress.bind(this));\n\n    // Init\n    this.render();\n\n    return this;\n  }\n\n  /**\n   * Render the prompt to screen\n   * @return {InputPrompt} self\n   */\n\n  render(error) {\n    let bottomContent = '';\n    let appendContent = '';\n    let message = this.getQuestion();\n    const { transformer } = this.opt;\n    const isFinal = this.status === 'answered';\n\n    if (isFinal) {\n      appendContent = this.answer;\n    } else {\n      appendContent = this.rl.line;\n    }\n\n    if (transformer) {\n      message += transformer(appendContent, this.answers, { isFinal });\n    } else {\n      message += isFinal ? chalk.cyan(appendContent) : appendContent;\n    }\n\n    if (error) {\n      bottomContent = chalk.red('>> ') + error;\n    }\n\n    this.screen.render(message, bottomContent);\n  }\n\n  /**\n   * When user press `enter` key\n   */\n\n  filterInput(input) {\n    if (!input) {\n      return this.opt.default == null ? '' : this.opt.default;\n    }\n\n    return input;\n  }\n\n  onEnd(state) {\n    this.answer = state.value;\n    this.status = 'answered';\n\n    // Re-render prompt\n    this.render();\n\n    this.screen.done();\n    this.done(state.value);\n  }\n\n  onError({ value = '', isValid }) {\n    this.rl.line += value;\n    this.rl.cursor += value.length;\n    this.render(isValid);\n  }\n\n  /**\n   * When user press a key\n   */\n\n  onKeypress() {\n    this.state = 'touched';\n\n    this.render();\n  }\n}\n\nmodule.exports = InputPrompt;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}