{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateSocksClientChainOptions = exports.validateSocksClientOptions = void 0;\n\nconst util_1 = require(\"./util\");\n\nconst constants_1 = require(\"./constants\");\n\nconst stream = require(\"stream\");\n/**\n * Validates the provided SocksClientOptions\n * @param options { SocksClientOptions }\n * @param acceptedCommands { string[] } A list of accepted SocksProxy commands.\n */\n\n\nfunction validateSocksClientOptions(options, acceptedCommands = ['connect', 'bind', 'associate']) {\n  // Check SOCKs command option.\n  if (!constants_1.SocksCommand[options.command]) {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksCommand, options);\n  } // Check SocksCommand for acceptable command.\n\n\n  if (acceptedCommands.indexOf(options.command) === -1) {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksCommandForOperation, options);\n  } // Check destination\n\n\n  if (!isValidSocksRemoteHost(options.destination)) {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsDestination, options);\n  } // Check SOCKS proxy to use\n\n\n  if (!isValidSocksProxy(options.proxy)) {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsProxy, options);\n  } // Validate custom auth (if set)\n\n\n  validateCustomProxyAuth(options.proxy, options); // Check timeout\n\n  if (options.timeout && !isValidTimeoutValue(options.timeout)) {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsTimeout, options);\n  } // Check existing_socket (if provided)\n\n\n  if (options.existing_socket && !(options.existing_socket instanceof stream.Duplex)) {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsExistingSocket, options);\n  }\n}\n\nexports.validateSocksClientOptions = validateSocksClientOptions;\n/**\n * Validates the SocksClientChainOptions\n * @param options { SocksClientChainOptions }\n */\n\nfunction validateSocksClientChainOptions(options) {\n  // Only connect is supported when chaining.\n  if (options.command !== 'connect') {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksCommandChain, options);\n  } // Check destination\n\n\n  if (!isValidSocksRemoteHost(options.destination)) {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsDestination, options);\n  } // Validate proxies (length)\n\n\n  if (!(options.proxies && Array.isArray(options.proxies) && options.proxies.length >= 2)) {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsProxiesLength, options);\n  } // Validate proxies\n\n\n  options.proxies.forEach(proxy => {\n    if (!isValidSocksProxy(proxy)) {\n      throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsProxy, options);\n    } // Validate custom auth (if set)\n\n\n    validateCustomProxyAuth(proxy, options);\n  }); // Check timeout\n\n  if (options.timeout && !isValidTimeoutValue(options.timeout)) {\n    throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsTimeout, options);\n  }\n}\n\nexports.validateSocksClientChainOptions = validateSocksClientChainOptions;\n\nfunction validateCustomProxyAuth(proxy, options) {\n  if (proxy.custom_auth_method !== undefined) {\n    // Invalid auth method range\n    if (proxy.custom_auth_method < constants_1.SOCKS5_CUSTOM_AUTH_START || proxy.custom_auth_method > constants_1.SOCKS5_CUSTOM_AUTH_END) {\n      throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthRange, options);\n    } // Missing custom_auth_request_handler\n\n\n    if (proxy.custom_auth_request_handler === undefined || typeof proxy.custom_auth_request_handler !== 'function') {\n      throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthOptions, options);\n    } // Missing custom_auth_response_size\n\n\n    if (proxy.custom_auth_response_size === undefined) {\n      throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthOptions, options);\n    } // Missing/invalid custom_auth_response_handler\n\n\n    if (proxy.custom_auth_response_handler === undefined || typeof proxy.custom_auth_response_handler !== 'function') {\n      throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthOptions, options);\n    }\n  }\n}\n/**\n * Validates a SocksRemoteHost\n * @param remoteHost { SocksRemoteHost }\n */\n\n\nfunction isValidSocksRemoteHost(remoteHost) {\n  return remoteHost && typeof remoteHost.host === 'string' && typeof remoteHost.port === 'number' && remoteHost.port >= 0 && remoteHost.port <= 65535;\n}\n/**\n * Validates a SocksProxy\n * @param proxy { SocksProxy }\n */\n\n\nfunction isValidSocksProxy(proxy) {\n  return proxy && (typeof proxy.host === 'string' || typeof proxy.ipaddress === 'string') && typeof proxy.port === 'number' && proxy.port >= 0 && proxy.port <= 65535 && (proxy.type === 4 || proxy.type === 5);\n}\n/**\n * Validates a timeout value.\n * @param value { Number }\n */\n\n\nfunction isValidTimeoutValue(value) {\n  return typeof value === 'number' && value > 0;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","validateSocksClientChainOptions","validateSocksClientOptions","util_1","require","constants_1","stream","options","acceptedCommands","SocksCommand","command","SocksClientError","ERRORS","InvalidSocksCommand","indexOf","InvalidSocksCommandForOperation","isValidSocksRemoteHost","destination","InvalidSocksClientOptionsDestination","isValidSocksProxy","proxy","InvalidSocksClientOptionsProxy","validateCustomProxyAuth","timeout","isValidTimeoutValue","InvalidSocksClientOptionsTimeout","existing_socket","Duplex","InvalidSocksClientOptionsExistingSocket","InvalidSocksCommandChain","proxies","Array","isArray","length","InvalidSocksClientOptionsProxiesLength","forEach","custom_auth_method","undefined","SOCKS5_CUSTOM_AUTH_START","SOCKS5_CUSTOM_AUTH_END","InvalidSocksClientOptionsCustomAuthRange","custom_auth_request_handler","InvalidSocksClientOptionsCustomAuthOptions","custom_auth_response_size","custom_auth_response_handler","remoteHost","host","port","ipaddress","type"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/socks/build/common/helpers.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateSocksClientChainOptions = exports.validateSocksClientOptions = void 0;\nconst util_1 = require(\"./util\");\nconst constants_1 = require(\"./constants\");\nconst stream = require(\"stream\");\n/**\n * Validates the provided SocksClientOptions\n * @param options { SocksClientOptions }\n * @param acceptedCommands { string[] } A list of accepted SocksProxy commands.\n */\nfunction validateSocksClientOptions(options, acceptedCommands = ['connect', 'bind', 'associate']) {\n    // Check SOCKs command option.\n    if (!constants_1.SocksCommand[options.command]) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksCommand, options);\n    }\n    // Check SocksCommand for acceptable command.\n    if (acceptedCommands.indexOf(options.command) === -1) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksCommandForOperation, options);\n    }\n    // Check destination\n    if (!isValidSocksRemoteHost(options.destination)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsDestination, options);\n    }\n    // Check SOCKS proxy to use\n    if (!isValidSocksProxy(options.proxy)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsProxy, options);\n    }\n    // Validate custom auth (if set)\n    validateCustomProxyAuth(options.proxy, options);\n    // Check timeout\n    if (options.timeout && !isValidTimeoutValue(options.timeout)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsTimeout, options);\n    }\n    // Check existing_socket (if provided)\n    if (options.existing_socket &&\n        !(options.existing_socket instanceof stream.Duplex)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsExistingSocket, options);\n    }\n}\nexports.validateSocksClientOptions = validateSocksClientOptions;\n/**\n * Validates the SocksClientChainOptions\n * @param options { SocksClientChainOptions }\n */\nfunction validateSocksClientChainOptions(options) {\n    // Only connect is supported when chaining.\n    if (options.command !== 'connect') {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksCommandChain, options);\n    }\n    // Check destination\n    if (!isValidSocksRemoteHost(options.destination)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsDestination, options);\n    }\n    // Validate proxies (length)\n    if (!(options.proxies &&\n        Array.isArray(options.proxies) &&\n        options.proxies.length >= 2)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsProxiesLength, options);\n    }\n    // Validate proxies\n    options.proxies.forEach((proxy) => {\n        if (!isValidSocksProxy(proxy)) {\n            throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsProxy, options);\n        }\n        // Validate custom auth (if set)\n        validateCustomProxyAuth(proxy, options);\n    });\n    // Check timeout\n    if (options.timeout && !isValidTimeoutValue(options.timeout)) {\n        throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsTimeout, options);\n    }\n}\nexports.validateSocksClientChainOptions = validateSocksClientChainOptions;\nfunction validateCustomProxyAuth(proxy, options) {\n    if (proxy.custom_auth_method !== undefined) {\n        // Invalid auth method range\n        if (proxy.custom_auth_method < constants_1.SOCKS5_CUSTOM_AUTH_START ||\n            proxy.custom_auth_method > constants_1.SOCKS5_CUSTOM_AUTH_END) {\n            throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthRange, options);\n        }\n        // Missing custom_auth_request_handler\n        if (proxy.custom_auth_request_handler === undefined ||\n            typeof proxy.custom_auth_request_handler !== 'function') {\n            throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthOptions, options);\n        }\n        // Missing custom_auth_response_size\n        if (proxy.custom_auth_response_size === undefined) {\n            throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthOptions, options);\n        }\n        // Missing/invalid custom_auth_response_handler\n        if (proxy.custom_auth_response_handler === undefined ||\n            typeof proxy.custom_auth_response_handler !== 'function') {\n            throw new util_1.SocksClientError(constants_1.ERRORS.InvalidSocksClientOptionsCustomAuthOptions, options);\n        }\n    }\n}\n/**\n * Validates a SocksRemoteHost\n * @param remoteHost { SocksRemoteHost }\n */\nfunction isValidSocksRemoteHost(remoteHost) {\n    return (remoteHost &&\n        typeof remoteHost.host === 'string' &&\n        typeof remoteHost.port === 'number' &&\n        remoteHost.port >= 0 &&\n        remoteHost.port <= 65535);\n}\n/**\n * Validates a SocksProxy\n * @param proxy { SocksProxy }\n */\nfunction isValidSocksProxy(proxy) {\n    return (proxy &&\n        (typeof proxy.host === 'string' || typeof proxy.ipaddress === 'string') &&\n        typeof proxy.port === 'number' &&\n        proxy.port >= 0 &&\n        proxy.port <= 65535 &&\n        (proxy.type === 4 || proxy.type === 5));\n}\n/**\n * Validates a timeout value.\n * @param value { Number }\n */\nfunction isValidTimeoutValue(value) {\n    return typeof value === 'number' && value > 0;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}