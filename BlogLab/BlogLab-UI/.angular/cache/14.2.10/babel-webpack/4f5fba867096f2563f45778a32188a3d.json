{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkspaceNodeModulesArchitectHost = void 0;\n\nconst path = __importStar(require(\"path\"));\n\nconst url_1 = require(\"url\");\n\nconst v8_1 = require(\"v8\");\n\nconst internal_1 = require(\"../src/internal\");\n\nfunction clone(obj) {\n  try {\n    return (0, v8_1.deserialize)((0, v8_1.serialize)(obj));\n  } catch {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction findProjectTarget(workspace, project, target) {\n  const projectDefinition = workspace.projects.get(project);\n\n  if (!projectDefinition) {\n    throw new Error(`Project \"${project}\" does not exist.`);\n  }\n\n  const targetDefinition = projectDefinition.targets.get(target);\n\n  if (!targetDefinition) {\n    throw new Error('Project target does not exist.');\n  }\n\n  return targetDefinition;\n}\n\nclass WorkspaceNodeModulesArchitectHost {\n  constructor(workspaceOrHost, _root) {\n    this._root = _root;\n\n    if ('getBuilderName' in workspaceOrHost) {\n      this.workspaceHost = workspaceOrHost;\n    } else {\n      this.workspaceHost = {\n        getBuilderName(project, target) {\n          return _asyncToGenerator(function* () {\n            const targetDefinition = findProjectTarget(workspaceOrHost, project, target);\n            return targetDefinition.builder;\n          })();\n        },\n\n        getOptions(project, target, configuration) {\n          return _asyncToGenerator(function* () {\n            var _a, _b, _c, _d;\n\n            const targetDefinition = findProjectTarget(workspaceOrHost, project, target);\n\n            if (configuration === undefined) {\n              return (_a = targetDefinition.options) !== null && _a !== void 0 ? _a : {};\n            }\n\n            if (!((_b = targetDefinition.configurations) === null || _b === void 0 ? void 0 : _b[configuration])) {\n              throw new Error(`Configuration '${configuration}' is not set in the workspace.`);\n            }\n\n            return (_d = (_c = targetDefinition.configurations) === null || _c === void 0 ? void 0 : _c[configuration]) !== null && _d !== void 0 ? _d : {};\n          })();\n        },\n\n        getMetadata(project) {\n          return _asyncToGenerator(function* () {\n            const projectDefinition = workspaceOrHost.projects.get(project);\n\n            if (!projectDefinition) {\n              throw new Error(`Project \"${project}\" does not exist.`);\n            }\n\n            return {\n              root: projectDefinition.root,\n              sourceRoot: projectDefinition.sourceRoot,\n              prefix: projectDefinition.prefix,\n              ...clone(workspaceOrHost.extensions),\n              ...clone(projectDefinition.extensions)\n            };\n          })();\n        },\n\n        hasTarget(project, target) {\n          return _asyncToGenerator(function* () {\n            var _a;\n\n            return !!((_a = workspaceOrHost.projects.get(project)) === null || _a === void 0 ? void 0 : _a.targets.has(target));\n          })();\n        },\n\n        getDefaultConfigurationName(project, target) {\n          return _asyncToGenerator(function* () {\n            var _a, _b;\n\n            return (_b = (_a = workspaceOrHost.projects.get(project)) === null || _a === void 0 ? void 0 : _a.targets.get(target)) === null || _b === void 0 ? void 0 : _b.defaultConfiguration;\n          })();\n        }\n\n      };\n    }\n  }\n\n  getBuilderNameForTarget(target) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return _this.workspaceHost.getBuilderName(target.project, target.target);\n    })();\n  }\n  /**\n   * Resolve a builder. This needs to be a string which will be used in a dynamic `import()`\n   * clause. This should throw if no builder can be found. The dynamic import will throw if\n   * it is unsupported.\n   * @param builderStr The name of the builder to be used.\n   * @returns All the info needed for the builder itself.\n   */\n\n\n  resolveBuilder(builderStr) {\n    const [packageName, builderName] = builderStr.split(':', 2);\n\n    if (!builderName) {\n      throw new Error('No builder name specified.');\n    }\n\n    const packageJsonPath = require.resolve(packageName + '/package.json', {\n      paths: [this._root]\n    });\n\n    const packageJson = require(packageJsonPath);\n\n    if (!packageJson['builders']) {\n      throw new Error(`Package ${JSON.stringify(packageName)} has no builders defined.`);\n    }\n\n    const builderJsonPath = path.resolve(path.dirname(packageJsonPath), packageJson['builders']);\n\n    const builderJson = require(builderJsonPath);\n\n    const builder = builderJson.builders && builderJson.builders[builderName];\n\n    if (!builder) {\n      throw new Error(`Cannot find builder ${JSON.stringify(builderStr)}.`);\n    }\n\n    const importPath = builder.implementation;\n\n    if (!importPath) {\n      throw new Error('Could not find the implementation for builder ' + builderStr);\n    }\n\n    return Promise.resolve({\n      name: builderStr,\n      builderName,\n      description: builder['description'],\n      optionSchema: require(path.resolve(path.dirname(builderJsonPath), builder.schema)),\n      import: path.resolve(path.dirname(builderJsonPath), importPath)\n    });\n  }\n\n  getCurrentDirectory() {\n    return _asyncToGenerator(function* () {\n      return process.cwd();\n    })();\n  }\n\n  getWorkspaceRoot() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this2._root;\n    })();\n  }\n\n  getOptionsForTarget(target) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!(yield _this3.workspaceHost.hasTarget(target.project, target.target))) {\n        return null;\n      }\n\n      let options = yield _this3.workspaceHost.getOptions(target.project, target.target);\n      const targetConfiguration = target.configuration || (yield _this3.workspaceHost.getDefaultConfigurationName(target.project, target.target));\n\n      if (targetConfiguration) {\n        const configurations = targetConfiguration.split(',').map(c => c.trim());\n\n        for (const configuration of configurations) {\n          options = { ...options,\n            ...(yield _this3.workspaceHost.getOptions(target.project, target.target, configuration))\n          };\n        }\n      }\n\n      return clone(options);\n    })();\n  }\n\n  getProjectMetadata(target) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const projectName = typeof target === 'string' ? target : target.project;\n\n      const metadata = _this4.workspaceHost.getMetadata(projectName);\n\n      return metadata;\n    })();\n  }\n\n  loadBuilder(info) {\n    return _asyncToGenerator(function* () {\n      const builder = yield getBuilder(info.import);\n\n      if (builder[internal_1.BuilderSymbol]) {\n        return builder;\n      } // Default handling code is for old builders that incorrectly export `default` with non-ESM module\n\n\n      if (builder === null || builder === void 0 ? void 0 : builder.default[internal_1.BuilderSymbol]) {\n        return builder.default;\n      }\n\n      throw new Error('Builder is not a builder');\n    })();\n  }\n\n}\n\nexports.WorkspaceNodeModulesArchitectHost = WorkspaceNodeModulesArchitectHost;\n/**\n * This uses a dynamic import to load a module which may be ESM.\n * CommonJS code can load ESM code via a dynamic import. Unfortunately, TypeScript\n * will currently, unconditionally downlevel dynamic import into a require call.\n * require calls cannot load ESM code and will result in a runtime error. To workaround\n * this, a Function constructor is used to prevent TypeScript from changing the dynamic import.\n * Once TypeScript provides support for keeping the dynamic import this workaround can\n * be dropped.\n *\n * @param modulePath The path of the module to load.\n * @returns A Promise that resolves to the dynamically imported module.\n */\n\nfunction loadEsmModule(modulePath) {\n  return new Function('modulePath', `return import(modulePath);`)(modulePath);\n} // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\nfunction getBuilder(_x) {\n  return _getBuilder.apply(this, arguments);\n}\n\nfunction _getBuilder() {\n  _getBuilder = _asyncToGenerator(function* (builderPath) {\n    switch (path.extname(builderPath)) {\n      case '.mjs':\n        // Load the ESM configuration file using the TypeScript dynamic import workaround.\n        // Once TypeScript provides support for keeping the dynamic import this workaround can be\n        // changed to a direct dynamic import.\n        return (yield loadEsmModule((0, url_1.pathToFileURL)(builderPath))).default;\n\n      case '.cjs':\n        return require(builderPath);\n\n      default:\n        // The file could be either CommonJS or ESM.\n        // CommonJS is tried first then ESM if loading fails.\n        try {\n          return require(builderPath);\n        } catch (e) {\n          if (e.code === 'ERR_REQUIRE_ESM') {\n            // Load the ESM configuration file using the TypeScript dynamic import workaround.\n            // Once TypeScript provides support for keeping the dynamic import this workaround can be\n            // changed to a direct dynamic import.\n            return (yield loadEsmModule((0, url_1.pathToFileURL)(builderPath))).default;\n          }\n\n          throw e;\n        }\n\n    }\n  });\n  return _getBuilder.apply(this, arguments);\n}","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","WorkspaceNodeModulesArchitectHost","path","require","url_1","v8_1","internal_1","clone","obj","deserialize","serialize","JSON","parse","stringify","findProjectTarget","workspace","project","target","projectDefinition","projects","Error","targetDefinition","targets","constructor","workspaceOrHost","_root","workspaceHost","getBuilderName","builder","getOptions","configuration","_a","_b","_c","_d","options","configurations","getMetadata","root","sourceRoot","prefix","extensions","hasTarget","has","getDefaultConfigurationName","defaultConfiguration","getBuilderNameForTarget","resolveBuilder","builderStr","packageName","builderName","split","packageJsonPath","resolve","paths","packageJson","builderJsonPath","dirname","builderJson","builders","importPath","implementation","Promise","name","description","optionSchema","schema","import","getCurrentDirectory","process","cwd","getWorkspaceRoot","getOptionsForTarget","targetConfiguration","map","c","trim","getProjectMetadata","projectName","metadata","loadBuilder","info","getBuilder","BuilderSymbol","default","loadEsmModule","modulePath","Function","builderPath","extname","pathToFileURL","e","code"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/architect/node/node-modules-architect-host.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WorkspaceNodeModulesArchitectHost = void 0;\nconst path = __importStar(require(\"path\"));\nconst url_1 = require(\"url\");\nconst v8_1 = require(\"v8\");\nconst internal_1 = require(\"../src/internal\");\nfunction clone(obj) {\n    try {\n        return (0, v8_1.deserialize)((0, v8_1.serialize)(obj));\n    }\n    catch {\n        return JSON.parse(JSON.stringify(obj));\n    }\n}\nfunction findProjectTarget(workspace, project, target) {\n    const projectDefinition = workspace.projects.get(project);\n    if (!projectDefinition) {\n        throw new Error(`Project \"${project}\" does not exist.`);\n    }\n    const targetDefinition = projectDefinition.targets.get(target);\n    if (!targetDefinition) {\n        throw new Error('Project target does not exist.');\n    }\n    return targetDefinition;\n}\nclass WorkspaceNodeModulesArchitectHost {\n    constructor(workspaceOrHost, _root) {\n        this._root = _root;\n        if ('getBuilderName' in workspaceOrHost) {\n            this.workspaceHost = workspaceOrHost;\n        }\n        else {\n            this.workspaceHost = {\n                async getBuilderName(project, target) {\n                    const targetDefinition = findProjectTarget(workspaceOrHost, project, target);\n                    return targetDefinition.builder;\n                },\n                async getOptions(project, target, configuration) {\n                    var _a, _b, _c, _d;\n                    const targetDefinition = findProjectTarget(workspaceOrHost, project, target);\n                    if (configuration === undefined) {\n                        return ((_a = targetDefinition.options) !== null && _a !== void 0 ? _a : {});\n                    }\n                    if (!((_b = targetDefinition.configurations) === null || _b === void 0 ? void 0 : _b[configuration])) {\n                        throw new Error(`Configuration '${configuration}' is not set in the workspace.`);\n                    }\n                    return ((_d = (_c = targetDefinition.configurations) === null || _c === void 0 ? void 0 : _c[configuration]) !== null && _d !== void 0 ? _d : {});\n                },\n                async getMetadata(project) {\n                    const projectDefinition = workspaceOrHost.projects.get(project);\n                    if (!projectDefinition) {\n                        throw new Error(`Project \"${project}\" does not exist.`);\n                    }\n                    return {\n                        root: projectDefinition.root,\n                        sourceRoot: projectDefinition.sourceRoot,\n                        prefix: projectDefinition.prefix,\n                        ...clone(workspaceOrHost.extensions),\n                        ...clone(projectDefinition.extensions),\n                    };\n                },\n                async hasTarget(project, target) {\n                    var _a;\n                    return !!((_a = workspaceOrHost.projects.get(project)) === null || _a === void 0 ? void 0 : _a.targets.has(target));\n                },\n                async getDefaultConfigurationName(project, target) {\n                    var _a, _b;\n                    return (_b = (_a = workspaceOrHost.projects.get(project)) === null || _a === void 0 ? void 0 : _a.targets.get(target)) === null || _b === void 0 ? void 0 : _b.defaultConfiguration;\n                },\n            };\n        }\n    }\n    async getBuilderNameForTarget(target) {\n        return this.workspaceHost.getBuilderName(target.project, target.target);\n    }\n    /**\n     * Resolve a builder. This needs to be a string which will be used in a dynamic `import()`\n     * clause. This should throw if no builder can be found. The dynamic import will throw if\n     * it is unsupported.\n     * @param builderStr The name of the builder to be used.\n     * @returns All the info needed for the builder itself.\n     */\n    resolveBuilder(builderStr) {\n        const [packageName, builderName] = builderStr.split(':', 2);\n        if (!builderName) {\n            throw new Error('No builder name specified.');\n        }\n        const packageJsonPath = require.resolve(packageName + '/package.json', {\n            paths: [this._root],\n        });\n        const packageJson = require(packageJsonPath);\n        if (!packageJson['builders']) {\n            throw new Error(`Package ${JSON.stringify(packageName)} has no builders defined.`);\n        }\n        const builderJsonPath = path.resolve(path.dirname(packageJsonPath), packageJson['builders']);\n        const builderJson = require(builderJsonPath);\n        const builder = builderJson.builders && builderJson.builders[builderName];\n        if (!builder) {\n            throw new Error(`Cannot find builder ${JSON.stringify(builderStr)}.`);\n        }\n        const importPath = builder.implementation;\n        if (!importPath) {\n            throw new Error('Could not find the implementation for builder ' + builderStr);\n        }\n        return Promise.resolve({\n            name: builderStr,\n            builderName,\n            description: builder['description'],\n            optionSchema: require(path.resolve(path.dirname(builderJsonPath), builder.schema)),\n            import: path.resolve(path.dirname(builderJsonPath), importPath),\n        });\n    }\n    async getCurrentDirectory() {\n        return process.cwd();\n    }\n    async getWorkspaceRoot() {\n        return this._root;\n    }\n    async getOptionsForTarget(target) {\n        if (!(await this.workspaceHost.hasTarget(target.project, target.target))) {\n            return null;\n        }\n        let options = await this.workspaceHost.getOptions(target.project, target.target);\n        const targetConfiguration = target.configuration ||\n            (await this.workspaceHost.getDefaultConfigurationName(target.project, target.target));\n        if (targetConfiguration) {\n            const configurations = targetConfiguration.split(',').map((c) => c.trim());\n            for (const configuration of configurations) {\n                options = {\n                    ...options,\n                    ...(await this.workspaceHost.getOptions(target.project, target.target, configuration)),\n                };\n            }\n        }\n        return clone(options);\n    }\n    async getProjectMetadata(target) {\n        const projectName = typeof target === 'string' ? target : target.project;\n        const metadata = this.workspaceHost.getMetadata(projectName);\n        return metadata;\n    }\n    async loadBuilder(info) {\n        const builder = await getBuilder(info.import);\n        if (builder[internal_1.BuilderSymbol]) {\n            return builder;\n        }\n        // Default handling code is for old builders that incorrectly export `default` with non-ESM module\n        if (builder === null || builder === void 0 ? void 0 : builder.default[internal_1.BuilderSymbol]) {\n            return builder.default;\n        }\n        throw new Error('Builder is not a builder');\n    }\n}\nexports.WorkspaceNodeModulesArchitectHost = WorkspaceNodeModulesArchitectHost;\n/**\n * This uses a dynamic import to load a module which may be ESM.\n * CommonJS code can load ESM code via a dynamic import. Unfortunately, TypeScript\n * will currently, unconditionally downlevel dynamic import into a require call.\n * require calls cannot load ESM code and will result in a runtime error. To workaround\n * this, a Function constructor is used to prevent TypeScript from changing the dynamic import.\n * Once TypeScript provides support for keeping the dynamic import this workaround can\n * be dropped.\n *\n * @param modulePath The path of the module to load.\n * @returns A Promise that resolves to the dynamically imported module.\n */\nfunction loadEsmModule(modulePath) {\n    return new Function('modulePath', `return import(modulePath);`)(modulePath);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function getBuilder(builderPath) {\n    switch (path.extname(builderPath)) {\n        case '.mjs':\n            // Load the ESM configuration file using the TypeScript dynamic import workaround.\n            // Once TypeScript provides support for keeping the dynamic import this workaround can be\n            // changed to a direct dynamic import.\n            return (await loadEsmModule((0, url_1.pathToFileURL)(builderPath))).default;\n        case '.cjs':\n            return require(builderPath);\n        default:\n            // The file could be either CommonJS or ESM.\n            // CommonJS is tried first then ESM if loading fails.\n            try {\n                return require(builderPath);\n            }\n            catch (e) {\n                if (e.code === 'ERR_REQUIRE_ESM') {\n                    // Load the ESM configuration file using the TypeScript dynamic import workaround.\n                    // Once TypeScript provides support for keeping the dynamic import this workaround can be\n                    // changed to a direct dynamic import.\n                    return (await loadEsmModule((0, url_1.pathToFileURL)(builderPath))).default;\n                }\n                throw e;\n            }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}