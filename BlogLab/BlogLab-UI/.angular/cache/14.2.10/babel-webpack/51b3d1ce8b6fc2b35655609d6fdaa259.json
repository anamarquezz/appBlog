{"ast":null,"code":"// run an npm command\nconst spawn = require('@npmcli/promise-spawn');\n\nmodule.exports = (npmBin, npmCommand, cwd, env, extra) => {\n  const isJS = npmBin.endsWith('.js');\n  const cmd = isJS ? process.execPath : npmBin;\n  const args = (isJS ? [npmBin] : []).concat(npmCommand); // when installing to run the `prepare` script for a git dep, we need\n  // to ensure that we don't run into a cycle of checking out packages\n  // in temp directories.  this lets us link previously-seen repos that\n  // are also being prepared.\n\n  return spawn(cmd, args, {\n    cwd,\n    stdioString: true,\n    env\n  }, extra);\n};","map":{"version":3,"names":["spawn","require","module","exports","npmBin","npmCommand","cwd","env","extra","isJS","endsWith","cmd","process","execPath","args","concat","stdioString"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/pacote/lib/util/npm.js"],"sourcesContent":["// run an npm command\nconst spawn = require('@npmcli/promise-spawn')\n\nmodule.exports = (npmBin, npmCommand, cwd, env, extra) => {\n  const isJS = npmBin.endsWith('.js')\n  const cmd = isJS ? process.execPath : npmBin\n  const args = (isJS ? [npmBin] : []).concat(npmCommand)\n  // when installing to run the `prepare` script for a git dep, we need\n  // to ensure that we don't run into a cycle of checking out packages\n  // in temp directories.  this lets us link previously-seen repos that\n  // are also being prepared.\n\n  return spawn(cmd, args, { cwd, stdioString: true, env }, extra)\n}\n"],"mappings":"AAAA;AACA,MAAMA,KAAK,GAAGC,OAAO,CAAC,uBAAD,CAArB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,CAACC,MAAD,EAASC,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,KAA/B,KAAyC;EACxD,MAAMC,IAAI,GAAGL,MAAM,CAACM,QAAP,CAAgB,KAAhB,CAAb;EACA,MAAMC,GAAG,GAAGF,IAAI,GAAGG,OAAO,CAACC,QAAX,GAAsBT,MAAtC;EACA,MAAMU,IAAI,GAAG,CAACL,IAAI,GAAG,CAACL,MAAD,CAAH,GAAc,EAAnB,EAAuBW,MAAvB,CAA8BV,UAA9B,CAAb,CAHwD,CAIxD;EACA;EACA;EACA;;EAEA,OAAOL,KAAK,CAACW,GAAD,EAAMG,IAAN,EAAY;IAAER,GAAF;IAAOU,WAAW,EAAE,IAApB;IAA0BT;EAA1B,CAAZ,EAA6CC,KAA7C,CAAZ;AACD,CAVD"},"metadata":{},"sourceType":"script"}