{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArchitectBaseCommandModule = void 0;\n\nconst architect_1 = require(\"@angular-devkit/architect\");\n\nconst node_1 = require(\"@angular-devkit/architect/node\");\n\nconst core_1 = require(\"@angular-devkit/core\");\n\nconst child_process_1 = require(\"child_process\");\n\nconst fs_1 = require(\"fs\");\n\nconst path_1 = require(\"path\");\n\nconst analytics_1 = require(\"../analytics/analytics\");\n\nconst error_1 = require(\"../utilities/error\");\n\nconst prompt_1 = require(\"../utilities/prompt\");\n\nconst tty_1 = require(\"../utilities/tty\");\n\nconst command_module_1 = require(\"./command-module\");\n\nconst json_schema_1 = require(\"./utilities/json-schema\");\n\nclass ArchitectBaseCommandModule extends command_module_1.CommandModule {\n  constructor() {\n    super(...arguments);\n    this.scope = command_module_1.CommandScope.In;\n    this.shouldReportAnalytics = false;\n  }\n\n  runSingleTarget(target, options) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const architectHost = yield _this.getArchitectHost();\n      let builderName;\n\n      try {\n        builderName = yield architectHost.getBuilderNameForTarget(target);\n      } catch (e) {\n        (0, error_1.assertIsError)(e);\n        return _this.onMissingTarget(e.message);\n      }\n\n      yield _this.reportAnalytics({ ...(yield architectHost.getOptionsForTarget(target)),\n        ...options\n      }, undefined\n      /** paths */\n      , undefined\n      /** dimensions */\n      , builderName);\n      const {\n        logger\n      } = _this.context;\n      const run = yield _this.getArchitect().scheduleTarget(target, options, {\n        logger,\n        analytics: (0, analytics_1.isPackageNameSafeForAnalytics)(builderName) ? yield _this.getAnalytics() : undefined\n      });\n      const {\n        error,\n        success\n      } = yield run.output.toPromise();\n      yield run.stop();\n\n      if (error) {\n        logger.error(error);\n      }\n\n      return success ? 0 : 1;\n    })();\n  }\n\n  getArchitectHost() {\n    if (this._architectHost) {\n      return this._architectHost;\n    }\n\n    const workspace = this.getWorkspaceOrThrow();\n    return this._architectHost = new node_1.WorkspaceNodeModulesArchitectHost(workspace, workspace.basePath);\n  }\n\n  getArchitect() {\n    if (this._architect) {\n      return this._architect;\n    }\n\n    const registry = new core_1.json.schema.CoreSchemaRegistry();\n    registry.addPostTransform(core_1.json.schema.transforms.addUndefinedDefaults);\n    registry.useXDeprecatedProvider(msg => this.context.logger.warn(msg));\n    const architectHost = this.getArchitectHost();\n    return this._architect = new architect_1.Architect(architectHost, registry);\n  }\n\n  getArchitectTargetOptions(target) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const architectHost = _this2.getArchitectHost();\n\n      let builderConf;\n\n      try {\n        builderConf = yield architectHost.getBuilderNameForTarget(target);\n      } catch {\n        return [];\n      }\n\n      let builderDesc;\n\n      try {\n        builderDesc = yield architectHost.resolveBuilder(builderConf);\n      } catch (e) {\n        (0, error_1.assertIsError)(e);\n\n        if (e.code === 'MODULE_NOT_FOUND') {\n          _this2.warnOnMissingNodeModules();\n\n          throw new command_module_1.CommandModuleError(`Could not find the '${builderConf}' builder's node package.`);\n        }\n\n        throw e;\n      }\n\n      return (0, json_schema_1.parseJsonSchemaToOptions)(new core_1.json.schema.CoreSchemaRegistry(), builderDesc.optionSchema, true);\n    })();\n  }\n\n  warnOnMissingNodeModules() {\n    var _a;\n\n    const basePath = (_a = this.context.workspace) === null || _a === void 0 ? void 0 : _a.basePath;\n\n    if (!basePath) {\n      return;\n    } // Check for a `node_modules` directory (npm, yarn non-PnP, etc.)\n\n\n    if ((0, fs_1.existsSync)((0, path_1.resolve)(basePath, 'node_modules'))) {\n      return;\n    } // Check for yarn PnP files\n\n\n    if ((0, fs_1.existsSync)((0, path_1.resolve)(basePath, '.pnp.js')) || (0, fs_1.existsSync)((0, path_1.resolve)(basePath, '.pnp.cjs')) || (0, fs_1.existsSync)((0, path_1.resolve)(basePath, '.pnp.mjs'))) {\n      return;\n    }\n\n    this.context.logger.warn(`Node packages may not be installed. Try installing with '${this.context.packageManager.name} install'.`);\n  }\n\n  getArchitectTarget() {\n    return this.commandName;\n  }\n\n  onMissingTarget(defaultMessage) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        logger\n      } = _this3.context;\n      const choices = _this3.missingTargetChoices;\n\n      if (!(choices === null || choices === void 0 ? void 0 : choices.length)) {\n        logger.error(defaultMessage);\n        return 1;\n      }\n\n      const missingTargetMessage = `Cannot find \"${_this3.getArchitectTarget()}\" target for the specified project.\\n` + `You can add a package that implements these capabilities.\\n\\n` + `For example:\\n` + choices.map(({\n        name,\n        value\n      }) => `  ${name}: ng add ${value}`).join('\\n') + '\\n';\n\n      if ((0, tty_1.isTTY)()) {\n        // Use prompts to ask the user if they'd like to install a package.\n        logger.warn(missingTargetMessage);\n        const packageToInstall = yield _this3.getMissingTargetPackageToInstall(choices);\n\n        if (packageToInstall) {\n          // Example run: `ng add @angular-eslint/schematics`.\n          const binPath = (0, path_1.resolve)(__dirname, '../../bin/ng.js');\n          const {\n            error\n          } = (0, child_process_1.spawnSync)(process.execPath, [binPath, 'add', packageToInstall], {\n            stdio: 'inherit'\n          });\n\n          if (error) {\n            throw error;\n          }\n        }\n      } else {\n        // Non TTY display error message.\n        logger.error(missingTargetMessage);\n      }\n\n      return 1;\n    })();\n  }\n\n  getMissingTargetPackageToInstall(choices) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (choices.length === 1) {\n        // Single choice\n        const {\n          name,\n          value\n        } = choices[0];\n\n        if (yield (0, prompt_1.askConfirmation)(`Would you like to add ${name} now?`, true, false)) {\n          return value;\n        }\n\n        return null;\n      } // Multiple choice\n\n\n      return (0, prompt_1.askQuestion)(`Would you like to add a package with \"${_this4.getArchitectTarget()}\" capabilities now?`, [{\n        name: 'No',\n        value: null\n      }, ...choices], 0, null);\n    })();\n  }\n\n}\n\nexports.ArchitectBaseCommandModule = ArchitectBaseCommandModule;","map":{"version":3,"names":["Object","defineProperty","exports","value","ArchitectBaseCommandModule","architect_1","require","node_1","core_1","child_process_1","fs_1","path_1","analytics_1","error_1","prompt_1","tty_1","command_module_1","json_schema_1","CommandModule","constructor","arguments","scope","CommandScope","In","shouldReportAnalytics","runSingleTarget","target","options","architectHost","getArchitectHost","builderName","getBuilderNameForTarget","e","assertIsError","onMissingTarget","message","reportAnalytics","getOptionsForTarget","undefined","logger","context","run","getArchitect","scheduleTarget","analytics","isPackageNameSafeForAnalytics","getAnalytics","error","success","output","toPromise","stop","_architectHost","workspace","getWorkspaceOrThrow","WorkspaceNodeModulesArchitectHost","basePath","_architect","registry","json","schema","CoreSchemaRegistry","addPostTransform","transforms","addUndefinedDefaults","useXDeprecatedProvider","msg","warn","Architect","getArchitectTargetOptions","builderConf","builderDesc","resolveBuilder","code","warnOnMissingNodeModules","CommandModuleError","parseJsonSchemaToOptions","optionSchema","_a","existsSync","resolve","packageManager","name","getArchitectTarget","commandName","defaultMessage","choices","missingTargetChoices","length","missingTargetMessage","map","join","isTTY","packageToInstall","getMissingTargetPackageToInstall","binPath","__dirname","spawnSync","process","execPath","stdio","askConfirmation","askQuestion"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular/cli/src/command-builder/architect-base-command-module.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ArchitectBaseCommandModule = void 0;\nconst architect_1 = require(\"@angular-devkit/architect\");\nconst node_1 = require(\"@angular-devkit/architect/node\");\nconst core_1 = require(\"@angular-devkit/core\");\nconst child_process_1 = require(\"child_process\");\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\nconst analytics_1 = require(\"../analytics/analytics\");\nconst error_1 = require(\"../utilities/error\");\nconst prompt_1 = require(\"../utilities/prompt\");\nconst tty_1 = require(\"../utilities/tty\");\nconst command_module_1 = require(\"./command-module\");\nconst json_schema_1 = require(\"./utilities/json-schema\");\nclass ArchitectBaseCommandModule extends command_module_1.CommandModule {\n    constructor() {\n        super(...arguments);\n        this.scope = command_module_1.CommandScope.In;\n        this.shouldReportAnalytics = false;\n    }\n    async runSingleTarget(target, options) {\n        const architectHost = await this.getArchitectHost();\n        let builderName;\n        try {\n            builderName = await architectHost.getBuilderNameForTarget(target);\n        }\n        catch (e) {\n            (0, error_1.assertIsError)(e);\n            return this.onMissingTarget(e.message);\n        }\n        await this.reportAnalytics({\n            ...(await architectHost.getOptionsForTarget(target)),\n            ...options,\n        }, undefined /** paths */, undefined /** dimensions */, builderName);\n        const { logger } = this.context;\n        const run = await this.getArchitect().scheduleTarget(target, options, {\n            logger,\n            analytics: (0, analytics_1.isPackageNameSafeForAnalytics)(builderName) ? await this.getAnalytics() : undefined,\n        });\n        const { error, success } = await run.output.toPromise();\n        await run.stop();\n        if (error) {\n            logger.error(error);\n        }\n        return success ? 0 : 1;\n    }\n    getArchitectHost() {\n        if (this._architectHost) {\n            return this._architectHost;\n        }\n        const workspace = this.getWorkspaceOrThrow();\n        return (this._architectHost = new node_1.WorkspaceNodeModulesArchitectHost(workspace, workspace.basePath));\n    }\n    getArchitect() {\n        if (this._architect) {\n            return this._architect;\n        }\n        const registry = new core_1.json.schema.CoreSchemaRegistry();\n        registry.addPostTransform(core_1.json.schema.transforms.addUndefinedDefaults);\n        registry.useXDeprecatedProvider((msg) => this.context.logger.warn(msg));\n        const architectHost = this.getArchitectHost();\n        return (this._architect = new architect_1.Architect(architectHost, registry));\n    }\n    async getArchitectTargetOptions(target) {\n        const architectHost = this.getArchitectHost();\n        let builderConf;\n        try {\n            builderConf = await architectHost.getBuilderNameForTarget(target);\n        }\n        catch {\n            return [];\n        }\n        let builderDesc;\n        try {\n            builderDesc = await architectHost.resolveBuilder(builderConf);\n        }\n        catch (e) {\n            (0, error_1.assertIsError)(e);\n            if (e.code === 'MODULE_NOT_FOUND') {\n                this.warnOnMissingNodeModules();\n                throw new command_module_1.CommandModuleError(`Could not find the '${builderConf}' builder's node package.`);\n            }\n            throw e;\n        }\n        return (0, json_schema_1.parseJsonSchemaToOptions)(new core_1.json.schema.CoreSchemaRegistry(), builderDesc.optionSchema, true);\n    }\n    warnOnMissingNodeModules() {\n        var _a;\n        const basePath = (_a = this.context.workspace) === null || _a === void 0 ? void 0 : _a.basePath;\n        if (!basePath) {\n            return;\n        }\n        // Check for a `node_modules` directory (npm, yarn non-PnP, etc.)\n        if ((0, fs_1.existsSync)((0, path_1.resolve)(basePath, 'node_modules'))) {\n            return;\n        }\n        // Check for yarn PnP files\n        if ((0, fs_1.existsSync)((0, path_1.resolve)(basePath, '.pnp.js')) ||\n            (0, fs_1.existsSync)((0, path_1.resolve)(basePath, '.pnp.cjs')) ||\n            (0, fs_1.existsSync)((0, path_1.resolve)(basePath, '.pnp.mjs'))) {\n            return;\n        }\n        this.context.logger.warn(`Node packages may not be installed. Try installing with '${this.context.packageManager.name} install'.`);\n    }\n    getArchitectTarget() {\n        return this.commandName;\n    }\n    async onMissingTarget(defaultMessage) {\n        const { logger } = this.context;\n        const choices = this.missingTargetChoices;\n        if (!(choices === null || choices === void 0 ? void 0 : choices.length)) {\n            logger.error(defaultMessage);\n            return 1;\n        }\n        const missingTargetMessage = `Cannot find \"${this.getArchitectTarget()}\" target for the specified project.\\n` +\n            `You can add a package that implements these capabilities.\\n\\n` +\n            `For example:\\n` +\n            choices.map(({ name, value }) => `  ${name}: ng add ${value}`).join('\\n') +\n            '\\n';\n        if ((0, tty_1.isTTY)()) {\n            // Use prompts to ask the user if they'd like to install a package.\n            logger.warn(missingTargetMessage);\n            const packageToInstall = await this.getMissingTargetPackageToInstall(choices);\n            if (packageToInstall) {\n                // Example run: `ng add @angular-eslint/schematics`.\n                const binPath = (0, path_1.resolve)(__dirname, '../../bin/ng.js');\n                const { error } = (0, child_process_1.spawnSync)(process.execPath, [binPath, 'add', packageToInstall], {\n                    stdio: 'inherit',\n                });\n                if (error) {\n                    throw error;\n                }\n            }\n        }\n        else {\n            // Non TTY display error message.\n            logger.error(missingTargetMessage);\n        }\n        return 1;\n    }\n    async getMissingTargetPackageToInstall(choices) {\n        if (choices.length === 1) {\n            // Single choice\n            const { name, value } = choices[0];\n            if (await (0, prompt_1.askConfirmation)(`Would you like to add ${name} now?`, true, false)) {\n                return value;\n            }\n            return null;\n        }\n        // Multiple choice\n        return (0, prompt_1.askQuestion)(`Would you like to add a package with \"${this.getArchitectTarget()}\" capabilities now?`, [\n            {\n                name: 'No',\n                value: null,\n            },\n            ...choices,\n        ], 0, null);\n    }\n}\nexports.ArchitectBaseCommandModule = ArchitectBaseCommandModule;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}