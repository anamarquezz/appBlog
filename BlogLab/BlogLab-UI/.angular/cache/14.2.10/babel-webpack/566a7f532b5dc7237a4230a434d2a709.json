{"ast":null,"code":"var _asyncToGenerator = require(\"C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nconst fs = require('./fs.js');\n\nconst getOptions = require('./common/get-options.js');\n\nconst withOwner = require('./with-owner.js'); // extends mkdir with the ability to specify an owner of the new dir\n\n\nconst mkdir = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (path, opts) {\n    const options = getOptions(opts, {\n      copy: ['mode', 'recursive'],\n      wrap: 'mode'\n    });\n    return withOwner(path, () => fs.mkdir(path, options), opts);\n  });\n\n  return function mkdir(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = mkdir;","map":{"version":3,"names":["fs","require","getOptions","withOwner","mkdir","path","opts","options","copy","wrap","module","exports"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@npmcli/fs/lib/mkdir.js"],"sourcesContent":["const fs = require('./fs.js')\nconst getOptions = require('./common/get-options.js')\nconst withOwner = require('./with-owner.js')\n\n// extends mkdir with the ability to specify an owner of the new dir\nconst mkdir = async (path, opts) => {\n  const options = getOptions(opts, {\n    copy: ['mode', 'recursive'],\n    wrap: 'mode',\n  })\n\n  return withOwner(\n    path,\n    () => fs.mkdir(path, options),\n    opts\n  )\n}\n\nmodule.exports = mkdir\n"],"mappings":";;AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,SAAD,CAAlB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,yBAAD,CAA1B;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,iBAAD,CAAzB,C,CAEA;;;AACA,MAAMG,KAAK;EAAA,6BAAG,WAAOC,IAAP,EAAaC,IAAb,EAAsB;IAClC,MAAMC,OAAO,GAAGL,UAAU,CAACI,IAAD,EAAO;MAC/BE,IAAI,EAAE,CAAC,MAAD,EAAS,WAAT,CADyB;MAE/BC,IAAI,EAAE;IAFyB,CAAP,CAA1B;IAKA,OAAON,SAAS,CACdE,IADc,EAEd,MAAML,EAAE,CAACI,KAAH,CAASC,IAAT,EAAeE,OAAf,CAFQ,EAGdD,IAHc,CAAhB;EAKD,CAXU;;EAAA,gBAALF,KAAK;IAAA;EAAA;AAAA,GAAX;;AAaAM,MAAM,CAACC,OAAP,GAAiBP,KAAjB"},"metadata":{},"sourceType":"script"}