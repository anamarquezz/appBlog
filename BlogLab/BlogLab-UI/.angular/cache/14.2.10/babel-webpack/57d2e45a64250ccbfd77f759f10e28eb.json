{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deepCopy = void 0;\nconst copySymbol = Symbol();\n\nfunction deepCopy(value) {\n  if (Array.isArray(value)) {\n    return value.map(o => deepCopy(o));\n  } else if (value && typeof value === 'object') {\n    const valueCasted = value;\n\n    if (valueCasted[copySymbol]) {\n      // This is a circular dependency. Just return the cloned value.\n      return valueCasted[copySymbol];\n    }\n\n    if (valueCasted['toJSON']) {\n      return JSON.parse(valueCasted['toJSON']());\n    }\n\n    const copy = Object.create(Object.getPrototypeOf(valueCasted));\n    valueCasted[copySymbol] = copy;\n\n    for (const key of Object.getOwnPropertyNames(valueCasted)) {\n      copy[key] = deepCopy(valueCasted[key]);\n    }\n\n    delete valueCasted[copySymbol];\n    return copy;\n  } else {\n    return value;\n  }\n}\n\nexports.deepCopy = deepCopy;","map":{"version":3,"names":["Object","defineProperty","exports","value","deepCopy","copySymbol","Symbol","Array","isArray","map","o","valueCasted","JSON","parse","copy","create","getPrototypeOf","key","getOwnPropertyNames"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/core/src/utils/object.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deepCopy = void 0;\nconst copySymbol = Symbol();\nfunction deepCopy(value) {\n    if (Array.isArray(value)) {\n        return value.map((o) => deepCopy(o));\n    }\n    else if (value && typeof value === 'object') {\n        const valueCasted = value;\n        if (valueCasted[copySymbol]) {\n            // This is a circular dependency. Just return the cloned value.\n            return valueCasted[copySymbol];\n        }\n        if (valueCasted['toJSON']) {\n            return JSON.parse(valueCasted['toJSON']());\n        }\n        const copy = Object.create(Object.getPrototypeOf(valueCasted));\n        valueCasted[copySymbol] = copy;\n        for (const key of Object.getOwnPropertyNames(valueCasted)) {\n            copy[key] = deepCopy(valueCasted[key]);\n        }\n        delete valueCasted[copySymbol];\n        return copy;\n    }\n    else {\n        return value;\n    }\n}\nexports.deepCopy = deepCopy;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,QAAR,GAAmB,KAAK,CAAxB;AACA,MAAMC,UAAU,GAAGC,MAAM,EAAzB;;AACA,SAASF,QAAT,CAAkBD,KAAlB,EAAyB;EACrB,IAAII,KAAK,CAACC,OAAN,CAAcL,KAAd,CAAJ,EAA0B;IACtB,OAAOA,KAAK,CAACM,GAAN,CAAWC,CAAD,IAAON,QAAQ,CAACM,CAAD,CAAzB,CAAP;EACH,CAFD,MAGK,IAAIP,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;IACzC,MAAMQ,WAAW,GAAGR,KAApB;;IACA,IAAIQ,WAAW,CAACN,UAAD,CAAf,EAA6B;MACzB;MACA,OAAOM,WAAW,CAACN,UAAD,CAAlB;IACH;;IACD,IAAIM,WAAW,CAAC,QAAD,CAAf,EAA2B;MACvB,OAAOC,IAAI,CAACC,KAAL,CAAWF,WAAW,CAAC,QAAD,CAAX,EAAX,CAAP;IACH;;IACD,MAAMG,IAAI,GAAGd,MAAM,CAACe,MAAP,CAAcf,MAAM,CAACgB,cAAP,CAAsBL,WAAtB,CAAd,CAAb;IACAA,WAAW,CAACN,UAAD,CAAX,GAA0BS,IAA1B;;IACA,KAAK,MAAMG,GAAX,IAAkBjB,MAAM,CAACkB,mBAAP,CAA2BP,WAA3B,CAAlB,EAA2D;MACvDG,IAAI,CAACG,GAAD,CAAJ,GAAYb,QAAQ,CAACO,WAAW,CAACM,GAAD,CAAZ,CAApB;IACH;;IACD,OAAON,WAAW,CAACN,UAAD,CAAlB;IACA,OAAOS,IAAP;EACH,CAhBI,MAiBA;IACD,OAAOX,KAAP;EACH;AACJ;;AACDD,OAAO,CAACE,QAAR,GAAmBA,QAAnB"},"metadata":{},"sourceType":"script"}