{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.jsonHelpUsage = void 0;\n\nconst yargs_1 = __importDefault(require(\"yargs\"));\n\nconst yargsDefaultCommandRegExp = /^\\$0|\\*/;\n\nfunction jsonHelpUsage() {\n  var _a, _b, _c, _d, _e; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  const localYargs = yargs_1.default;\n  const {\n    deprecatedOptions,\n    alias: aliases,\n    array,\n    string,\n    boolean,\n    number,\n    choices,\n    demandedOptions,\n    default: defaultVal,\n    hiddenOptions = []\n  } = localYargs.getOptions();\n  const internalMethods = localYargs.getInternalMethods();\n  const usageInstance = internalMethods.getUsageInstance();\n  const context = internalMethods.getContext();\n  const descriptions = usageInstance.getDescriptions();\n  const groups = localYargs.getGroups();\n  const positional = groups[usageInstance.getPositionalGroupName()];\n  const hidden = new Set(hiddenOptions);\n  const normalizeOptions = [];\n  const allAliases = new Set([...Object.values(aliases).flat()]);\n\n  for (const [names, type] of [[array, 'array'], [string, 'string'], [boolean, 'boolean'], [number, 'number']]) {\n    for (const name of names) {\n      if (allAliases.has(name) || hidden.has(name)) {\n        // Ignore hidden, aliases and already visited option.\n        continue;\n      }\n\n      const positionalIndex = (_a = positional === null || positional === void 0 ? void 0 : positional.indexOf(name)) !== null && _a !== void 0 ? _a : -1;\n      const alias = aliases[name];\n      normalizeOptions.push({\n        name,\n        type,\n        deprecated: deprecatedOptions[name],\n        aliases: (alias === null || alias === void 0 ? void 0 : alias.length) > 0 ? alias : undefined,\n        default: defaultVal[name],\n        required: demandedOptions[name],\n        enum: choices[name],\n        description: (_b = descriptions[name]) === null || _b === void 0 ? void 0 : _b.replace('__yargsString__:', ''),\n        positional: positionalIndex >= 0 ? positionalIndex : undefined\n      });\n    }\n  } // https://github.com/yargs/yargs/blob/00e4ebbe3acd438e73fdb101e75b4f879eb6d345/lib/usage.ts#L124\n\n\n  const subcommands = usageInstance.getCommands().map(([name, rawDescription, isDefault, aliases, deprecated]) => ({\n    name: name.split(' ', 1)[0].replace(yargsDefaultCommandRegExp, ''),\n    command: name.replace(yargsDefaultCommandRegExp, ''),\n    default: isDefault || undefined,\n    ...parseDescription(rawDescription),\n    aliases,\n    deprecated\n  })).sort((a, b) => a.name.localeCompare(b.name));\n  const [command, rawDescription] = (_c = usageInstance.getUsage()[0]) !== null && _c !== void 0 ? _c : [];\n  const defaultSubCommand = (_e = (_d = subcommands.find(x => x.default)) === null || _d === void 0 ? void 0 : _d.command) !== null && _e !== void 0 ? _e : '';\n  const otherSubcommands = subcommands.filter(s => !s.default);\n  const output = {\n    name: [...context.commands].pop(),\n    command: `${command === null || command === void 0 ? void 0 : command.replace(yargsDefaultCommandRegExp, localYargs['$0'])}${defaultSubCommand}`,\n    ...parseDescription(rawDescription),\n    options: normalizeOptions.sort((a, b) => a.name.localeCompare(b.name)),\n    subcommands: otherSubcommands.length ? otherSubcommands : undefined\n  };\n  return JSON.stringify(output, undefined, 2);\n}\n\nexports.jsonHelpUsage = jsonHelpUsage;\n\nfunction parseDescription(rawDescription) {\n  try {\n    const {\n      longDescription,\n      describe: shortDescription,\n      longDescriptionRelativePath\n    } = JSON.parse(rawDescription);\n    return {\n      shortDescription,\n      longDescriptionRelativePath,\n      longDescription\n    };\n  } catch {\n    return {\n      shortDescription: rawDescription\n    };\n  }\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","jsonHelpUsage","yargs_1","require","yargsDefaultCommandRegExp","_a","_b","_c","_d","_e","localYargs","default","deprecatedOptions","alias","aliases","array","string","boolean","number","choices","demandedOptions","defaultVal","hiddenOptions","getOptions","internalMethods","getInternalMethods","usageInstance","getUsageInstance","context","getContext","descriptions","getDescriptions","groups","getGroups","positional","getPositionalGroupName","hidden","Set","normalizeOptions","allAliases","values","flat","names","type","name","has","positionalIndex","indexOf","push","deprecated","length","undefined","required","enum","description","replace","subcommands","getCommands","map","rawDescription","isDefault","split","command","parseDescription","sort","a","b","localeCompare","getUsage","defaultSubCommand","find","x","otherSubcommands","filter","s","output","commands","pop","options","JSON","stringify","longDescription","describe","shortDescription","longDescriptionRelativePath","parse"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular/cli/src/command-builder/utilities/json-help.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.jsonHelpUsage = void 0;\nconst yargs_1 = __importDefault(require(\"yargs\"));\nconst yargsDefaultCommandRegExp = /^\\$0|\\*/;\nfunction jsonHelpUsage() {\n    var _a, _b, _c, _d, _e;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const localYargs = yargs_1.default;\n    const { deprecatedOptions, alias: aliases, array, string, boolean, number, choices, demandedOptions, default: defaultVal, hiddenOptions = [], } = localYargs.getOptions();\n    const internalMethods = localYargs.getInternalMethods();\n    const usageInstance = internalMethods.getUsageInstance();\n    const context = internalMethods.getContext();\n    const descriptions = usageInstance.getDescriptions();\n    const groups = localYargs.getGroups();\n    const positional = groups[usageInstance.getPositionalGroupName()];\n    const hidden = new Set(hiddenOptions);\n    const normalizeOptions = [];\n    const allAliases = new Set([...Object.values(aliases).flat()]);\n    for (const [names, type] of [\n        [array, 'array'],\n        [string, 'string'],\n        [boolean, 'boolean'],\n        [number, 'number'],\n    ]) {\n        for (const name of names) {\n            if (allAliases.has(name) || hidden.has(name)) {\n                // Ignore hidden, aliases and already visited option.\n                continue;\n            }\n            const positionalIndex = (_a = positional === null || positional === void 0 ? void 0 : positional.indexOf(name)) !== null && _a !== void 0 ? _a : -1;\n            const alias = aliases[name];\n            normalizeOptions.push({\n                name,\n                type,\n                deprecated: deprecatedOptions[name],\n                aliases: (alias === null || alias === void 0 ? void 0 : alias.length) > 0 ? alias : undefined,\n                default: defaultVal[name],\n                required: demandedOptions[name],\n                enum: choices[name],\n                description: (_b = descriptions[name]) === null || _b === void 0 ? void 0 : _b.replace('__yargsString__:', ''),\n                positional: positionalIndex >= 0 ? positionalIndex : undefined,\n            });\n        }\n    }\n    // https://github.com/yargs/yargs/blob/00e4ebbe3acd438e73fdb101e75b4f879eb6d345/lib/usage.ts#L124\n    const subcommands = usageInstance.getCommands()\n        .map(([name, rawDescription, isDefault, aliases, deprecated]) => ({\n        name: name.split(' ', 1)[0].replace(yargsDefaultCommandRegExp, ''),\n        command: name.replace(yargsDefaultCommandRegExp, ''),\n        default: isDefault || undefined,\n        ...parseDescription(rawDescription),\n        aliases,\n        deprecated,\n    }))\n        .sort((a, b) => a.name.localeCompare(b.name));\n    const [command, rawDescription] = (_c = usageInstance.getUsage()[0]) !== null && _c !== void 0 ? _c : [];\n    const defaultSubCommand = (_e = (_d = subcommands.find((x) => x.default)) === null || _d === void 0 ? void 0 : _d.command) !== null && _e !== void 0 ? _e : '';\n    const otherSubcommands = subcommands.filter((s) => !s.default);\n    const output = {\n        name: [...context.commands].pop(),\n        command: `${command === null || command === void 0 ? void 0 : command.replace(yargsDefaultCommandRegExp, localYargs['$0'])}${defaultSubCommand}`,\n        ...parseDescription(rawDescription),\n        options: normalizeOptions.sort((a, b) => a.name.localeCompare(b.name)),\n        subcommands: otherSubcommands.length ? otherSubcommands : undefined,\n    };\n    return JSON.stringify(output, undefined, 2);\n}\nexports.jsonHelpUsage = jsonHelpUsage;\nfunction parseDescription(rawDescription) {\n    try {\n        const { longDescription, describe: shortDescription, longDescriptionRelativePath, } = JSON.parse(rawDescription);\n        return {\n            shortDescription,\n            longDescriptionRelativePath,\n            longDescription,\n        };\n    }\n    catch {\n        return {\n            shortDescription: rawDescription,\n        };\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}