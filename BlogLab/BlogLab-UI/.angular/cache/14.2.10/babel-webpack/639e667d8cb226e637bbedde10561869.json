{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RunCommandModule = void 0;\n\nconst path_1 = require(\"path\");\n\nconst architect_base_command_module_1 = require(\"../../command-builder/architect-base-command-module\");\n\nconst command_module_1 = require(\"../../command-builder/command-module\");\n\nclass RunCommandModule extends architect_base_command_module_1.ArchitectBaseCommandModule {\n  constructor() {\n    super(...arguments);\n    this.scope = command_module_1.CommandScope.In;\n    this.command = 'run <target>';\n    this.describe = 'Runs an Architect target with an optional custom builder configuration defined in your project.';\n    this.longDescriptionPath = (0, path_1.join)(__dirname, 'long-description.md');\n  }\n\n  builder(argv) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        jsonHelp,\n        getYargsCompletions,\n        help\n      } = _this.context.args.options;\n      const localYargs = argv.positional('target', {\n        describe: 'The Architect target to run.',\n        type: 'string',\n        demandOption: true,\n        // Show only in when using --help and auto completion because otherwise comma seperated configuration values will be invalid.\n        // Also, hide choices from JSON help so that we don't display them in AIO.\n        choices: (getYargsCompletions || help) && !jsonHelp ? _this.getTargetChoices() : undefined\n      }).middleware(args => {\n        // TODO: remove in version 15.\n        const {\n          configuration,\n          target\n        } = args;\n\n        if (typeof configuration === 'string' && target) {\n          const targetWithConfig = target.split(':', 2);\n          targetWithConfig.push(configuration);\n          throw new command_module_1.CommandModuleError('Unknown argument: configuration.\\n' + `Provide the configuration as part of the target 'ng run ${targetWithConfig.join(':')}'.`);\n        }\n      }, true).strict();\n\n      const target = _this.makeTargetSpecifier();\n\n      if (!target) {\n        return localYargs;\n      }\n\n      const schemaOptions = yield _this.getArchitectTargetOptions(target);\n      return _this.addSchemaOptionsToCommand(localYargs, schemaOptions);\n    })();\n  }\n\n  run(options) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const target = _this2.makeTargetSpecifier(options);\n\n      const {\n        target: _target,\n        ...extraOptions\n      } = options;\n\n      if (!target) {\n        throw new command_module_1.CommandModuleError('Cannot determine project or target.');\n      }\n\n      return _this2.runSingleTarget(target, extraOptions);\n    })();\n  }\n\n  makeTargetSpecifier(options) {\n    var _a;\n\n    const architectTarget = (_a = options === null || options === void 0 ? void 0 : options.target) !== null && _a !== void 0 ? _a : this.context.args.positional[1];\n\n    if (!architectTarget) {\n      return undefined;\n    }\n\n    const [project = '', target = '', configuration] = architectTarget.split(':');\n    return {\n      project,\n      target,\n      configuration\n    };\n  }\n  /** @returns a sorted list of target specifiers to be used for auto completion. */\n\n\n  getTargetChoices() {\n    if (!this.context.workspace) {\n      return;\n    }\n\n    const targets = [];\n\n    for (const [projectName, project] of this.context.workspace.projects) {\n      for (const [targetName, target] of project.targets) {\n        const currentTarget = `${projectName}:${targetName}`;\n        targets.push(currentTarget);\n\n        if (!target.configurations) {\n          continue;\n        }\n\n        for (const configName of Object.keys(target.configurations)) {\n          targets.push(`${currentTarget}:${configName}`);\n        }\n      }\n    }\n\n    return targets.sort();\n  }\n\n}\n\nexports.RunCommandModule = RunCommandModule;","map":{"version":3,"names":["Object","defineProperty","exports","value","RunCommandModule","path_1","require","architect_base_command_module_1","command_module_1","ArchitectBaseCommandModule","constructor","arguments","scope","CommandScope","In","command","describe","longDescriptionPath","join","__dirname","builder","argv","jsonHelp","getYargsCompletions","help","context","args","options","localYargs","positional","type","demandOption","choices","getTargetChoices","undefined","middleware","configuration","target","targetWithConfig","split","push","CommandModuleError","strict","makeTargetSpecifier","schemaOptions","getArchitectTargetOptions","addSchemaOptionsToCommand","run","_target","extraOptions","runSingleTarget","_a","architectTarget","project","workspace","targets","projectName","projects","targetName","currentTarget","configurations","configName","keys","sort"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular/cli/src/commands/run/cli.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RunCommandModule = void 0;\nconst path_1 = require(\"path\");\nconst architect_base_command_module_1 = require(\"../../command-builder/architect-base-command-module\");\nconst command_module_1 = require(\"../../command-builder/command-module\");\nclass RunCommandModule extends architect_base_command_module_1.ArchitectBaseCommandModule {\n    constructor() {\n        super(...arguments);\n        this.scope = command_module_1.CommandScope.In;\n        this.command = 'run <target>';\n        this.describe = 'Runs an Architect target with an optional custom builder configuration defined in your project.';\n        this.longDescriptionPath = (0, path_1.join)(__dirname, 'long-description.md');\n    }\n    async builder(argv) {\n        const { jsonHelp, getYargsCompletions, help } = this.context.args.options;\n        const localYargs = argv\n            .positional('target', {\n            describe: 'The Architect target to run.',\n            type: 'string',\n            demandOption: true,\n            // Show only in when using --help and auto completion because otherwise comma seperated configuration values will be invalid.\n            // Also, hide choices from JSON help so that we don't display them in AIO.\n            choices: (getYargsCompletions || help) && !jsonHelp ? this.getTargetChoices() : undefined,\n        })\n            .middleware((args) => {\n            // TODO: remove in version 15.\n            const { configuration, target } = args;\n            if (typeof configuration === 'string' && target) {\n                const targetWithConfig = target.split(':', 2);\n                targetWithConfig.push(configuration);\n                throw new command_module_1.CommandModuleError('Unknown argument: configuration.\\n' +\n                    `Provide the configuration as part of the target 'ng run ${targetWithConfig.join(':')}'.`);\n            }\n        }, true)\n            .strict();\n        const target = this.makeTargetSpecifier();\n        if (!target) {\n            return localYargs;\n        }\n        const schemaOptions = await this.getArchitectTargetOptions(target);\n        return this.addSchemaOptionsToCommand(localYargs, schemaOptions);\n    }\n    async run(options) {\n        const target = this.makeTargetSpecifier(options);\n        const { target: _target, ...extraOptions } = options;\n        if (!target) {\n            throw new command_module_1.CommandModuleError('Cannot determine project or target.');\n        }\n        return this.runSingleTarget(target, extraOptions);\n    }\n    makeTargetSpecifier(options) {\n        var _a;\n        const architectTarget = (_a = options === null || options === void 0 ? void 0 : options.target) !== null && _a !== void 0 ? _a : this.context.args.positional[1];\n        if (!architectTarget) {\n            return undefined;\n        }\n        const [project = '', target = '', configuration] = architectTarget.split(':');\n        return {\n            project,\n            target,\n            configuration,\n        };\n    }\n    /** @returns a sorted list of target specifiers to be used for auto completion. */\n    getTargetChoices() {\n        if (!this.context.workspace) {\n            return;\n        }\n        const targets = [];\n        for (const [projectName, project] of this.context.workspace.projects) {\n            for (const [targetName, target] of project.targets) {\n                const currentTarget = `${projectName}:${targetName}`;\n                targets.push(currentTarget);\n                if (!target.configurations) {\n                    continue;\n                }\n                for (const configName of Object.keys(target.configurations)) {\n                    targets.push(`${currentTarget}:${configName}`);\n                }\n            }\n        }\n        return targets.sort();\n    }\n}\nexports.RunCommandModule = RunCommandModule;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}