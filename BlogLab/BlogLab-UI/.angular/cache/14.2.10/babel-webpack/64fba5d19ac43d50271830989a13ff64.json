{"ast":null,"code":"const validateOptions = options => {\n  if (typeof options !== 'object' || !options) {\n    throw new TypeError('invalid options object provided to runScript');\n  }\n\n  const {\n    event,\n    path,\n    scriptShell,\n    env = {},\n    stdio = 'pipe',\n    args = [],\n    cmd\n  } = options;\n\n  if (!event || typeof event !== 'string') {\n    throw new TypeError('valid event not provided to runScript');\n  }\n\n  if (!path || typeof path !== 'string') {\n    throw new TypeError('valid path not provided to runScript');\n  }\n\n  if (scriptShell !== undefined && typeof scriptShell !== 'string') {\n    throw new TypeError('invalid scriptShell option provided to runScript');\n  }\n\n  if (typeof env !== 'object' || !env) {\n    throw new TypeError('invalid env option provided to runScript');\n  }\n\n  if (typeof stdio !== 'string' && !Array.isArray(stdio)) {\n    throw new TypeError('invalid stdio option provided to runScript');\n  }\n\n  if (!Array.isArray(args) || args.some(a => typeof a !== 'string')) {\n    throw new TypeError('invalid args option provided to runScript');\n  }\n\n  if (cmd !== undefined && typeof cmd !== 'string') {\n    throw new TypeError('invalid cmd option provided to runScript');\n  }\n};\n\nmodule.exports = validateOptions;","map":{"version":3,"names":["validateOptions","options","TypeError","event","path","scriptShell","env","stdio","args","cmd","undefined","Array","isArray","some","a","module","exports"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@npmcli/run-script/lib/validate-options.js"],"sourcesContent":["const validateOptions = options => {\n  if (typeof options !== 'object' || !options) {\n    throw new TypeError('invalid options object provided to runScript')\n  }\n\n  const {\n    event,\n    path,\n    scriptShell,\n    env = {},\n    stdio = 'pipe',\n    args = [],\n    cmd,\n  } = options\n\n  if (!event || typeof event !== 'string') {\n    throw new TypeError('valid event not provided to runScript')\n  }\n  if (!path || typeof path !== 'string') {\n    throw new TypeError('valid path not provided to runScript')\n  }\n  if (scriptShell !== undefined && typeof scriptShell !== 'string') {\n    throw new TypeError('invalid scriptShell option provided to runScript')\n  }\n  if (typeof env !== 'object' || !env) {\n    throw new TypeError('invalid env option provided to runScript')\n  }\n  if (typeof stdio !== 'string' && !Array.isArray(stdio)) {\n    throw new TypeError('invalid stdio option provided to runScript')\n  }\n  if (!Array.isArray(args) || args.some(a => typeof a !== 'string')) {\n    throw new TypeError('invalid args option provided to runScript')\n  }\n  if (cmd !== undefined && typeof cmd !== 'string') {\n    throw new TypeError('invalid cmd option provided to runScript')\n  }\n}\n\nmodule.exports = validateOptions\n"],"mappings":"AAAA,MAAMA,eAAe,GAAGC,OAAO,IAAI;EACjC,IAAI,OAAOA,OAAP,KAAmB,QAAnB,IAA+B,CAACA,OAApC,EAA6C;IAC3C,MAAM,IAAIC,SAAJ,CAAc,8CAAd,CAAN;EACD;;EAED,MAAM;IACJC,KADI;IAEJC,IAFI;IAGJC,WAHI;IAIJC,GAAG,GAAG,EAJF;IAKJC,KAAK,GAAG,MALJ;IAMJC,IAAI,GAAG,EANH;IAOJC;EAPI,IAQFR,OARJ;;EAUA,IAAI,CAACE,KAAD,IAAU,OAAOA,KAAP,KAAiB,QAA/B,EAAyC;IACvC,MAAM,IAAID,SAAJ,CAAc,uCAAd,CAAN;EACD;;EACD,IAAI,CAACE,IAAD,IAAS,OAAOA,IAAP,KAAgB,QAA7B,EAAuC;IACrC,MAAM,IAAIF,SAAJ,CAAc,sCAAd,CAAN;EACD;;EACD,IAAIG,WAAW,KAAKK,SAAhB,IAA6B,OAAOL,WAAP,KAAuB,QAAxD,EAAkE;IAChE,MAAM,IAAIH,SAAJ,CAAc,kDAAd,CAAN;EACD;;EACD,IAAI,OAAOI,GAAP,KAAe,QAAf,IAA2B,CAACA,GAAhC,EAAqC;IACnC,MAAM,IAAIJ,SAAJ,CAAc,0CAAd,CAAN;EACD;;EACD,IAAI,OAAOK,KAAP,KAAiB,QAAjB,IAA6B,CAACI,KAAK,CAACC,OAAN,CAAcL,KAAd,CAAlC,EAAwD;IACtD,MAAM,IAAIL,SAAJ,CAAc,4CAAd,CAAN;EACD;;EACD,IAAI,CAACS,KAAK,CAACC,OAAN,CAAcJ,IAAd,CAAD,IAAwBA,IAAI,CAACK,IAAL,CAAUC,CAAC,IAAI,OAAOA,CAAP,KAAa,QAA5B,CAA5B,EAAmE;IACjE,MAAM,IAAIZ,SAAJ,CAAc,2CAAd,CAAN;EACD;;EACD,IAAIO,GAAG,KAAKC,SAAR,IAAqB,OAAOD,GAAP,KAAe,QAAxC,EAAkD;IAChD,MAAM,IAAIP,SAAJ,CAAc,0CAAd,CAAN;EACD;AACF,CApCD;;AAsCAa,MAAM,CAACC,OAAP,GAAiBhB,eAAjB"},"metadata":{},"sourceType":"script"}