{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NodeModulesTestEngineHost = void 0;\n\nconst node_module_engine_host_1 = require(\"./node-module-engine-host\");\n/**\n * An EngineHost that uses a registry to super seed locations of collection.json files, but\n * revert back to using node modules resolution. This is done for testing.\n */\n\n\nclass NodeModulesTestEngineHost extends node_module_engine_host_1.NodeModulesEngineHost {\n  constructor() {\n    super(...arguments);\n    this._collections = new Map();\n    this._tasks = [];\n  }\n\n  get tasks() {\n    return this._tasks;\n  }\n\n  clearTasks() {\n    this._tasks = [];\n  }\n\n  registerCollection(name, path) {\n    this._collections.set(name, path);\n  }\n\n  transformContext(context) {\n    const oldAddTask = context.addTask;\n\n    context.addTask = (task, dependencies) => {\n      this._tasks.push(task.toConfiguration());\n\n      return oldAddTask.call(context, task, dependencies);\n    };\n\n    return context;\n  }\n\n  _resolveCollectionPath(name, requester) {\n    const maybePath = this._collections.get(name);\n\n    if (maybePath) {\n      return maybePath;\n    }\n\n    return super._resolveCollectionPath(name, requester);\n  }\n\n}\n\nexports.NodeModulesTestEngineHost = NodeModulesTestEngineHost;","map":{"version":3,"names":["Object","defineProperty","exports","value","NodeModulesTestEngineHost","node_module_engine_host_1","require","NodeModulesEngineHost","constructor","arguments","_collections","Map","_tasks","tasks","clearTasks","registerCollection","name","path","set","transformContext","context","oldAddTask","addTask","task","dependencies","push","toConfiguration","call","_resolveCollectionPath","requester","maybePath","get"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/schematics/tools/node-modules-test-engine-host.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeModulesTestEngineHost = void 0;\nconst node_module_engine_host_1 = require(\"./node-module-engine-host\");\n/**\n * An EngineHost that uses a registry to super seed locations of collection.json files, but\n * revert back to using node modules resolution. This is done for testing.\n */\nclass NodeModulesTestEngineHost extends node_module_engine_host_1.NodeModulesEngineHost {\n    constructor() {\n        super(...arguments);\n        this._collections = new Map();\n        this._tasks = [];\n    }\n    get tasks() {\n        return this._tasks;\n    }\n    clearTasks() {\n        this._tasks = [];\n    }\n    registerCollection(name, path) {\n        this._collections.set(name, path);\n    }\n    transformContext(context) {\n        const oldAddTask = context.addTask;\n        context.addTask = (task, dependencies) => {\n            this._tasks.push(task.toConfiguration());\n            return oldAddTask.call(context, task, dependencies);\n        };\n        return context;\n    }\n    _resolveCollectionPath(name, requester) {\n        const maybePath = this._collections.get(name);\n        if (maybePath) {\n            return maybePath;\n        }\n        return super._resolveCollectionPath(name, requester);\n    }\n}\nexports.NodeModulesTestEngineHost = NodeModulesTestEngineHost;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,yBAAR,GAAoC,KAAK,CAAzC;;AACA,MAAMC,yBAAyB,GAAGC,OAAO,CAAC,2BAAD,CAAzC;AACA;AACA;AACA;AACA;;;AACA,MAAMF,yBAAN,SAAwCC,yBAAyB,CAACE,qBAAlE,CAAwF;EACpFC,WAAW,GAAG;IACV,MAAM,GAAGC,SAAT;IACA,KAAKC,YAAL,GAAoB,IAAIC,GAAJ,EAApB;IACA,KAAKC,MAAL,GAAc,EAAd;EACH;;EACQ,IAALC,KAAK,GAAG;IACR,OAAO,KAAKD,MAAZ;EACH;;EACDE,UAAU,GAAG;IACT,KAAKF,MAAL,GAAc,EAAd;EACH;;EACDG,kBAAkB,CAACC,IAAD,EAAOC,IAAP,EAAa;IAC3B,KAAKP,YAAL,CAAkBQ,GAAlB,CAAsBF,IAAtB,EAA4BC,IAA5B;EACH;;EACDE,gBAAgB,CAACC,OAAD,EAAU;IACtB,MAAMC,UAAU,GAAGD,OAAO,CAACE,OAA3B;;IACAF,OAAO,CAACE,OAAR,GAAkB,CAACC,IAAD,EAAOC,YAAP,KAAwB;MACtC,KAAKZ,MAAL,CAAYa,IAAZ,CAAiBF,IAAI,CAACG,eAAL,EAAjB;;MACA,OAAOL,UAAU,CAACM,IAAX,CAAgBP,OAAhB,EAAyBG,IAAzB,EAA+BC,YAA/B,CAAP;IACH,CAHD;;IAIA,OAAOJ,OAAP;EACH;;EACDQ,sBAAsB,CAACZ,IAAD,EAAOa,SAAP,EAAkB;IACpC,MAAMC,SAAS,GAAG,KAAKpB,YAAL,CAAkBqB,GAAlB,CAAsBf,IAAtB,CAAlB;;IACA,IAAIc,SAAJ,EAAe;MACX,OAAOA,SAAP;IACH;;IACD,OAAO,MAAMF,sBAAN,CAA6BZ,IAA7B,EAAmCa,SAAnC,CAAP;EACH;;AA7BmF;;AA+BxF3B,OAAO,CAACE,yBAAR,GAAoCA,yBAApC"},"metadata":{},"sourceType":"script"}