{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateOptionsWithSchema = exports.InvalidInputOptions = void 0;\n\nconst core_1 = require(\"@angular-devkit/core\");\n\nconst rxjs_1 = require(\"rxjs\");\n\nconst operators_1 = require(\"rxjs/operators\");\n\nclass InvalidInputOptions extends core_1.schema.SchemaValidationException {\n  constructor(options, errors) {\n    super(errors, `Schematic input does not validate against the Schema: ${JSON.stringify(options)}\\nErrors:\\n`);\n  }\n\n}\n\nexports.InvalidInputOptions = InvalidInputOptions; // This can only be used in NodeJS.\n\nfunction validateOptionsWithSchema(registry) {\n  return (schematic, options, context) => {\n    // Prevent a schematic from changing the options object by making a copy of it.\n    options = (0, core_1.deepCopy)(options);\n    const withPrompts = context ? context.interactive : true;\n\n    if (schematic.schema && schematic.schemaJson) {\n      // Make a deep copy of options.\n      return registry.compile(schematic.schemaJson).pipe((0, operators_1.mergeMap)(validator => validator(options, {\n        withPrompts\n      })), (0, operators_1.first)(), (0, operators_1.map)(result => {\n        if (!result.success) {\n          throw new InvalidInputOptions(options, result.errors || []);\n        }\n\n        return options;\n      }));\n    }\n\n    return (0, rxjs_1.of)(options);\n  };\n}\n\nexports.validateOptionsWithSchema = validateOptionsWithSchema;","map":{"version":3,"names":["Object","defineProperty","exports","value","validateOptionsWithSchema","InvalidInputOptions","core_1","require","rxjs_1","operators_1","schema","SchemaValidationException","constructor","options","errors","JSON","stringify","registry","schematic","context","deepCopy","withPrompts","interactive","schemaJson","compile","pipe","mergeMap","validator","first","map","result","success","of"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/schematics/tools/schema-option-transform.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateOptionsWithSchema = exports.InvalidInputOptions = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nclass InvalidInputOptions extends core_1.schema.SchemaValidationException {\n    constructor(options, errors) {\n        super(errors, `Schematic input does not validate against the Schema: ${JSON.stringify(options)}\\nErrors:\\n`);\n    }\n}\nexports.InvalidInputOptions = InvalidInputOptions;\n// This can only be used in NodeJS.\nfunction validateOptionsWithSchema(registry) {\n    return (schematic, options, context) => {\n        // Prevent a schematic from changing the options object by making a copy of it.\n        options = (0, core_1.deepCopy)(options);\n        const withPrompts = context ? context.interactive : true;\n        if (schematic.schema && schematic.schemaJson) {\n            // Make a deep copy of options.\n            return registry.compile(schematic.schemaJson).pipe((0, operators_1.mergeMap)((validator) => validator(options, { withPrompts })), (0, operators_1.first)(), (0, operators_1.map)((result) => {\n                if (!result.success) {\n                    throw new InvalidInputOptions(options, result.errors || []);\n                }\n                return options;\n            }));\n        }\n        return (0, rxjs_1.of)(options);\n    };\n}\nexports.validateOptionsWithSchema = validateOptionsWithSchema;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,yBAAR,GAAoCF,OAAO,CAACG,mBAAR,GAA8B,KAAK,CAAvE;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,sBAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,MAAD,CAAtB;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,gBAAD,CAA3B;;AACA,MAAMF,mBAAN,SAAkCC,MAAM,CAACI,MAAP,CAAcC,yBAAhD,CAA0E;EACtEC,WAAW,CAACC,OAAD,EAAUC,MAAV,EAAkB;IACzB,MAAMA,MAAN,EAAe,yDAAwDC,IAAI,CAACC,SAAL,CAAeH,OAAf,CAAwB,aAA/F;EACH;;AAHqE;;AAK1EX,OAAO,CAACG,mBAAR,GAA8BA,mBAA9B,C,CACA;;AACA,SAASD,yBAAT,CAAmCa,QAAnC,EAA6C;EACzC,OAAO,CAACC,SAAD,EAAYL,OAAZ,EAAqBM,OAArB,KAAiC;IACpC;IACAN,OAAO,GAAG,CAAC,GAAGP,MAAM,CAACc,QAAX,EAAqBP,OAArB,CAAV;IACA,MAAMQ,WAAW,GAAGF,OAAO,GAAGA,OAAO,CAACG,WAAX,GAAyB,IAApD;;IACA,IAAIJ,SAAS,CAACR,MAAV,IAAoBQ,SAAS,CAACK,UAAlC,EAA8C;MAC1C;MACA,OAAON,QAAQ,CAACO,OAAT,CAAiBN,SAAS,CAACK,UAA3B,EAAuCE,IAAvC,CAA4C,CAAC,GAAGhB,WAAW,CAACiB,QAAhB,EAA2BC,SAAD,IAAeA,SAAS,CAACd,OAAD,EAAU;QAAEQ;MAAF,CAAV,CAAlD,CAA5C,EAA2H,CAAC,GAAGZ,WAAW,CAACmB,KAAhB,GAA3H,EAAqJ,CAAC,GAAGnB,WAAW,CAACoB,GAAhB,EAAsBC,MAAD,IAAY;QACzL,IAAI,CAACA,MAAM,CAACC,OAAZ,EAAqB;UACjB,MAAM,IAAI1B,mBAAJ,CAAwBQ,OAAxB,EAAiCiB,MAAM,CAAChB,MAAP,IAAiB,EAAlD,CAAN;QACH;;QACD,OAAOD,OAAP;MACH,CAL2J,CAArJ,CAAP;IAMH;;IACD,OAAO,CAAC,GAAGL,MAAM,CAACwB,EAAX,EAAenB,OAAf,CAAP;EACH,CAdD;AAeH;;AACDX,OAAO,CAACE,yBAAR,GAAoCA,yBAApC"},"metadata":{},"sourceType":"script"}