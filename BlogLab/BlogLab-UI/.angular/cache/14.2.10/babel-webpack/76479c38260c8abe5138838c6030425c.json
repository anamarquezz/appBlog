{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PackageManagerUtils = void 0;\n\nconst core_1 = require(\"@angular-devkit/core\");\n\nconst child_process_1 = require(\"child_process\");\n\nconst fs_1 = require(\"fs\");\n\nconst os_1 = require(\"os\");\n\nconst path_1 = require(\"path\");\n\nconst semver_1 = require(\"semver\");\n\nconst workspace_schema_1 = require(\"../../lib/config/workspace-schema\");\n\nconst config_1 = require(\"./config\");\n\nconst memoize_1 = require(\"./memoize\");\n\nconst spinner_1 = require(\"./spinner\");\n\nclass PackageManagerUtils {\n  constructor(context) {\n    this.context = context;\n  }\n  /** Get the package manager name. */\n\n\n  get name() {\n    return this.getName();\n  }\n  /** Get the package manager version. */\n\n\n  get version() {\n    return this.getVersion(this.name);\n  }\n  /**\n   * Checks if the package manager is supported. If not, display a warning.\n   */\n\n\n  ensureCompatibility() {\n    if (this.name !== workspace_schema_1.PackageManager.Npm) {\n      return;\n    }\n\n    try {\n      const version = (0, semver_1.valid)(this.version);\n\n      if (!version) {\n        return;\n      }\n\n      if ((0, semver_1.satisfies)(version, '>=7 <7.5.6')) {\n        // eslint-disable-next-line no-console\n        console.warn(`npm version ${version} detected.` + ' When using npm 7 with the Angular CLI, npm version 7.5.6 or higher is recommended.');\n      }\n    } catch {// npm is not installed.\n    }\n  }\n  /** Install a single package. */\n\n\n  install(packageName, save = true, extraArgs = [], cwd) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const packageManagerArgs = _this.getArguments();\n\n      const installArgs = [packageManagerArgs.install, packageName];\n\n      if (save === 'devDependencies') {\n        installArgs.push(packageManagerArgs.saveDev);\n      }\n\n      return _this.run([...installArgs, ...extraArgs], {\n        cwd,\n        silent: true\n      });\n    })();\n  }\n  /** Install all packages. */\n\n\n  installAll(extraArgs = [], cwd) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const packageManagerArgs = _this2.getArguments();\n\n      const installArgs = [];\n\n      if (packageManagerArgs.installAll) {\n        installArgs.push(packageManagerArgs.installAll);\n      }\n\n      return _this2.run([...installArgs, ...extraArgs], {\n        cwd,\n        silent: true\n      });\n    })();\n  }\n  /** Install a single package temporary. */\n\n\n  installTemp(packageName, extraArgs) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const tempPath = yield fs_1.promises.mkdtemp((0, path_1.join)((0, fs_1.realpathSync)((0, os_1.tmpdir)()), 'angular-cli-packages-')); // clean up temp directory on process exit\n\n      process.on('exit', () => {\n        try {\n          (0, fs_1.rmSync)(tempPath, {\n            recursive: true,\n            maxRetries: 3\n          });\n        } catch {}\n      }); // NPM will warn when a `package.json` is not found in the install directory\n      // Example:\n      // npm WARN enoent ENOENT: no such file or directory, open '/tmp/.ng-temp-packages-84Qi7y/package.json'\n      // npm WARN .ng-temp-packages-84Qi7y No description\n      // npm WARN .ng-temp-packages-84Qi7y No repository field.\n      // npm WARN .ng-temp-packages-84Qi7y No license field.\n      // While we can use `npm init -y` we will end up needing to update the 'package.json' anyways\n      // because of missing fields.\n\n      yield fs_1.promises.writeFile((0, path_1.join)(tempPath, 'package.json'), JSON.stringify({\n        name: 'temp-cli-install',\n        description: 'temp-cli-install',\n        repository: 'temp-cli-install',\n        license: 'MIT'\n      })); // setup prefix/global modules path\n\n      const packageManagerArgs = _this3.getArguments();\n\n      const tempNodeModules = (0, path_1.join)(tempPath, 'node_modules'); // Yarn will not append 'node_modules' to the path\n\n      const prefixPath = _this3.name === workspace_schema_1.PackageManager.Yarn ? tempNodeModules : tempPath;\n      const installArgs = [...(extraArgs !== null && extraArgs !== void 0 ? extraArgs : []), `${packageManagerArgs.prefix}=\"${prefixPath}\"`, packageManagerArgs.noLockfile];\n      return {\n        success: yield _this3.install(packageName, true, installArgs, tempPath),\n        tempNodeModules\n      };\n    })();\n  }\n\n  getArguments() {\n    switch (this.name) {\n      case workspace_schema_1.PackageManager.Yarn:\n        return {\n          saveDev: '--dev',\n          install: 'add',\n          prefix: '--modules-folder',\n          noLockfile: '--no-lockfile'\n        };\n\n      case workspace_schema_1.PackageManager.Pnpm:\n        return {\n          saveDev: '--save-dev',\n          install: 'add',\n          installAll: 'install',\n          prefix: '--prefix',\n          noLockfile: '--no-lockfile'\n        };\n\n      default:\n        return {\n          saveDev: '--save-dev',\n          install: 'install',\n          installAll: 'install',\n          prefix: '--prefix',\n          noLockfile: '--no-package-lock'\n        };\n    }\n  }\n\n  run(args, options = {}) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        cwd = process.cwd(),\n        silent = false\n      } = options;\n      const spinner = new spinner_1.Spinner();\n      spinner.start('Installing packages...');\n      return new Promise(resolve => {\n        var _a, _b;\n\n        const bufferedOutput = [];\n        const childProcess = (0, child_process_1.spawn)(_this4.name, args, {\n          // Always pipe stderr to allow for failures to be reported\n          stdio: silent ? ['ignore', 'ignore', 'pipe'] : 'pipe',\n          shell: true,\n          cwd\n        }).on('close', code => {\n          if (code === 0) {\n            spinner.succeed('Packages successfully installed.');\n            resolve(true);\n          } else {\n            spinner.stop();\n            bufferedOutput.forEach(({\n              stream,\n              data\n            }) => stream.write(data));\n            spinner.fail('Packages installation failed, see above.');\n            resolve(false);\n          }\n        });\n        (_a = childProcess.stdout) === null || _a === void 0 ? void 0 : _a.on('data', data => bufferedOutput.push({\n          stream: process.stdout,\n          data: data\n        }));\n        (_b = childProcess.stderr) === null || _b === void 0 ? void 0 : _b.on('data', data => bufferedOutput.push({\n          stream: process.stderr,\n          data: data\n        }));\n      });\n    })();\n  }\n\n  getVersion(name) {\n    try {\n      return (0, child_process_1.execSync)(`${name} --version`, {\n        encoding: 'utf8',\n        stdio: ['ignore', 'pipe', 'ignore'],\n        env: { ...process.env,\n          //  NPM updater notifier will prevents the child process from closing until it timeout after 3 minutes.\n          NO_UPDATE_NOTIFIER: '1',\n          NPM_CONFIG_UPDATE_NOTIFIER: 'false'\n        }\n      }).trim();\n    } catch {\n      return undefined;\n    }\n  }\n\n  getName() {\n    const packageManager = this.getConfiguredPackageManager();\n\n    if (packageManager) {\n      return packageManager;\n    }\n\n    const hasNpmLock = this.hasLockfile(workspace_schema_1.PackageManager.Npm);\n    const hasYarnLock = this.hasLockfile(workspace_schema_1.PackageManager.Yarn);\n    const hasPnpmLock = this.hasLockfile(workspace_schema_1.PackageManager.Pnpm); // PERF NOTE: `this.getVersion` spawns the package a the child_process which can take around ~300ms at times.\n    // Therefore, we should only call this method when needed. IE: don't call `this.getVersion(PackageManager.Pnpm)` unless truly needed.\n    // The result of this method is not stored in a variable because it's memoized.\n\n    if (hasNpmLock) {\n      // Has NPM lock file.\n      if (!hasYarnLock && !hasPnpmLock && this.getVersion(workspace_schema_1.PackageManager.Npm)) {\n        // Only NPM lock file and NPM binary is available.\n        return workspace_schema_1.PackageManager.Npm;\n      }\n    } else {\n      // No NPM lock file.\n      if (hasYarnLock && this.getVersion(workspace_schema_1.PackageManager.Yarn)) {\n        // Yarn lock file and Yarn binary is available.\n        return workspace_schema_1.PackageManager.Yarn;\n      } else if (hasPnpmLock && this.getVersion(workspace_schema_1.PackageManager.Pnpm)) {\n        // PNPM lock file and PNPM binary is available.\n        return workspace_schema_1.PackageManager.Pnpm;\n      }\n    }\n\n    if (!this.getVersion(workspace_schema_1.PackageManager.Npm)) {\n      // Doesn't have NPM installed.\n      const hasYarn = !!this.getVersion(workspace_schema_1.PackageManager.Yarn);\n      const hasPnpm = !!this.getVersion(workspace_schema_1.PackageManager.Pnpm);\n\n      if (hasYarn && !hasPnpm) {\n        return workspace_schema_1.PackageManager.Yarn;\n      } else if (!hasYarn && hasPnpm) {\n        return workspace_schema_1.PackageManager.Pnpm;\n      }\n    } // TODO: This should eventually inform the user of ambiguous package manager usage.\n    //       Potentially with a prompt to choose and optionally set as the default.\n\n\n    return workspace_schema_1.PackageManager.Npm;\n  }\n\n  hasLockfile(packageManager) {\n    let lockfileName;\n\n    switch (packageManager) {\n      case workspace_schema_1.PackageManager.Yarn:\n        lockfileName = 'yarn.lock';\n        break;\n\n      case workspace_schema_1.PackageManager.Pnpm:\n        lockfileName = 'pnpm-lock.yaml';\n        break;\n\n      case workspace_schema_1.PackageManager.Npm:\n      default:\n        lockfileName = 'package-lock.json';\n        break;\n    }\n\n    return (0, fs_1.existsSync)((0, path_1.join)(this.context.root, lockfileName));\n  }\n\n  getConfiguredPackageManager() {\n    var _a;\n\n    const getPackageManager = source => {\n      if (source && (0, core_1.isJsonObject)(source)) {\n        const value = source['packageManager'];\n\n        if (typeof value === 'string') {\n          return value;\n        }\n      }\n\n      return undefined;\n    };\n\n    let result;\n    const {\n      workspace: localWorkspace,\n      globalConfiguration: globalWorkspace\n    } = this.context;\n\n    if (localWorkspace) {\n      const project = (0, config_1.getProjectByCwd)(localWorkspace);\n\n      if (project) {\n        result = getPackageManager((_a = localWorkspace.projects.get(project)) === null || _a === void 0 ? void 0 : _a.extensions['cli']);\n      }\n\n      result !== null && result !== void 0 ? result : result = getPackageManager(localWorkspace.extensions['cli']);\n    }\n\n    if (!result) {\n      result = getPackageManager(globalWorkspace.extensions['cli']);\n    }\n\n    return result;\n  }\n\n}\n\n__decorate([memoize_1.memoize], PackageManagerUtils.prototype, \"getVersion\", null);\n\n__decorate([memoize_1.memoize], PackageManagerUtils.prototype, \"getName\", null);\n\nexports.PackageManagerUtils = PackageManagerUtils;","map":{"version":3,"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","exports","value","PackageManagerUtils","core_1","require","child_process_1","fs_1","os_1","path_1","semver_1","workspace_schema_1","config_1","memoize_1","spinner_1","constructor","context","name","getName","version","getVersion","ensureCompatibility","PackageManager","Npm","valid","satisfies","console","warn","install","packageName","save","extraArgs","cwd","packageManagerArgs","getArguments","installArgs","push","saveDev","run","silent","installAll","installTemp","tempPath","promises","mkdtemp","join","realpathSync","tmpdir","process","on","rmSync","recursive","maxRetries","writeFile","JSON","stringify","description","repository","license","tempNodeModules","prefixPath","Yarn","prefix","noLockfile","success","Pnpm","args","options","spinner","Spinner","start","Promise","resolve","_a","_b","bufferedOutput","childProcess","spawn","stdio","shell","code","succeed","stop","forEach","stream","data","write","fail","stdout","stderr","execSync","encoding","env","NO_UPDATE_NOTIFIER","NPM_CONFIG_UPDATE_NOTIFIER","trim","undefined","packageManager","getConfiguredPackageManager","hasNpmLock","hasLockfile","hasYarnLock","hasPnpmLock","hasYarn","hasPnpm","lockfileName","existsSync","root","getPackageManager","source","isJsonObject","result","workspace","localWorkspace","globalConfiguration","globalWorkspace","project","getProjectByCwd","projects","get","extensions","memoize","prototype"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular/cli/src/utilities/package-manager.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PackageManagerUtils = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst child_process_1 = require(\"child_process\");\nconst fs_1 = require(\"fs\");\nconst os_1 = require(\"os\");\nconst path_1 = require(\"path\");\nconst semver_1 = require(\"semver\");\nconst workspace_schema_1 = require(\"../../lib/config/workspace-schema\");\nconst config_1 = require(\"./config\");\nconst memoize_1 = require(\"./memoize\");\nconst spinner_1 = require(\"./spinner\");\nclass PackageManagerUtils {\n    constructor(context) {\n        this.context = context;\n    }\n    /** Get the package manager name. */\n    get name() {\n        return this.getName();\n    }\n    /** Get the package manager version. */\n    get version() {\n        return this.getVersion(this.name);\n    }\n    /**\n     * Checks if the package manager is supported. If not, display a warning.\n     */\n    ensureCompatibility() {\n        if (this.name !== workspace_schema_1.PackageManager.Npm) {\n            return;\n        }\n        try {\n            const version = (0, semver_1.valid)(this.version);\n            if (!version) {\n                return;\n            }\n            if ((0, semver_1.satisfies)(version, '>=7 <7.5.6')) {\n                // eslint-disable-next-line no-console\n                console.warn(`npm version ${version} detected.` +\n                    ' When using npm 7 with the Angular CLI, npm version 7.5.6 or higher is recommended.');\n            }\n        }\n        catch {\n            // npm is not installed.\n        }\n    }\n    /** Install a single package. */\n    async install(packageName, save = true, extraArgs = [], cwd) {\n        const packageManagerArgs = this.getArguments();\n        const installArgs = [packageManagerArgs.install, packageName];\n        if (save === 'devDependencies') {\n            installArgs.push(packageManagerArgs.saveDev);\n        }\n        return this.run([...installArgs, ...extraArgs], { cwd, silent: true });\n    }\n    /** Install all packages. */\n    async installAll(extraArgs = [], cwd) {\n        const packageManagerArgs = this.getArguments();\n        const installArgs = [];\n        if (packageManagerArgs.installAll) {\n            installArgs.push(packageManagerArgs.installAll);\n        }\n        return this.run([...installArgs, ...extraArgs], { cwd, silent: true });\n    }\n    /** Install a single package temporary. */\n    async installTemp(packageName, extraArgs) {\n        const tempPath = await fs_1.promises.mkdtemp((0, path_1.join)((0, fs_1.realpathSync)((0, os_1.tmpdir)()), 'angular-cli-packages-'));\n        // clean up temp directory on process exit\n        process.on('exit', () => {\n            try {\n                (0, fs_1.rmSync)(tempPath, { recursive: true, maxRetries: 3 });\n            }\n            catch { }\n        });\n        // NPM will warn when a `package.json` is not found in the install directory\n        // Example:\n        // npm WARN enoent ENOENT: no such file or directory, open '/tmp/.ng-temp-packages-84Qi7y/package.json'\n        // npm WARN .ng-temp-packages-84Qi7y No description\n        // npm WARN .ng-temp-packages-84Qi7y No repository field.\n        // npm WARN .ng-temp-packages-84Qi7y No license field.\n        // While we can use `npm init -y` we will end up needing to update the 'package.json' anyways\n        // because of missing fields.\n        await fs_1.promises.writeFile((0, path_1.join)(tempPath, 'package.json'), JSON.stringify({\n            name: 'temp-cli-install',\n            description: 'temp-cli-install',\n            repository: 'temp-cli-install',\n            license: 'MIT',\n        }));\n        // setup prefix/global modules path\n        const packageManagerArgs = this.getArguments();\n        const tempNodeModules = (0, path_1.join)(tempPath, 'node_modules');\n        // Yarn will not append 'node_modules' to the path\n        const prefixPath = this.name === workspace_schema_1.PackageManager.Yarn ? tempNodeModules : tempPath;\n        const installArgs = [\n            ...(extraArgs !== null && extraArgs !== void 0 ? extraArgs : []),\n            `${packageManagerArgs.prefix}=\"${prefixPath}\"`,\n            packageManagerArgs.noLockfile,\n        ];\n        return {\n            success: await this.install(packageName, true, installArgs, tempPath),\n            tempNodeModules,\n        };\n    }\n    getArguments() {\n        switch (this.name) {\n            case workspace_schema_1.PackageManager.Yarn:\n                return {\n                    saveDev: '--dev',\n                    install: 'add',\n                    prefix: '--modules-folder',\n                    noLockfile: '--no-lockfile',\n                };\n            case workspace_schema_1.PackageManager.Pnpm:\n                return {\n                    saveDev: '--save-dev',\n                    install: 'add',\n                    installAll: 'install',\n                    prefix: '--prefix',\n                    noLockfile: '--no-lockfile',\n                };\n            default:\n                return {\n                    saveDev: '--save-dev',\n                    install: 'install',\n                    installAll: 'install',\n                    prefix: '--prefix',\n                    noLockfile: '--no-package-lock',\n                };\n        }\n    }\n    async run(args, options = {}) {\n        const { cwd = process.cwd(), silent = false } = options;\n        const spinner = new spinner_1.Spinner();\n        spinner.start('Installing packages...');\n        return new Promise((resolve) => {\n            var _a, _b;\n            const bufferedOutput = [];\n            const childProcess = (0, child_process_1.spawn)(this.name, args, {\n                // Always pipe stderr to allow for failures to be reported\n                stdio: silent ? ['ignore', 'ignore', 'pipe'] : 'pipe',\n                shell: true,\n                cwd,\n            }).on('close', (code) => {\n                if (code === 0) {\n                    spinner.succeed('Packages successfully installed.');\n                    resolve(true);\n                }\n                else {\n                    spinner.stop();\n                    bufferedOutput.forEach(({ stream, data }) => stream.write(data));\n                    spinner.fail('Packages installation failed, see above.');\n                    resolve(false);\n                }\n            });\n            (_a = childProcess.stdout) === null || _a === void 0 ? void 0 : _a.on('data', (data) => bufferedOutput.push({ stream: process.stdout, data: data }));\n            (_b = childProcess.stderr) === null || _b === void 0 ? void 0 : _b.on('data', (data) => bufferedOutput.push({ stream: process.stderr, data: data }));\n        });\n    }\n    getVersion(name) {\n        try {\n            return (0, child_process_1.execSync)(`${name} --version`, {\n                encoding: 'utf8',\n                stdio: ['ignore', 'pipe', 'ignore'],\n                env: {\n                    ...process.env,\n                    //  NPM updater notifier will prevents the child process from closing until it timeout after 3 minutes.\n                    NO_UPDATE_NOTIFIER: '1',\n                    NPM_CONFIG_UPDATE_NOTIFIER: 'false',\n                },\n            }).trim();\n        }\n        catch {\n            return undefined;\n        }\n    }\n    getName() {\n        const packageManager = this.getConfiguredPackageManager();\n        if (packageManager) {\n            return packageManager;\n        }\n        const hasNpmLock = this.hasLockfile(workspace_schema_1.PackageManager.Npm);\n        const hasYarnLock = this.hasLockfile(workspace_schema_1.PackageManager.Yarn);\n        const hasPnpmLock = this.hasLockfile(workspace_schema_1.PackageManager.Pnpm);\n        // PERF NOTE: `this.getVersion` spawns the package a the child_process which can take around ~300ms at times.\n        // Therefore, we should only call this method when needed. IE: don't call `this.getVersion(PackageManager.Pnpm)` unless truly needed.\n        // The result of this method is not stored in a variable because it's memoized.\n        if (hasNpmLock) {\n            // Has NPM lock file.\n            if (!hasYarnLock && !hasPnpmLock && this.getVersion(workspace_schema_1.PackageManager.Npm)) {\n                // Only NPM lock file and NPM binary is available.\n                return workspace_schema_1.PackageManager.Npm;\n            }\n        }\n        else {\n            // No NPM lock file.\n            if (hasYarnLock && this.getVersion(workspace_schema_1.PackageManager.Yarn)) {\n                // Yarn lock file and Yarn binary is available.\n                return workspace_schema_1.PackageManager.Yarn;\n            }\n            else if (hasPnpmLock && this.getVersion(workspace_schema_1.PackageManager.Pnpm)) {\n                // PNPM lock file and PNPM binary is available.\n                return workspace_schema_1.PackageManager.Pnpm;\n            }\n        }\n        if (!this.getVersion(workspace_schema_1.PackageManager.Npm)) {\n            // Doesn't have NPM installed.\n            const hasYarn = !!this.getVersion(workspace_schema_1.PackageManager.Yarn);\n            const hasPnpm = !!this.getVersion(workspace_schema_1.PackageManager.Pnpm);\n            if (hasYarn && !hasPnpm) {\n                return workspace_schema_1.PackageManager.Yarn;\n            }\n            else if (!hasYarn && hasPnpm) {\n                return workspace_schema_1.PackageManager.Pnpm;\n            }\n        }\n        // TODO: This should eventually inform the user of ambiguous package manager usage.\n        //       Potentially with a prompt to choose and optionally set as the default.\n        return workspace_schema_1.PackageManager.Npm;\n    }\n    hasLockfile(packageManager) {\n        let lockfileName;\n        switch (packageManager) {\n            case workspace_schema_1.PackageManager.Yarn:\n                lockfileName = 'yarn.lock';\n                break;\n            case workspace_schema_1.PackageManager.Pnpm:\n                lockfileName = 'pnpm-lock.yaml';\n                break;\n            case workspace_schema_1.PackageManager.Npm:\n            default:\n                lockfileName = 'package-lock.json';\n                break;\n        }\n        return (0, fs_1.existsSync)((0, path_1.join)(this.context.root, lockfileName));\n    }\n    getConfiguredPackageManager() {\n        var _a;\n        const getPackageManager = (source) => {\n            if (source && (0, core_1.isJsonObject)(source)) {\n                const value = source['packageManager'];\n                if (typeof value === 'string') {\n                    return value;\n                }\n            }\n            return undefined;\n        };\n        let result;\n        const { workspace: localWorkspace, globalConfiguration: globalWorkspace } = this.context;\n        if (localWorkspace) {\n            const project = (0, config_1.getProjectByCwd)(localWorkspace);\n            if (project) {\n                result = getPackageManager((_a = localWorkspace.projects.get(project)) === null || _a === void 0 ? void 0 : _a.extensions['cli']);\n            }\n            result !== null && result !== void 0 ? result : (result = getPackageManager(localWorkspace.extensions['cli']));\n        }\n        if (!result) {\n            result = getPackageManager(globalWorkspace.extensions['cli']);\n        }\n        return result;\n    }\n}\n__decorate([\n    memoize_1.memoize\n], PackageManagerUtils.prototype, \"getVersion\", null);\n__decorate([\n    memoize_1.memoize\n], PackageManagerUtils.prototype, \"getName\", null);\nexports.PackageManagerUtils = PackageManagerUtils;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}