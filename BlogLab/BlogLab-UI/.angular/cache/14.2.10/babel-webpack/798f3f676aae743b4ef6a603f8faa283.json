{"ast":null,"code":"'use strict';\n\nconst MuteStream = require('mute-stream');\n\nconst readline = require('readline');\n/**\n * Base interface class other can inherits from\n */\n\n\nclass UI {\n  constructor(opt) {\n    // Instantiate the Readline interface\n    // @Note: Don't reassign if already present (allow test to override the Stream)\n    if (!this.rl) {\n      this.rl = readline.createInterface(setupReadlineOptions(opt));\n    }\n\n    this.rl.resume();\n    this.onForceClose = this.onForceClose.bind(this); // Make sure new prompt start on a newline when closing\n\n    process.on('exit', this.onForceClose); // Terminate process on SIGINT (which will call process.on('exit') in return)\n\n    this.rl.on('SIGINT', this.onForceClose);\n  }\n  /**\n   * Handle the ^C exit\n   * @return {null}\n   */\n\n\n  onForceClose() {\n    this.close();\n    process.kill(process.pid, 'SIGINT');\n    console.log('');\n  }\n  /**\n   * Close the interface and cleanup listeners\n   */\n\n\n  close() {\n    // Remove events listeners\n    this.rl.removeListener('SIGINT', this.onForceClose);\n    process.removeListener('exit', this.onForceClose);\n    this.rl.output.unmute();\n\n    if (this.activePrompt && typeof this.activePrompt.close === 'function') {\n      this.activePrompt.close();\n    } // Close the readline\n\n\n    this.rl.output.end();\n    this.rl.pause();\n    this.rl.close();\n  }\n\n}\n\nfunction setupReadlineOptions(opt = {}) {\n  // Inquirer 8.x:\n  // opt.skipTTYChecks = opt.skipTTYChecks === undefined ? opt.input !== undefined : opt.skipTTYChecks;\n  opt.skipTTYChecks = opt.skipTTYChecks === undefined ? true : opt.skipTTYChecks; // Default `input` to stdin\n\n  const input = opt.input || process.stdin; // Check if prompt is being called in TTY environment\n  // If it isn't return a failed promise\n\n  if (!opt.skipTTYChecks && !input.isTTY) {\n    const nonTtyError = new Error('Prompts can not be meaningfully rendered in non-TTY environments');\n    nonTtyError.isTtyError = true;\n    throw nonTtyError;\n  } // Add mute capabilities to the output\n\n\n  const ms = new MuteStream();\n  ms.pipe(opt.output || process.stdout);\n  const output = ms;\n  return {\n    terminal: true,\n    ...opt,\n    input,\n    output\n  };\n}\n\nmodule.exports = UI;","map":{"version":3,"names":["MuteStream","require","readline","UI","constructor","opt","rl","createInterface","setupReadlineOptions","resume","onForceClose","bind","process","on","close","kill","pid","console","log","removeListener","output","unmute","activePrompt","end","pause","skipTTYChecks","undefined","input","stdin","isTTY","nonTtyError","Error","isTtyError","ms","pipe","stdout","terminal","module","exports"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/inquirer/lib/ui/baseUI.js"],"sourcesContent":["'use strict';\nconst MuteStream = require('mute-stream');\nconst readline = require('readline');\n\n/**\n * Base interface class other can inherits from\n */\n\nclass UI {\n  constructor(opt) {\n    // Instantiate the Readline interface\n    // @Note: Don't reassign if already present (allow test to override the Stream)\n    if (!this.rl) {\n      this.rl = readline.createInterface(setupReadlineOptions(opt));\n    }\n\n    this.rl.resume();\n\n    this.onForceClose = this.onForceClose.bind(this);\n\n    // Make sure new prompt start on a newline when closing\n    process.on('exit', this.onForceClose);\n\n    // Terminate process on SIGINT (which will call process.on('exit') in return)\n    this.rl.on('SIGINT', this.onForceClose);\n  }\n\n  /**\n   * Handle the ^C exit\n   * @return {null}\n   */\n\n  onForceClose() {\n    this.close();\n    process.kill(process.pid, 'SIGINT');\n    console.log('');\n  }\n\n  /**\n   * Close the interface and cleanup listeners\n   */\n\n  close() {\n    // Remove events listeners\n    this.rl.removeListener('SIGINT', this.onForceClose);\n    process.removeListener('exit', this.onForceClose);\n\n    this.rl.output.unmute();\n\n    if (this.activePrompt && typeof this.activePrompt.close === 'function') {\n      this.activePrompt.close();\n    }\n\n    // Close the readline\n    this.rl.output.end();\n    this.rl.pause();\n    this.rl.close();\n  }\n}\n\nfunction setupReadlineOptions(opt = {}) {\n  // Inquirer 8.x:\n  // opt.skipTTYChecks = opt.skipTTYChecks === undefined ? opt.input !== undefined : opt.skipTTYChecks;\n  opt.skipTTYChecks = opt.skipTTYChecks === undefined ? true : opt.skipTTYChecks;\n\n  // Default `input` to stdin\n  const input = opt.input || process.stdin;\n\n  // Check if prompt is being called in TTY environment\n  // If it isn't return a failed promise\n  if (!opt.skipTTYChecks && !input.isTTY) {\n    const nonTtyError = new Error(\n      'Prompts can not be meaningfully rendered in non-TTY environments'\n    );\n    nonTtyError.isTtyError = true;\n    throw nonTtyError;\n  }\n\n  // Add mute capabilities to the output\n  const ms = new MuteStream();\n  ms.pipe(opt.output || process.stdout);\n  const output = ms;\n\n  return {\n    terminal: true,\n    ...opt,\n    input,\n    output,\n  };\n}\n\nmodule.exports = UI;\n"],"mappings":"AAAA;;AACA,MAAMA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;AAEA;AACA;AACA;;;AAEA,MAAME,EAAN,CAAS;EACPC,WAAW,CAACC,GAAD,EAAM;IACf;IACA;IACA,IAAI,CAAC,KAAKC,EAAV,EAAc;MACZ,KAAKA,EAAL,GAAUJ,QAAQ,CAACK,eAAT,CAAyBC,oBAAoB,CAACH,GAAD,CAA7C,CAAV;IACD;;IAED,KAAKC,EAAL,CAAQG,MAAR;IAEA,KAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB,CATe,CAWf;;IACAC,OAAO,CAACC,EAAR,CAAW,MAAX,EAAmB,KAAKH,YAAxB,EAZe,CAcf;;IACA,KAAKJ,EAAL,CAAQO,EAAR,CAAW,QAAX,EAAqB,KAAKH,YAA1B;EACD;EAED;AACF;AACA;AACA;;;EAEEA,YAAY,GAAG;IACb,KAAKI,KAAL;IACAF,OAAO,CAACG,IAAR,CAAaH,OAAO,CAACI,GAArB,EAA0B,QAA1B;IACAC,OAAO,CAACC,GAAR,CAAY,EAAZ;EACD;EAED;AACF;AACA;;;EAEEJ,KAAK,GAAG;IACN;IACA,KAAKR,EAAL,CAAQa,cAAR,CAAuB,QAAvB,EAAiC,KAAKT,YAAtC;IACAE,OAAO,CAACO,cAAR,CAAuB,MAAvB,EAA+B,KAAKT,YAApC;IAEA,KAAKJ,EAAL,CAAQc,MAAR,CAAeC,MAAf;;IAEA,IAAI,KAAKC,YAAL,IAAqB,OAAO,KAAKA,YAAL,CAAkBR,KAAzB,KAAmC,UAA5D,EAAwE;MACtE,KAAKQ,YAAL,CAAkBR,KAAlB;IACD,CATK,CAWN;;;IACA,KAAKR,EAAL,CAAQc,MAAR,CAAeG,GAAf;IACA,KAAKjB,EAAL,CAAQkB,KAAR;IACA,KAAKlB,EAAL,CAAQQ,KAAR;EACD;;AAjDM;;AAoDT,SAASN,oBAAT,CAA8BH,GAAG,GAAG,EAApC,EAAwC;EACtC;EACA;EACAA,GAAG,CAACoB,aAAJ,GAAoBpB,GAAG,CAACoB,aAAJ,KAAsBC,SAAtB,GAAkC,IAAlC,GAAyCrB,GAAG,CAACoB,aAAjE,CAHsC,CAKtC;;EACA,MAAME,KAAK,GAAGtB,GAAG,CAACsB,KAAJ,IAAaf,OAAO,CAACgB,KAAnC,CANsC,CAQtC;EACA;;EACA,IAAI,CAACvB,GAAG,CAACoB,aAAL,IAAsB,CAACE,KAAK,CAACE,KAAjC,EAAwC;IACtC,MAAMC,WAAW,GAAG,IAAIC,KAAJ,CAClB,kEADkB,CAApB;IAGAD,WAAW,CAACE,UAAZ,GAAyB,IAAzB;IACA,MAAMF,WAAN;EACD,CAhBqC,CAkBtC;;;EACA,MAAMG,EAAE,GAAG,IAAIjC,UAAJ,EAAX;EACAiC,EAAE,CAACC,IAAH,CAAQ7B,GAAG,CAACe,MAAJ,IAAcR,OAAO,CAACuB,MAA9B;EACA,MAAMf,MAAM,GAAGa,EAAf;EAEA,OAAO;IACLG,QAAQ,EAAE,IADL;IAEL,GAAG/B,GAFE;IAGLsB,KAHK;IAILP;EAJK,CAAP;AAMD;;AAEDiB,MAAM,CAACC,OAAP,GAAiBnC,EAAjB"},"metadata":{},"sourceType":"script"}