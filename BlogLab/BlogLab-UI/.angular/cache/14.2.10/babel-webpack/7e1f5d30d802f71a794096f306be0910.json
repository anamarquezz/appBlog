{"ast":null,"code":"const Fetcher = require('./fetcher.js');\n\nconst FileFetcher = require('./file.js');\n\nconst Minipass = require('minipass');\n\nconst tarCreateOptions = require('./util/tar-create-options.js');\n\nconst packlist = require('npm-packlist');\n\nconst tar = require('tar');\n\nconst _prepareDir = Symbol('_prepareDir');\n\nconst {\n  resolve\n} = require('path');\n\nconst _readPackageJson = Symbol.for('package.Fetcher._readPackageJson');\n\nconst runScript = require('@npmcli/run-script');\n\nconst _tarballFromResolved = Symbol.for('pacote.Fetcher._tarballFromResolved');\n\nclass DirFetcher extends Fetcher {\n  constructor(spec, opts) {\n    super(spec, opts); // just the fully resolved filename\n\n    this.resolved = this.spec.fetchSpec;\n  } // exposes tarCreateOptions as public API\n\n\n  static tarCreateOptions(manifest) {\n    return tarCreateOptions(manifest);\n  }\n\n  get types() {\n    return ['directory'];\n  }\n\n  [_prepareDir]() {\n    return this.manifest().then(mani => {\n      if (!mani.scripts || !mani.scripts.prepare) {\n        return;\n      } // we *only* run prepare.\n      // pre/post-pack is run by the npm CLI for publish and pack,\n      // but this function is *also* run when installing git deps\n\n\n      const stdio = this.opts.foregroundScripts ? 'inherit' : 'pipe'; // hide the banner if silent opt is passed in, or if prepare running\n      // in the background.\n\n      const banner = this.opts.silent ? false : stdio === 'inherit';\n      return runScript({\n        pkg: mani,\n        event: 'prepare',\n        path: this.resolved,\n        stdioString: true,\n        stdio,\n        banner,\n        env: {\n          npm_package_resolved: this.resolved,\n          npm_package_integrity: this.integrity,\n          npm_package_json: resolve(this.resolved, 'package.json')\n        }\n      });\n    });\n  }\n\n  [_tarballFromResolved]() {\n    const stream = new Minipass();\n    stream.resolved = this.resolved;\n    stream.integrity = this.integrity;\n    const {\n      prefix,\n      workspaces\n    } = this.opts; // run the prepare script, get the list of files, and tar it up\n    // pipe to the stream, and proxy errors the chain.\n\n    this[_prepareDir]().then(() => packlist({\n      path: this.resolved,\n      prefix,\n      workspaces\n    })).then(files => tar.c(tarCreateOptions(this.package), files).on('error', er => stream.emit('error', er)).pipe(stream)).catch(er => stream.emit('error', er));\n\n    return stream;\n  }\n\n  manifest() {\n    if (this.package) {\n      return Promise.resolve(this.package);\n    }\n\n    return this[_readPackageJson](this.resolved + '/package.json').then(mani => this.package = { ...mani,\n      _integrity: this.integrity && String(this.integrity),\n      _resolved: this.resolved,\n      _from: this.from\n    });\n  }\n\n  packument() {\n    return FileFetcher.prototype.packument.apply(this);\n  }\n\n}\n\nmodule.exports = DirFetcher;","map":{"version":3,"names":["Fetcher","require","FileFetcher","Minipass","tarCreateOptions","packlist","tar","_prepareDir","Symbol","resolve","_readPackageJson","for","runScript","_tarballFromResolved","DirFetcher","constructor","spec","opts","resolved","fetchSpec","manifest","types","then","mani","scripts","prepare","stdio","foregroundScripts","banner","silent","pkg","event","path","stdioString","env","npm_package_resolved","npm_package_integrity","integrity","npm_package_json","stream","prefix","workspaces","files","c","package","on","er","emit","pipe","catch","Promise","_integrity","String","_resolved","_from","from","packument","prototype","apply","module","exports"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/pacote/lib/dir.js"],"sourcesContent":["const Fetcher = require('./fetcher.js')\nconst FileFetcher = require('./file.js')\nconst Minipass = require('minipass')\nconst tarCreateOptions = require('./util/tar-create-options.js')\nconst packlist = require('npm-packlist')\nconst tar = require('tar')\nconst _prepareDir = Symbol('_prepareDir')\nconst { resolve } = require('path')\nconst _readPackageJson = Symbol.for('package.Fetcher._readPackageJson')\n\nconst runScript = require('@npmcli/run-script')\n\nconst _tarballFromResolved = Symbol.for('pacote.Fetcher._tarballFromResolved')\nclass DirFetcher extends Fetcher {\n  constructor (spec, opts) {\n    super(spec, opts)\n    // just the fully resolved filename\n    this.resolved = this.spec.fetchSpec\n  }\n\n  // exposes tarCreateOptions as public API\n  static tarCreateOptions (manifest) {\n    return tarCreateOptions(manifest)\n  }\n\n  get types () {\n    return ['directory']\n  }\n\n  [_prepareDir] () {\n    return this.manifest().then(mani => {\n      if (!mani.scripts || !mani.scripts.prepare) {\n        return\n      }\n\n      // we *only* run prepare.\n      // pre/post-pack is run by the npm CLI for publish and pack,\n      // but this function is *also* run when installing git deps\n      const stdio = this.opts.foregroundScripts ? 'inherit' : 'pipe'\n\n      // hide the banner if silent opt is passed in, or if prepare running\n      // in the background.\n      const banner = this.opts.silent ? false : stdio === 'inherit'\n\n      return runScript({\n        pkg: mani,\n        event: 'prepare',\n        path: this.resolved,\n        stdioString: true,\n        stdio,\n        banner,\n        env: {\n          npm_package_resolved: this.resolved,\n          npm_package_integrity: this.integrity,\n          npm_package_json: resolve(this.resolved, 'package.json'),\n        },\n      })\n    })\n  }\n\n  [_tarballFromResolved] () {\n    const stream = new Minipass()\n    stream.resolved = this.resolved\n    stream.integrity = this.integrity\n\n    const { prefix, workspaces } = this.opts\n\n    // run the prepare script, get the list of files, and tar it up\n    // pipe to the stream, and proxy errors the chain.\n    this[_prepareDir]()\n      .then(() => packlist({ path: this.resolved, prefix, workspaces }))\n      .then(files => tar.c(tarCreateOptions(this.package), files)\n        .on('error', er => stream.emit('error', er)).pipe(stream))\n      .catch(er => stream.emit('error', er))\n    return stream\n  }\n\n  manifest () {\n    if (this.package) {\n      return Promise.resolve(this.package)\n    }\n\n    return this[_readPackageJson](this.resolved + '/package.json')\n      .then(mani => this.package = {\n        ...mani,\n        _integrity: this.integrity && String(this.integrity),\n        _resolved: this.resolved,\n        _from: this.from,\n      })\n  }\n\n  packument () {\n    return FileFetcher.prototype.packument.apply(this)\n  }\n}\nmodule.exports = DirFetcher\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}