{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NodeWorkflow = void 0;\n\nconst core_1 = require(\"@angular-devkit/core\");\n\nconst node_1 = require(\"@angular-devkit/core/node\");\n\nconst schematics_1 = require(\"@angular-devkit/schematics\");\n\nconst node_2 = require(\"../../tasks/node\");\n\nconst node_module_engine_host_1 = require(\"../node-module-engine-host\");\n\nconst schema_option_transform_1 = require(\"../schema-option-transform\");\n/**\n * A workflow specifically for Node tools.\n */\n\n\nclass NodeWorkflow extends schematics_1.workflow.BaseWorkflow {\n  constructor(hostOrRoot, options) {\n    var _a;\n\n    let host;\n    let root;\n\n    if (typeof hostOrRoot === 'string') {\n      root = (0, core_1.normalize)(hostOrRoot);\n      host = new core_1.virtualFs.ScopedHost(new node_1.NodeJsSyncHost(), root);\n    } else {\n      host = hostOrRoot;\n      root = options.root;\n    }\n\n    const engineHost = ((_a = options.engineHostCreator) === null || _a === void 0 ? void 0 : _a.call(options, options)) || new node_module_engine_host_1.NodeModulesEngineHost(options.resolvePaths);\n    super({\n      host,\n      engineHost,\n      force: options.force,\n      dryRun: options.dryRun,\n      registry: options.registry\n    });\n    engineHost.registerTaskExecutor(node_2.BuiltinTaskExecutor.NodePackage, {\n      allowPackageManagerOverride: true,\n      packageManager: options.packageManager,\n      force: options.packageManagerForce,\n      rootDirectory: root && (0, core_1.getSystemPath)(root),\n      registry: options.packageRegistry\n    });\n    engineHost.registerTaskExecutor(node_2.BuiltinTaskExecutor.RepositoryInitializer, {\n      rootDirectory: root && (0, core_1.getSystemPath)(root)\n    });\n    engineHost.registerTaskExecutor(node_2.BuiltinTaskExecutor.RunSchematic);\n\n    if (options.optionTransforms) {\n      for (const transform of options.optionTransforms) {\n        engineHost.registerOptionsTransform(transform);\n      }\n    }\n\n    if (options.schemaValidation) {\n      engineHost.registerOptionsTransform((0, schema_option_transform_1.validateOptionsWithSchema)(this.registry));\n    }\n\n    this._context = [];\n  }\n\n  get engine() {\n    return this._engine;\n  }\n\n  get engineHost() {\n    return this._engineHost;\n  }\n\n}\n\nexports.NodeWorkflow = NodeWorkflow;","map":{"version":3,"names":["Object","defineProperty","exports","value","NodeWorkflow","core_1","require","node_1","schematics_1","node_2","node_module_engine_host_1","schema_option_transform_1","workflow","BaseWorkflow","constructor","hostOrRoot","options","_a","host","root","normalize","virtualFs","ScopedHost","NodeJsSyncHost","engineHost","engineHostCreator","call","NodeModulesEngineHost","resolvePaths","force","dryRun","registry","registerTaskExecutor","BuiltinTaskExecutor","NodePackage","allowPackageManagerOverride","packageManager","packageManagerForce","rootDirectory","getSystemPath","packageRegistry","RepositoryInitializer","RunSchematic","optionTransforms","transform","registerOptionsTransform","schemaValidation","validateOptionsWithSchema","_context","engine","_engine","_engineHost"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/schematics/tools/workflow/node-workflow.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeWorkflow = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst node_1 = require(\"@angular-devkit/core/node\");\nconst schematics_1 = require(\"@angular-devkit/schematics\");\nconst node_2 = require(\"../../tasks/node\");\nconst node_module_engine_host_1 = require(\"../node-module-engine-host\");\nconst schema_option_transform_1 = require(\"../schema-option-transform\");\n/**\n * A workflow specifically for Node tools.\n */\nclass NodeWorkflow extends schematics_1.workflow.BaseWorkflow {\n    constructor(hostOrRoot, options) {\n        var _a;\n        let host;\n        let root;\n        if (typeof hostOrRoot === 'string') {\n            root = (0, core_1.normalize)(hostOrRoot);\n            host = new core_1.virtualFs.ScopedHost(new node_1.NodeJsSyncHost(), root);\n        }\n        else {\n            host = hostOrRoot;\n            root = options.root;\n        }\n        const engineHost = ((_a = options.engineHostCreator) === null || _a === void 0 ? void 0 : _a.call(options, options)) || new node_module_engine_host_1.NodeModulesEngineHost(options.resolvePaths);\n        super({\n            host,\n            engineHost,\n            force: options.force,\n            dryRun: options.dryRun,\n            registry: options.registry,\n        });\n        engineHost.registerTaskExecutor(node_2.BuiltinTaskExecutor.NodePackage, {\n            allowPackageManagerOverride: true,\n            packageManager: options.packageManager,\n            force: options.packageManagerForce,\n            rootDirectory: root && (0, core_1.getSystemPath)(root),\n            registry: options.packageRegistry,\n        });\n        engineHost.registerTaskExecutor(node_2.BuiltinTaskExecutor.RepositoryInitializer, {\n            rootDirectory: root && (0, core_1.getSystemPath)(root),\n        });\n        engineHost.registerTaskExecutor(node_2.BuiltinTaskExecutor.RunSchematic);\n        if (options.optionTransforms) {\n            for (const transform of options.optionTransforms) {\n                engineHost.registerOptionsTransform(transform);\n            }\n        }\n        if (options.schemaValidation) {\n            engineHost.registerOptionsTransform((0, schema_option_transform_1.validateOptionsWithSchema)(this.registry));\n        }\n        this._context = [];\n    }\n    get engine() {\n        return this._engine;\n    }\n    get engineHost() {\n        return this._engineHost;\n    }\n}\nexports.NodeWorkflow = NodeWorkflow;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,sBAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,2BAAD,CAAtB;;AACA,MAAME,YAAY,GAAGF,OAAO,CAAC,4BAAD,CAA5B;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,kBAAD,CAAtB;;AACA,MAAMI,yBAAyB,GAAGJ,OAAO,CAAC,4BAAD,CAAzC;;AACA,MAAMK,yBAAyB,GAAGL,OAAO,CAAC,4BAAD,CAAzC;AACA;AACA;AACA;;;AACA,MAAMF,YAAN,SAA2BI,YAAY,CAACI,QAAb,CAAsBC,YAAjD,CAA8D;EAC1DC,WAAW,CAACC,UAAD,EAAaC,OAAb,EAAsB;IAC7B,IAAIC,EAAJ;;IACA,IAAIC,IAAJ;IACA,IAAIC,IAAJ;;IACA,IAAI,OAAOJ,UAAP,KAAsB,QAA1B,EAAoC;MAChCI,IAAI,GAAG,CAAC,GAAGd,MAAM,CAACe,SAAX,EAAsBL,UAAtB,CAAP;MACAG,IAAI,GAAG,IAAIb,MAAM,CAACgB,SAAP,CAAiBC,UAArB,CAAgC,IAAIf,MAAM,CAACgB,cAAX,EAAhC,EAA6DJ,IAA7D,CAAP;IACH,CAHD,MAIK;MACDD,IAAI,GAAGH,UAAP;MACAI,IAAI,GAAGH,OAAO,CAACG,IAAf;IACH;;IACD,MAAMK,UAAU,GAAG,CAAC,CAACP,EAAE,GAAGD,OAAO,CAACS,iBAAd,MAAqC,IAArC,IAA6CR,EAAE,KAAK,KAAK,CAAzD,GAA6D,KAAK,CAAlE,GAAsEA,EAAE,CAACS,IAAH,CAAQV,OAAR,EAAiBA,OAAjB,CAAvE,KAAqG,IAAIN,yBAAyB,CAACiB,qBAA9B,CAAoDX,OAAO,CAACY,YAA5D,CAAxH;IACA,MAAM;MACFV,IADE;MAEFM,UAFE;MAGFK,KAAK,EAAEb,OAAO,CAACa,KAHb;MAIFC,MAAM,EAAEd,OAAO,CAACc,MAJd;MAKFC,QAAQ,EAAEf,OAAO,CAACe;IALhB,CAAN;IAOAP,UAAU,CAACQ,oBAAX,CAAgCvB,MAAM,CAACwB,mBAAP,CAA2BC,WAA3D,EAAwE;MACpEC,2BAA2B,EAAE,IADuC;MAEpEC,cAAc,EAAEpB,OAAO,CAACoB,cAF4C;MAGpEP,KAAK,EAAEb,OAAO,CAACqB,mBAHqD;MAIpEC,aAAa,EAAEnB,IAAI,IAAI,CAAC,GAAGd,MAAM,CAACkC,aAAX,EAA0BpB,IAA1B,CAJ6C;MAKpEY,QAAQ,EAAEf,OAAO,CAACwB;IALkD,CAAxE;IAOAhB,UAAU,CAACQ,oBAAX,CAAgCvB,MAAM,CAACwB,mBAAP,CAA2BQ,qBAA3D,EAAkF;MAC9EH,aAAa,EAAEnB,IAAI,IAAI,CAAC,GAAGd,MAAM,CAACkC,aAAX,EAA0BpB,IAA1B;IADuD,CAAlF;IAGAK,UAAU,CAACQ,oBAAX,CAAgCvB,MAAM,CAACwB,mBAAP,CAA2BS,YAA3D;;IACA,IAAI1B,OAAO,CAAC2B,gBAAZ,EAA8B;MAC1B,KAAK,MAAMC,SAAX,IAAwB5B,OAAO,CAAC2B,gBAAhC,EAAkD;QAC9CnB,UAAU,CAACqB,wBAAX,CAAoCD,SAApC;MACH;IACJ;;IACD,IAAI5B,OAAO,CAAC8B,gBAAZ,EAA8B;MAC1BtB,UAAU,CAACqB,wBAAX,CAAoC,CAAC,GAAGlC,yBAAyB,CAACoC,yBAA9B,EAAyD,KAAKhB,QAA9D,CAApC;IACH;;IACD,KAAKiB,QAAL,GAAgB,EAAhB;EACH;;EACS,IAANC,MAAM,GAAG;IACT,OAAO,KAAKC,OAAZ;EACH;;EACa,IAAV1B,UAAU,GAAG;IACb,OAAO,KAAK2B,WAAZ;EACH;;AA/CyD;;AAiD9DjD,OAAO,CAACE,YAAR,GAAuBA,YAAvB"},"metadata":{},"sourceType":"script"}