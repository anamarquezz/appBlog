{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getCacheConfig = exports.updateCacheConfig = void 0;\n\nconst core_1 = require(\"@angular-devkit/core\");\n\nconst path_1 = require(\"path\");\n\nconst workspace_schema_1 = require(\"../../../lib/config/workspace-schema\");\n\nfunction updateCacheConfig(workspace, key, value) {\n  var _a, _b;\n\n  var _c;\n\n  const cli = (_a = (_c = workspace.extensions)['cli']) !== null && _a !== void 0 ? _a : _c['cli'] = {};\n  const cache = (_b = cli['cache']) !== null && _b !== void 0 ? _b : cli['cache'] = {};\n  cache[key] = value;\n  return workspace.save();\n}\n\nexports.updateCacheConfig = updateCacheConfig;\n\nfunction getCacheConfig(workspace) {\n  if (!workspace) {\n    throw new Error(`Cannot retrieve cache configuration as workspace is not defined.`);\n  }\n\n  const defaultSettings = {\n    path: (0, path_1.resolve)(workspace.basePath, '.angular/cache'),\n    environment: workspace_schema_1.Environment.Local,\n    enabled: true\n  };\n  const cliSetting = workspace.extensions['cli'];\n\n  if (!cliSetting || !(0, core_1.isJsonObject)(cliSetting)) {\n    return defaultSettings;\n  }\n\n  const cacheSettings = cliSetting['cache'];\n\n  if (!(0, core_1.isJsonObject)(cacheSettings)) {\n    return defaultSettings;\n  }\n\n  const {\n    path = defaultSettings.path,\n    environment = defaultSettings.environment,\n    enabled = defaultSettings.enabled // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n  } = cacheSettings;\n  return {\n    path: (0, path_1.resolve)(workspace.basePath, path),\n    environment,\n    enabled\n  };\n}\n\nexports.getCacheConfig = getCacheConfig;","map":{"version":3,"names":["Object","defineProperty","exports","value","getCacheConfig","updateCacheConfig","core_1","require","path_1","workspace_schema_1","workspace","key","_a","_b","_c","cli","extensions","cache","save","Error","defaultSettings","path","resolve","basePath","environment","Environment","Local","enabled","cliSetting","isJsonObject","cacheSettings"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular/cli/src/commands/cache/utilities.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCacheConfig = exports.updateCacheConfig = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst path_1 = require(\"path\");\nconst workspace_schema_1 = require(\"../../../lib/config/workspace-schema\");\nfunction updateCacheConfig(workspace, key, value) {\n    var _a, _b;\n    var _c;\n    const cli = ((_a = (_c = workspace.extensions)['cli']) !== null && _a !== void 0 ? _a : (_c['cli'] = {}));\n    const cache = ((_b = cli['cache']) !== null && _b !== void 0 ? _b : (cli['cache'] = {}));\n    cache[key] = value;\n    return workspace.save();\n}\nexports.updateCacheConfig = updateCacheConfig;\nfunction getCacheConfig(workspace) {\n    if (!workspace) {\n        throw new Error(`Cannot retrieve cache configuration as workspace is not defined.`);\n    }\n    const defaultSettings = {\n        path: (0, path_1.resolve)(workspace.basePath, '.angular/cache'),\n        environment: workspace_schema_1.Environment.Local,\n        enabled: true,\n    };\n    const cliSetting = workspace.extensions['cli'];\n    if (!cliSetting || !(0, core_1.isJsonObject)(cliSetting)) {\n        return defaultSettings;\n    }\n    const cacheSettings = cliSetting['cache'];\n    if (!(0, core_1.isJsonObject)(cacheSettings)) {\n        return defaultSettings;\n    }\n    const { path = defaultSettings.path, environment = defaultSettings.environment, enabled = defaultSettings.enabled,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n     } = cacheSettings;\n    return {\n        path: (0, path_1.resolve)(workspace.basePath, path),\n        environment,\n        enabled,\n    };\n}\nexports.getCacheConfig = getCacheConfig;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,cAAR,GAAyBF,OAAO,CAACG,iBAAR,GAA4B,KAAK,CAA1D;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,sBAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,MAAD,CAAtB;;AACA,MAAME,kBAAkB,GAAGF,OAAO,CAAC,sCAAD,CAAlC;;AACA,SAASF,iBAAT,CAA2BK,SAA3B,EAAsCC,GAAtC,EAA2CR,KAA3C,EAAkD;EAC9C,IAAIS,EAAJ,EAAQC,EAAR;;EACA,IAAIC,EAAJ;;EACA,MAAMC,GAAG,GAAI,CAACH,EAAE,GAAG,CAACE,EAAE,GAAGJ,SAAS,CAACM,UAAhB,EAA4B,KAA5B,CAAN,MAA8C,IAA9C,IAAsDJ,EAAE,KAAK,KAAK,CAAlE,GAAsEA,EAAtE,GAA4EE,EAAE,CAAC,KAAD,CAAF,GAAY,EAArG;EACA,MAAMG,KAAK,GAAI,CAACJ,EAAE,GAAGE,GAAG,CAAC,OAAD,CAAT,MAAwB,IAAxB,IAAgCF,EAAE,KAAK,KAAK,CAA5C,GAAgDA,EAAhD,GAAsDE,GAAG,CAAC,OAAD,CAAH,GAAe,EAApF;EACAE,KAAK,CAACN,GAAD,CAAL,GAAaR,KAAb;EACA,OAAOO,SAAS,CAACQ,IAAV,EAAP;AACH;;AACDhB,OAAO,CAACG,iBAAR,GAA4BA,iBAA5B;;AACA,SAASD,cAAT,CAAwBM,SAAxB,EAAmC;EAC/B,IAAI,CAACA,SAAL,EAAgB;IACZ,MAAM,IAAIS,KAAJ,CAAW,kEAAX,CAAN;EACH;;EACD,MAAMC,eAAe,GAAG;IACpBC,IAAI,EAAE,CAAC,GAAGb,MAAM,CAACc,OAAX,EAAoBZ,SAAS,CAACa,QAA9B,EAAwC,gBAAxC,CADc;IAEpBC,WAAW,EAAEf,kBAAkB,CAACgB,WAAnB,CAA+BC,KAFxB;IAGpBC,OAAO,EAAE;EAHW,CAAxB;EAKA,MAAMC,UAAU,GAAGlB,SAAS,CAACM,UAAV,CAAqB,KAArB,CAAnB;;EACA,IAAI,CAACY,UAAD,IAAe,CAAC,CAAC,GAAGtB,MAAM,CAACuB,YAAX,EAAyBD,UAAzB,CAApB,EAA0D;IACtD,OAAOR,eAAP;EACH;;EACD,MAAMU,aAAa,GAAGF,UAAU,CAAC,OAAD,CAAhC;;EACA,IAAI,CAAC,CAAC,GAAGtB,MAAM,CAACuB,YAAX,EAAyBC,aAAzB,CAAL,EAA8C;IAC1C,OAAOV,eAAP;EACH;;EACD,MAAM;IAAEC,IAAI,GAAGD,eAAe,CAACC,IAAzB;IAA+BG,WAAW,GAAGJ,eAAe,CAACI,WAA7D;IAA0EG,OAAO,GAAGP,eAAe,CAACO,OAApG,CACN;;EADM,IAEDG,aAFL;EAGA,OAAO;IACHT,IAAI,EAAE,CAAC,GAAGb,MAAM,CAACc,OAAX,EAAoBZ,SAAS,CAACa,QAA9B,EAAwCF,IAAxC,CADH;IAEHG,WAFG;IAGHG;EAHG,CAAP;AAKH;;AACDzB,OAAO,CAACE,cAAR,GAAyBA,cAAzB"},"metadata":{},"sourceType":"script"}