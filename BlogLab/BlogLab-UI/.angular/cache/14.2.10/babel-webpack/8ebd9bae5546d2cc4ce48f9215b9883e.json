{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PatternMatchingHost = void 0;\n\nconst resolver_1 = require(\"./resolver\");\n/**\n */\n\n\nclass PatternMatchingHost extends resolver_1.ResolverHost {\n  constructor() {\n    super(...arguments);\n    this._patterns = new Map();\n  }\n\n  addPattern(pattern, replacementFn) {\n    // Simple GLOB pattern replacement.\n    const reString = '^(' + (Array.isArray(pattern) ? pattern : [pattern]).map(ex => '(' + ex.split(/[/\\\\]/g).map(f => f.replace(/[-[\\]{}()+?.^$|]/g, '\\\\$&').replace(/^\\*\\*/g, '(.+?)?').replace(/\\*/g, '[^/\\\\\\\\]*')).join('[/\\\\\\\\]') + ')').join('|') + ')($|/|\\\\\\\\)';\n\n    this._patterns.set(new RegExp(reString), replacementFn);\n  }\n\n  _resolve(path) {\n    let newPath = path;\n\n    this._patterns.forEach((fn, re) => {\n      if (re.test(path)) {\n        newPath = fn(newPath);\n      }\n    });\n\n    return newPath;\n  }\n\n}\n\nexports.PatternMatchingHost = PatternMatchingHost;","map":{"version":3,"names":["Object","defineProperty","exports","value","PatternMatchingHost","resolver_1","require","ResolverHost","constructor","arguments","_patterns","Map","addPattern","pattern","replacementFn","reString","Array","isArray","map","ex","split","f","replace","join","set","RegExp","_resolve","path","newPath","forEach","fn","re","test"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/core/src/virtual-fs/host/pattern.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PatternMatchingHost = void 0;\nconst resolver_1 = require(\"./resolver\");\n/**\n */\nclass PatternMatchingHost extends resolver_1.ResolverHost {\n    constructor() {\n        super(...arguments);\n        this._patterns = new Map();\n    }\n    addPattern(pattern, replacementFn) {\n        // Simple GLOB pattern replacement.\n        const reString = '^(' +\n            (Array.isArray(pattern) ? pattern : [pattern])\n                .map((ex) => '(' +\n                ex\n                    .split(/[/\\\\]/g)\n                    .map((f) => f\n                    .replace(/[-[\\]{}()+?.^$|]/g, '\\\\$&')\n                    .replace(/^\\*\\*/g, '(.+?)?')\n                    .replace(/\\*/g, '[^/\\\\\\\\]*'))\n                    .join('[/\\\\\\\\]') +\n                ')')\n                .join('|') +\n            ')($|/|\\\\\\\\)';\n        this._patterns.set(new RegExp(reString), replacementFn);\n    }\n    _resolve(path) {\n        let newPath = path;\n        this._patterns.forEach((fn, re) => {\n            if (re.test(path)) {\n                newPath = fn(newPath);\n            }\n        });\n        return newPath;\n    }\n}\nexports.PatternMatchingHost = PatternMatchingHost;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,mBAAR,GAA8B,KAAK,CAAnC;;AACA,MAAMC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;AACA;AACA;;;AACA,MAAMF,mBAAN,SAAkCC,UAAU,CAACE,YAA7C,CAA0D;EACtDC,WAAW,GAAG;IACV,MAAM,GAAGC,SAAT;IACA,KAAKC,SAAL,GAAiB,IAAIC,GAAJ,EAAjB;EACH;;EACDC,UAAU,CAACC,OAAD,EAAUC,aAAV,EAAyB;IAC/B;IACA,MAAMC,QAAQ,GAAG,OACb,CAACC,KAAK,CAACC,OAAN,CAAcJ,OAAd,IAAyBA,OAAzB,GAAmC,CAACA,OAAD,CAApC,EACKK,GADL,CACUC,EAAD,IAAQ,MACbA,EAAE,CACGC,KADL,CACW,QADX,EAEKF,GAFL,CAEUG,CAAD,IAAOA,CAAC,CACZC,OADW,CACH,mBADG,EACkB,MADlB,EAEXA,OAFW,CAEH,QAFG,EAEO,QAFP,EAGXA,OAHW,CAGH,KAHG,EAGI,WAHJ,CAFhB,EAMKC,IANL,CAMU,SANV,CADa,GAQb,GATJ,EAUKA,IAVL,CAUU,GAVV,CADa,GAYb,aAZJ;;IAaA,KAAKb,SAAL,CAAec,GAAf,CAAmB,IAAIC,MAAJ,CAAWV,QAAX,CAAnB,EAAyCD,aAAzC;EACH;;EACDY,QAAQ,CAACC,IAAD,EAAO;IACX,IAAIC,OAAO,GAAGD,IAAd;;IACA,KAAKjB,SAAL,CAAemB,OAAf,CAAuB,CAACC,EAAD,EAAKC,EAAL,KAAY;MAC/B,IAAIA,EAAE,CAACC,IAAH,CAAQL,IAAR,CAAJ,EAAmB;QACfC,OAAO,GAAGE,EAAE,CAACF,OAAD,CAAZ;MACH;IACJ,CAJD;;IAKA,OAAOA,OAAP;EACH;;AA9BqD;;AAgC1D1B,OAAO,CAACE,mBAAR,GAA8BA,mBAA9B"},"metadata":{},"sourceType":"script"}