{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.writeErrorToLogFile = void 0;\n\nconst fs_1 = require(\"fs\");\n\nconst os_1 = require(\"os\");\n\nconst path_1 = require(\"path\");\n\nlet logPath;\n/**\n * Writes an Error to a temporary log file.\n * If this method is called multiple times from the same process the same log file will be used.\n * @returns The path of the generated log file.\n */\n\nfunction writeErrorToLogFile(error) {\n  if (!logPath) {\n    const tempDirectory = (0, fs_1.mkdtempSync)((0, fs_1.realpathSync)((0, os_1.tmpdir)()) + '/ng-');\n    logPath = (0, path_1.normalize)(tempDirectory + '/angular-errors.log');\n  }\n\n  (0, fs_1.appendFileSync)(logPath, '[error] ' + (error.stack || error) + '\\n\\n');\n  return logPath;\n}\n\nexports.writeErrorToLogFile = writeErrorToLogFile;","map":{"version":3,"names":["Object","defineProperty","exports","value","writeErrorToLogFile","fs_1","require","os_1","path_1","logPath","error","tempDirectory","mkdtempSync","realpathSync","tmpdir","normalize","appendFileSync","stack"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular/cli/src/utilities/log-file.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeErrorToLogFile = void 0;\nconst fs_1 = require(\"fs\");\nconst os_1 = require(\"os\");\nconst path_1 = require(\"path\");\nlet logPath;\n/**\n * Writes an Error to a temporary log file.\n * If this method is called multiple times from the same process the same log file will be used.\n * @returns The path of the generated log file.\n */\nfunction writeErrorToLogFile(error) {\n    if (!logPath) {\n        const tempDirectory = (0, fs_1.mkdtempSync)((0, fs_1.realpathSync)((0, os_1.tmpdir)()) + '/ng-');\n        logPath = (0, path_1.normalize)(tempDirectory + '/angular-errors.log');\n    }\n    (0, fs_1.appendFileSync)(logPath, '[error] ' + (error.stack || error) + '\\n\\n');\n    return logPath;\n}\nexports.writeErrorToLogFile = writeErrorToLogFile;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,mBAAR,GAA8B,KAAK,CAAnC;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,IAAD,CAApB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,IAAD,CAApB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,MAAD,CAAtB;;AACA,IAAIG,OAAJ;AACA;AACA;AACA;AACA;AACA;;AACA,SAASL,mBAAT,CAA6BM,KAA7B,EAAoC;EAChC,IAAI,CAACD,OAAL,EAAc;IACV,MAAME,aAAa,GAAG,CAAC,GAAGN,IAAI,CAACO,WAAT,EAAsB,CAAC,GAAGP,IAAI,CAACQ,YAAT,EAAuB,CAAC,GAAGN,IAAI,CAACO,MAAT,GAAvB,IAA6C,MAAnE,CAAtB;IACAL,OAAO,GAAG,CAAC,GAAGD,MAAM,CAACO,SAAX,EAAsBJ,aAAa,GAAG,qBAAtC,CAAV;EACH;;EACD,CAAC,GAAGN,IAAI,CAACW,cAAT,EAAyBP,OAAzB,EAAkC,cAAcC,KAAK,CAACO,KAAN,IAAeP,KAA7B,IAAsC,MAAxE;EACA,OAAOD,OAAP;AACH;;AACDP,OAAO,CAACE,mBAAR,GAA8BA,mBAA9B"},"metadata":{},"sourceType":"script"}