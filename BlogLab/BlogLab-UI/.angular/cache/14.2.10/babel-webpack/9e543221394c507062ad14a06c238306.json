{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JsonWorkspaceMetadata = exports.JsonWorkspaceSymbol = void 0;\n\nconst jsonc_parser_1 = require(\"jsonc-parser\");\n\nexports.JsonWorkspaceSymbol = Symbol.for('@angular/core:workspace-json');\n\nfunction escapeKey(key) {\n  return key.replace('~', '~0').replace('/', '~1');\n}\n\nclass JsonWorkspaceMetadata {\n  constructor(filePath, ast, raw) {\n    this.filePath = filePath;\n    this.ast = ast;\n    this.raw = raw;\n    this.changes = new Map();\n    this.hasLegacyTargetsName = true;\n  }\n\n  get hasChanges() {\n    return this.changes.size > 0;\n  }\n\n  get changeCount() {\n    return this.changes.size;\n  }\n\n  getNodeValueFromAst(path) {\n    const node = (0, jsonc_parser_1.findNodeAtLocation)(this.ast, path);\n    return node && (0, jsonc_parser_1.getNodeValue)(node);\n  }\n\n  findChangesForPath(path) {\n    return this.changes.get(path);\n  }\n\n  addChange(jsonPath, value, type) {\n    let currentPath = '';\n\n    for (let index = 0; index < jsonPath.length - 1; index++) {\n      currentPath = currentPath + '/' + escapeKey(jsonPath[index]);\n\n      if (this.changes.has(currentPath)) {\n        // Ignore changes on children as parent is updated.\n        return;\n      }\n    }\n\n    const pathKey = '/' + jsonPath.map(k => escapeKey(k)).join('/');\n\n    for (const key of this.changes.keys()) {\n      if (key.startsWith(pathKey + '/')) {\n        // changes on the same or child paths are redundant.\n        this.changes.delete(key);\n      }\n    }\n\n    this.changes.set(pathKey, {\n      jsonPath,\n      type,\n      value\n    });\n  }\n\n}\n\nexports.JsonWorkspaceMetadata = JsonWorkspaceMetadata;","map":{"version":3,"names":["Object","defineProperty","exports","value","JsonWorkspaceMetadata","JsonWorkspaceSymbol","jsonc_parser_1","require","Symbol","for","escapeKey","key","replace","constructor","filePath","ast","raw","changes","Map","hasLegacyTargetsName","hasChanges","size","changeCount","getNodeValueFromAst","path","node","findNodeAtLocation","getNodeValue","findChangesForPath","get","addChange","jsonPath","type","currentPath","index","length","has","pathKey","map","k","join","keys","startsWith","delete","set"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/core/src/workspace/json/metadata.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonWorkspaceMetadata = exports.JsonWorkspaceSymbol = void 0;\nconst jsonc_parser_1 = require(\"jsonc-parser\");\nexports.JsonWorkspaceSymbol = Symbol.for('@angular/core:workspace-json');\nfunction escapeKey(key) {\n    return key.replace('~', '~0').replace('/', '~1');\n}\nclass JsonWorkspaceMetadata {\n    constructor(filePath, ast, raw) {\n        this.filePath = filePath;\n        this.ast = ast;\n        this.raw = raw;\n        this.changes = new Map();\n        this.hasLegacyTargetsName = true;\n    }\n    get hasChanges() {\n        return this.changes.size > 0;\n    }\n    get changeCount() {\n        return this.changes.size;\n    }\n    getNodeValueFromAst(path) {\n        const node = (0, jsonc_parser_1.findNodeAtLocation)(this.ast, path);\n        return node && (0, jsonc_parser_1.getNodeValue)(node);\n    }\n    findChangesForPath(path) {\n        return this.changes.get(path);\n    }\n    addChange(jsonPath, value, type) {\n        let currentPath = '';\n        for (let index = 0; index < jsonPath.length - 1; index++) {\n            currentPath = currentPath + '/' + escapeKey(jsonPath[index]);\n            if (this.changes.has(currentPath)) {\n                // Ignore changes on children as parent is updated.\n                return;\n            }\n        }\n        const pathKey = '/' + jsonPath.map((k) => escapeKey(k)).join('/');\n        for (const key of this.changes.keys()) {\n            if (key.startsWith(pathKey + '/')) {\n                // changes on the same or child paths are redundant.\n                this.changes.delete(key);\n            }\n        }\n        this.changes.set(pathKey, { jsonPath, type, value });\n    }\n}\nexports.JsonWorkspaceMetadata = JsonWorkspaceMetadata;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,qBAAR,GAAgCF,OAAO,CAACG,mBAAR,GAA8B,KAAK,CAAnE;;AACA,MAAMC,cAAc,GAAGC,OAAO,CAAC,cAAD,CAA9B;;AACAL,OAAO,CAACG,mBAAR,GAA8BG,MAAM,CAACC,GAAP,CAAW,8BAAX,CAA9B;;AACA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;EACpB,OAAOA,GAAG,CAACC,OAAJ,CAAY,GAAZ,EAAiB,IAAjB,EAAuBA,OAAvB,CAA+B,GAA/B,EAAoC,IAApC,CAAP;AACH;;AACD,MAAMR,qBAAN,CAA4B;EACxBS,WAAW,CAACC,QAAD,EAAWC,GAAX,EAAgBC,GAAhB,EAAqB;IAC5B,KAAKF,QAAL,GAAgBA,QAAhB;IACA,KAAKC,GAAL,GAAWA,GAAX;IACA,KAAKC,GAAL,GAAWA,GAAX;IACA,KAAKC,OAAL,GAAe,IAAIC,GAAJ,EAAf;IACA,KAAKC,oBAAL,GAA4B,IAA5B;EACH;;EACa,IAAVC,UAAU,GAAG;IACb,OAAO,KAAKH,OAAL,CAAaI,IAAb,GAAoB,CAA3B;EACH;;EACc,IAAXC,WAAW,GAAG;IACd,OAAO,KAAKL,OAAL,CAAaI,IAApB;EACH;;EACDE,mBAAmB,CAACC,IAAD,EAAO;IACtB,MAAMC,IAAI,GAAG,CAAC,GAAGnB,cAAc,CAACoB,kBAAnB,EAAuC,KAAKX,GAA5C,EAAiDS,IAAjD,CAAb;IACA,OAAOC,IAAI,IAAI,CAAC,GAAGnB,cAAc,CAACqB,YAAnB,EAAiCF,IAAjC,CAAf;EACH;;EACDG,kBAAkB,CAACJ,IAAD,EAAO;IACrB,OAAO,KAAKP,OAAL,CAAaY,GAAb,CAAiBL,IAAjB,CAAP;EACH;;EACDM,SAAS,CAACC,QAAD,EAAW5B,KAAX,EAAkB6B,IAAlB,EAAwB;IAC7B,IAAIC,WAAW,GAAG,EAAlB;;IACA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,QAAQ,CAACI,MAAT,GAAkB,CAA9C,EAAiDD,KAAK,EAAtD,EAA0D;MACtDD,WAAW,GAAGA,WAAW,GAAG,GAAd,GAAoBvB,SAAS,CAACqB,QAAQ,CAACG,KAAD,CAAT,CAA3C;;MACA,IAAI,KAAKjB,OAAL,CAAamB,GAAb,CAAiBH,WAAjB,CAAJ,EAAmC;QAC/B;QACA;MACH;IACJ;;IACD,MAAMI,OAAO,GAAG,MAAMN,QAAQ,CAACO,GAAT,CAAcC,CAAD,IAAO7B,SAAS,CAAC6B,CAAD,CAA7B,EAAkCC,IAAlC,CAAuC,GAAvC,CAAtB;;IACA,KAAK,MAAM7B,GAAX,IAAkB,KAAKM,OAAL,CAAawB,IAAb,EAAlB,EAAuC;MACnC,IAAI9B,GAAG,CAAC+B,UAAJ,CAAeL,OAAO,GAAG,GAAzB,CAAJ,EAAmC;QAC/B;QACA,KAAKpB,OAAL,CAAa0B,MAAb,CAAoBhC,GAApB;MACH;IACJ;;IACD,KAAKM,OAAL,CAAa2B,GAAb,CAAiBP,OAAjB,EAA0B;MAAEN,QAAF;MAAYC,IAAZ;MAAkB7B;IAAlB,CAA1B;EACH;;AAtCuB;;AAwC5BD,OAAO,CAACE,qBAAR,GAAgCA,qBAAhC"},"metadata":{},"sourceType":"script"}