{"ast":null,"code":"'use strict';\n\nconst {\n  from,\n  of\n} = require('rxjs');\n\nconst runAsync = require('run-async');\n/**\n * Resolve a question property value if it is passed as a function.\n * This method will overwrite the property on the question object with the received value.\n * @param  {Object} question - Question object\n * @param  {String} prop     - Property to fetch name\n * @param  {Object} answers  - Answers object\n * @return {Rx.Observable}   - Observable emitting once value is known\n */\n\n\nexports.fetchAsyncQuestionProperty = function (question, prop, answers) {\n  if (typeof question[prop] !== 'function') {\n    return of(question);\n  }\n\n  return from(runAsync(question[prop])(answers).then(value => {\n    question[prop] = value;\n    return question;\n  }));\n};","map":{"version":3,"names":["from","of","require","runAsync","exports","fetchAsyncQuestionProperty","question","prop","answers","then","value"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/inquirer/lib/utils/utils.js"],"sourcesContent":["'use strict';\nconst { from, of } = require('rxjs');\nconst runAsync = require('run-async');\n\n/**\n * Resolve a question property value if it is passed as a function.\n * This method will overwrite the property on the question object with the received value.\n * @param  {Object} question - Question object\n * @param  {String} prop     - Property to fetch name\n * @param  {Object} answers  - Answers object\n * @return {Rx.Observable}   - Observable emitting once value is known\n */\n\nexports.fetchAsyncQuestionProperty = function (question, prop, answers) {\n  if (typeof question[prop] !== 'function') {\n    return of(question);\n  }\n\n  return from(\n    runAsync(question[prop])(answers).then((value) => {\n      question[prop] = value;\n      return question;\n    })\n  );\n};\n"],"mappings":"AAAA;;AACA,MAAM;EAAEA,IAAF;EAAQC;AAAR,IAAeC,OAAO,CAAC,MAAD,CAA5B;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAE,OAAO,CAACC,0BAAR,GAAqC,UAAUC,QAAV,EAAoBC,IAApB,EAA0BC,OAA1B,EAAmC;EACtE,IAAI,OAAOF,QAAQ,CAACC,IAAD,CAAf,KAA0B,UAA9B,EAA0C;IACxC,OAAON,EAAE,CAACK,QAAD,CAAT;EACD;;EAED,OAAON,IAAI,CACTG,QAAQ,CAACG,QAAQ,CAACC,IAAD,CAAT,CAAR,CAAyBC,OAAzB,EAAkCC,IAAlC,CAAwCC,KAAD,IAAW;IAChDJ,QAAQ,CAACC,IAAD,CAAR,GAAiBG,KAAjB;IACA,OAAOJ,QAAP;EACD,CAHD,CADS,CAAX;AAMD,CAXD"},"metadata":{},"sourceType":"script"}