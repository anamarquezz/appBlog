{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst net_1 = __importDefault(require(\"net\"));\n\nconst tls_1 = __importDefault(require(\"tls\"));\n\nconst url_1 = __importDefault(require(\"url\"));\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst once_1 = __importDefault(require(\"@tootallnate/once\"));\n\nconst agent_base_1 = require(\"agent-base\");\n\nconst debug = (0, debug_1.default)('http-proxy-agent');\n\nfunction isHTTPS(protocol) {\n  return typeof protocol === 'string' ? /^https:?$/i.test(protocol) : false;\n}\n/**\n * The `HttpProxyAgent` implements an HTTP Agent subclass that connects\n * to the specified \"HTTP proxy server\" in order to proxy HTTP requests.\n *\n * @api public\n */\n\n\nclass HttpProxyAgent extends agent_base_1.Agent {\n  constructor(_opts) {\n    let opts;\n\n    if (typeof _opts === 'string') {\n      opts = url_1.default.parse(_opts);\n    } else {\n      opts = _opts;\n    }\n\n    if (!opts) {\n      throw new Error('an HTTP(S) proxy server `host` and `port` must be specified!');\n    }\n\n    debug('Creating new HttpProxyAgent instance: %o', opts);\n    super(opts);\n    const proxy = Object.assign({}, opts); // If `true`, then connect to the proxy server over TLS.\n    // Defaults to `false`.\n\n    this.secureProxy = opts.secureProxy || isHTTPS(proxy.protocol); // Prefer `hostname` over `host`, and set the `port` if needed.\n\n    proxy.host = proxy.hostname || proxy.host;\n\n    if (typeof proxy.port === 'string') {\n      proxy.port = parseInt(proxy.port, 10);\n    }\n\n    if (!proxy.port && proxy.host) {\n      proxy.port = this.secureProxy ? 443 : 80;\n    }\n\n    if (proxy.host && proxy.path) {\n      // If both a `host` and `path` are specified then it's most likely\n      // the result of a `url.parse()` call... we need to remove the\n      // `path` portion so that `net.connect()` doesn't attempt to open\n      // that as a Unix socket file.\n      delete proxy.path;\n      delete proxy.pathname;\n    }\n\n    this.proxy = proxy;\n  }\n  /**\n   * Called when the node-core HTTP client library is creating a\n   * new HTTP request.\n   *\n   * @api protected\n   */\n\n\n  callback(req, opts) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        proxy,\n        secureProxy\n      } = this;\n      const parsed = url_1.default.parse(req.path);\n\n      if (!parsed.protocol) {\n        parsed.protocol = 'http:';\n      }\n\n      if (!parsed.hostname) {\n        parsed.hostname = opts.hostname || opts.host || null;\n      }\n\n      if (parsed.port == null && typeof opts.port) {\n        parsed.port = String(opts.port);\n      }\n\n      if (parsed.port === '80') {\n        // if port is 80, then we can remove the port so that the\n        // \":80\" portion is not on the produced URL\n        parsed.port = '';\n      } // Change the `http.ClientRequest` instance's \"path\" field\n      // to the absolute path of the URL that will be requested.\n\n\n      req.path = url_1.default.format(parsed); // Inject the `Proxy-Authorization` header if necessary.\n\n      if (proxy.auth) {\n        req.setHeader('Proxy-Authorization', `Basic ${Buffer.from(proxy.auth).toString('base64')}`);\n      } // Create a socket connection to the proxy server.\n\n\n      let socket;\n\n      if (secureProxy) {\n        debug('Creating `tls.Socket`: %o', proxy);\n        socket = tls_1.default.connect(proxy);\n      } else {\n        debug('Creating `net.Socket`: %o', proxy);\n        socket = net_1.default.connect(proxy);\n      } // At this point, the http ClientRequest's internal `_header` field\n      // might have already been set. If this is the case then we'll need\n      // to re-generate the string since we just changed the `req.path`.\n\n\n      if (req._header) {\n        let first;\n        let endOfHeaders;\n        debug('Regenerating stored HTTP header string for request');\n        req._header = null;\n\n        req._implicitHeader();\n\n        if (req.output && req.output.length > 0) {\n          // Node < 12\n          debug('Patching connection write() output buffer with updated header');\n          first = req.output[0];\n          endOfHeaders = first.indexOf('\\r\\n\\r\\n') + 4;\n          req.output[0] = req._header + first.substring(endOfHeaders);\n          debug('Output buffer: %o', req.output);\n        } else if (req.outputData && req.outputData.length > 0) {\n          // Node >= 12\n          debug('Patching connection write() output buffer with updated header');\n          first = req.outputData[0].data;\n          endOfHeaders = first.indexOf('\\r\\n\\r\\n') + 4;\n          req.outputData[0].data = req._header + first.substring(endOfHeaders);\n          debug('Output buffer: %o', req.outputData[0].data);\n        }\n      } // Wait for the socket's `connect` event, so that this `callback()`\n      // function throws instead of the `http` request machinery. This is\n      // important for i.e. `PacProxyAgent` which determines a failed proxy\n      // connection via the `callback()` function throwing.\n\n\n      yield (0, once_1.default)(socket, 'connect');\n      return socket;\n    });\n  }\n\n}\n\nexports.default = HttpProxyAgent;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","net_1","require","tls_1","url_1","debug_1","once_1","agent_base_1","debug","default","isHTTPS","protocol","test","HttpProxyAgent","Agent","constructor","_opts","opts","parse","Error","proxy","assign","secureProxy","host","hostname","port","parseInt","path","pathname","callback","req","parsed","String","format","auth","setHeader","Buffer","from","toString","socket","connect","_header","first","endOfHeaders","_implicitHeader","output","length","indexOf","substring","outputData","data"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/http-proxy-agent/dist/agent.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst net_1 = __importDefault(require(\"net\"));\nconst tls_1 = __importDefault(require(\"tls\"));\nconst url_1 = __importDefault(require(\"url\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst once_1 = __importDefault(require(\"@tootallnate/once\"));\nconst agent_base_1 = require(\"agent-base\");\nconst debug = (0, debug_1.default)('http-proxy-agent');\nfunction isHTTPS(protocol) {\n    return typeof protocol === 'string' ? /^https:?$/i.test(protocol) : false;\n}\n/**\n * The `HttpProxyAgent` implements an HTTP Agent subclass that connects\n * to the specified \"HTTP proxy server\" in order to proxy HTTP requests.\n *\n * @api public\n */\nclass HttpProxyAgent extends agent_base_1.Agent {\n    constructor(_opts) {\n        let opts;\n        if (typeof _opts === 'string') {\n            opts = url_1.default.parse(_opts);\n        }\n        else {\n            opts = _opts;\n        }\n        if (!opts) {\n            throw new Error('an HTTP(S) proxy server `host` and `port` must be specified!');\n        }\n        debug('Creating new HttpProxyAgent instance: %o', opts);\n        super(opts);\n        const proxy = Object.assign({}, opts);\n        // If `true`, then connect to the proxy server over TLS.\n        // Defaults to `false`.\n        this.secureProxy = opts.secureProxy || isHTTPS(proxy.protocol);\n        // Prefer `hostname` over `host`, and set the `port` if needed.\n        proxy.host = proxy.hostname || proxy.host;\n        if (typeof proxy.port === 'string') {\n            proxy.port = parseInt(proxy.port, 10);\n        }\n        if (!proxy.port && proxy.host) {\n            proxy.port = this.secureProxy ? 443 : 80;\n        }\n        if (proxy.host && proxy.path) {\n            // If both a `host` and `path` are specified then it's most likely\n            // the result of a `url.parse()` call... we need to remove the\n            // `path` portion so that `net.connect()` doesn't attempt to open\n            // that as a Unix socket file.\n            delete proxy.path;\n            delete proxy.pathname;\n        }\n        this.proxy = proxy;\n    }\n    /**\n     * Called when the node-core HTTP client library is creating a\n     * new HTTP request.\n     *\n     * @api protected\n     */\n    callback(req, opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { proxy, secureProxy } = this;\n            const parsed = url_1.default.parse(req.path);\n            if (!parsed.protocol) {\n                parsed.protocol = 'http:';\n            }\n            if (!parsed.hostname) {\n                parsed.hostname = opts.hostname || opts.host || null;\n            }\n            if (parsed.port == null && typeof opts.port) {\n                parsed.port = String(opts.port);\n            }\n            if (parsed.port === '80') {\n                // if port is 80, then we can remove the port so that the\n                // \":80\" portion is not on the produced URL\n                parsed.port = '';\n            }\n            // Change the `http.ClientRequest` instance's \"path\" field\n            // to the absolute path of the URL that will be requested.\n            req.path = url_1.default.format(parsed);\n            // Inject the `Proxy-Authorization` header if necessary.\n            if (proxy.auth) {\n                req.setHeader('Proxy-Authorization', `Basic ${Buffer.from(proxy.auth).toString('base64')}`);\n            }\n            // Create a socket connection to the proxy server.\n            let socket;\n            if (secureProxy) {\n                debug('Creating `tls.Socket`: %o', proxy);\n                socket = tls_1.default.connect(proxy);\n            }\n            else {\n                debug('Creating `net.Socket`: %o', proxy);\n                socket = net_1.default.connect(proxy);\n            }\n            // At this point, the http ClientRequest's internal `_header` field\n            // might have already been set. If this is the case then we'll need\n            // to re-generate the string since we just changed the `req.path`.\n            if (req._header) {\n                let first;\n                let endOfHeaders;\n                debug('Regenerating stored HTTP header string for request');\n                req._header = null;\n                req._implicitHeader();\n                if (req.output && req.output.length > 0) {\n                    // Node < 12\n                    debug('Patching connection write() output buffer with updated header');\n                    first = req.output[0];\n                    endOfHeaders = first.indexOf('\\r\\n\\r\\n') + 4;\n                    req.output[0] = req._header + first.substring(endOfHeaders);\n                    debug('Output buffer: %o', req.output);\n                }\n                else if (req.outputData && req.outputData.length > 0) {\n                    // Node >= 12\n                    debug('Patching connection write() output buffer with updated header');\n                    first = req.outputData[0].data;\n                    endOfHeaders = first.indexOf('\\r\\n\\r\\n') + 4;\n                    req.outputData[0].data =\n                        req._header + first.substring(endOfHeaders);\n                    debug('Output buffer: %o', req.outputData[0].data);\n                }\n            }\n            // Wait for the socket's `connect` event, so that this `callback()`\n            // function throws instead of the `http` request machinery. This is\n            // important for i.e. `PacProxyAgent` which determines a failed proxy\n            // connection via the `callback()` function throwing.\n            yield (0, once_1.default)(socket, 'connect');\n            return socket;\n        });\n    }\n}\nexports.default = HttpProxyAgent;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}