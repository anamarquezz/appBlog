{"ast":null,"code":"'use strict';\n\nconst npa = require('npm-package-arg');\n\nconst semver = require('semver');\n\nconst {\n  checkEngine\n} = require('npm-install-checks');\n\nconst normalizeBin = require('npm-normalize-package-bin');\n\nconst engineOk = (manifest, npmVersion, nodeVersion) => {\n  try {\n    checkEngine(manifest, npmVersion, nodeVersion);\n    return true;\n  } catch (_) {\n    return false;\n  }\n};\n\nconst isBefore = (verTimes, ver, time) => !verTimes || !verTimes[ver] || Date.parse(verTimes[ver]) <= time;\n\nconst avoidSemverOpt = {\n  includePrerelease: true,\n  loose: true\n};\n\nconst shouldAvoid = (ver, avoid) => avoid && semver.satisfies(ver, avoid, avoidSemverOpt);\n\nconst decorateAvoid = (result, avoid) => result && shouldAvoid(result.version, avoid) ? { ...result,\n  _shouldAvoid: true\n} : result;\n\nconst pickManifest = (packument, wanted, opts) => {\n  const {\n    defaultTag = 'latest',\n    before = null,\n    nodeVersion = process.version,\n    npmVersion = null,\n    includeStaged = false,\n    avoid = null,\n    avoidStrict = false\n  } = opts;\n  const {\n    name,\n    time: verTimes\n  } = packument;\n  const versions = packument.versions || {};\n\n  if (avoidStrict) {\n    const looseOpts = { ...opts,\n      avoidStrict: false\n    };\n    const result = pickManifest(packument, wanted, looseOpts);\n\n    if (!result || !result._shouldAvoid) {\n      return result;\n    }\n\n    const caret = pickManifest(packument, `^${result.version}`, looseOpts);\n\n    if (!caret || !caret._shouldAvoid) {\n      return { ...caret,\n        _outsideDependencyRange: true,\n        _isSemVerMajor: false\n      };\n    }\n\n    const star = pickManifest(packument, '*', looseOpts);\n\n    if (!star || !star._shouldAvoid) {\n      return { ...star,\n        _outsideDependencyRange: true,\n        _isSemVerMajor: true\n      };\n    }\n\n    throw Object.assign(new Error(`No avoidable versions for ${name}`), {\n      code: 'ETARGET',\n      name,\n      wanted,\n      avoid,\n      before,\n      versions: Object.keys(versions)\n    });\n  }\n\n  const staged = includeStaged && packument.stagedVersions && packument.stagedVersions.versions || {};\n  const restricted = packument.policyRestrictions && packument.policyRestrictions.versions || {};\n  const time = before && verTimes ? +new Date(before) : Infinity;\n  const spec = npa.resolve(name, wanted || defaultTag);\n  const type = spec.type;\n  const distTags = packument['dist-tags'] || {};\n\n  if (type !== 'tag' && type !== 'version' && type !== 'range') {\n    throw new Error('Only tag, version, and range are supported');\n  } // if the type is 'tag', and not just the implicit default, then it must\n  // be that exactly, or nothing else will do.\n\n\n  if (wanted && type === 'tag') {\n    const ver = distTags[wanted]; // if the version in the dist-tags is before the before date, then\n    // we use that.  Otherwise, we get the highest precedence version\n    // prior to the dist-tag.\n\n    if (isBefore(verTimes, ver, time)) {\n      return decorateAvoid(versions[ver] || staged[ver] || restricted[ver], avoid);\n    } else {\n      return pickManifest(packument, `<=${ver}`, opts);\n    }\n  } // similarly, if a specific version, then only that version will do\n\n\n  if (wanted && type === 'version') {\n    const ver = semver.clean(wanted, {\n      loose: true\n    });\n    const mani = versions[ver] || staged[ver] || restricted[ver];\n    return isBefore(verTimes, ver, time) ? decorateAvoid(mani, avoid) : null;\n  } // ok, sort based on our heuristics, and pick the best fit\n\n\n  const range = type === 'range' ? wanted : '*'; // if the range is *, then we prefer the 'latest' if available\n  // but skip this if it should be avoided, in that case we have\n  // to try a little harder.\n\n  const defaultVer = distTags[defaultTag];\n\n  if (defaultVer && (range === '*' || semver.satisfies(defaultVer, range, {\n    loose: true\n  })) && !shouldAvoid(defaultVer, avoid)) {\n    const mani = versions[defaultVer];\n\n    if (mani && isBefore(verTimes, defaultVer, time)) {\n      return mani;\n    }\n  } // ok, actually have to sort the list and take the winner\n\n\n  const allEntries = Object.entries(versions).concat(Object.entries(staged)).concat(Object.entries(restricted)).filter(([ver, mani]) => isBefore(verTimes, ver, time));\n\n  if (!allEntries.length) {\n    throw Object.assign(new Error(`No versions available for ${name}`), {\n      code: 'ENOVERSIONS',\n      name,\n      type,\n      wanted,\n      before,\n      versions: Object.keys(versions)\n    });\n  }\n\n  const sortSemverOpt = {\n    loose: true\n  };\n  const entries = allEntries.filter(([ver, mani]) => semver.satisfies(ver, range, {\n    loose: true\n  })).sort((a, b) => {\n    const [vera, mania] = a;\n    const [verb, manib] = b;\n    const notavoida = !shouldAvoid(vera, avoid);\n    const notavoidb = !shouldAvoid(verb, avoid);\n    const notrestra = !restricted[a];\n    const notrestrb = !restricted[b];\n    const notstagea = !staged[a];\n    const notstageb = !staged[b];\n    const notdepra = !mania.deprecated;\n    const notdeprb = !manib.deprecated;\n    const enginea = engineOk(mania, npmVersion, nodeVersion);\n    const engineb = engineOk(manib, npmVersion, nodeVersion); // sort by:\n    // - not an avoided version\n    // - not restricted\n    // - not staged\n    // - not deprecated and engine ok\n    // - engine ok\n    // - not deprecated\n    // - semver\n\n    return notavoidb - notavoida || notrestrb - notrestra || notstageb - notstagea || (notdeprb && engineb) - (notdepra && enginea) || engineb - enginea || notdeprb - notdepra || semver.rcompare(vera, verb, sortSemverOpt);\n  });\n  return decorateAvoid(entries[0] && entries[0][1], avoid);\n};\n\nmodule.exports = (packument, wanted, opts = {}) => {\n  const mani = pickManifest(packument, wanted, opts);\n  const picked = mani && normalizeBin(mani);\n  const policyRestrictions = packument.policyRestrictions;\n  const restricted = policyRestrictions && policyRestrictions.versions || {};\n\n  if (picked && !restricted[picked.version]) {\n    return picked;\n  }\n\n  const {\n    before = null,\n    defaultTag = 'latest'\n  } = opts;\n  const bstr = before ? new Date(before).toLocaleString() : '';\n  const {\n    name\n  } = packument;\n  const pckg = `${name}@${wanted}` + (before ? ` with a date before ${bstr}` : '');\n  const isForbidden = picked && !!restricted[picked.version];\n  const polMsg = isForbidden ? policyRestrictions.message : '';\n  const msg = !isForbidden ? `No matching version found for ${pckg}.` : `Could not download ${pckg} due to policy violations:\\n${polMsg}`;\n  const code = isForbidden ? 'E403' : 'ETARGET';\n  throw Object.assign(new Error(msg), {\n    code,\n    type: npa.resolve(packument.name, wanted).type,\n    wanted,\n    versions: Object.keys(packument.versions),\n    name,\n    distTags: packument['dist-tags'],\n    defaultTag\n  });\n};","map":{"version":3,"names":["npa","require","semver","checkEngine","normalizeBin","engineOk","manifest","npmVersion","nodeVersion","_","isBefore","verTimes","ver","time","Date","parse","avoidSemverOpt","includePrerelease","loose","shouldAvoid","avoid","satisfies","decorateAvoid","result","version","_shouldAvoid","pickManifest","packument","wanted","opts","defaultTag","before","process","includeStaged","avoidStrict","name","versions","looseOpts","caret","_outsideDependencyRange","_isSemVerMajor","star","Object","assign","Error","code","keys","staged","stagedVersions","restricted","policyRestrictions","Infinity","spec","resolve","type","distTags","clean","mani","range","defaultVer","allEntries","entries","concat","filter","length","sortSemverOpt","sort","a","b","vera","mania","verb","manib","notavoida","notavoidb","notrestra","notrestrb","notstagea","notstageb","notdepra","deprecated","notdeprb","enginea","engineb","rcompare","module","exports","picked","bstr","toLocaleString","pckg","isForbidden","polMsg","message","msg"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/npm-pick-manifest/lib/index.js"],"sourcesContent":["'use strict'\n\nconst npa = require('npm-package-arg')\nconst semver = require('semver')\nconst { checkEngine } = require('npm-install-checks')\nconst normalizeBin = require('npm-normalize-package-bin')\n\nconst engineOk = (manifest, npmVersion, nodeVersion) => {\n  try {\n    checkEngine(manifest, npmVersion, nodeVersion)\n    return true\n  } catch (_) {\n    return false\n  }\n}\n\nconst isBefore = (verTimes, ver, time) =>\n  !verTimes || !verTimes[ver] || Date.parse(verTimes[ver]) <= time\n\nconst avoidSemverOpt = { includePrerelease: true, loose: true }\nconst shouldAvoid = (ver, avoid) =>\n  avoid && semver.satisfies(ver, avoid, avoidSemverOpt)\n\nconst decorateAvoid = (result, avoid) =>\n  result && shouldAvoid(result.version, avoid)\n    ? { ...result, _shouldAvoid: true }\n    : result\n\nconst pickManifest = (packument, wanted, opts) => {\n  const {\n    defaultTag = 'latest',\n    before = null,\n    nodeVersion = process.version,\n    npmVersion = null,\n    includeStaged = false,\n    avoid = null,\n    avoidStrict = false,\n  } = opts\n\n  const { name, time: verTimes } = packument\n  const versions = packument.versions || {}\n\n  if (avoidStrict) {\n    const looseOpts = {\n      ...opts,\n      avoidStrict: false,\n    }\n\n    const result = pickManifest(packument, wanted, looseOpts)\n    if (!result || !result._shouldAvoid) {\n      return result\n    }\n\n    const caret = pickManifest(packument, `^${result.version}`, looseOpts)\n    if (!caret || !caret._shouldAvoid) {\n      return {\n        ...caret,\n        _outsideDependencyRange: true,\n        _isSemVerMajor: false,\n      }\n    }\n\n    const star = pickManifest(packument, '*', looseOpts)\n    if (!star || !star._shouldAvoid) {\n      return {\n        ...star,\n        _outsideDependencyRange: true,\n        _isSemVerMajor: true,\n      }\n    }\n\n    throw Object.assign(new Error(`No avoidable versions for ${name}`), {\n      code: 'ETARGET',\n      name,\n      wanted,\n      avoid,\n      before,\n      versions: Object.keys(versions),\n    })\n  }\n\n  const staged = (includeStaged && packument.stagedVersions &&\n    packument.stagedVersions.versions) || {}\n  const restricted = (packument.policyRestrictions &&\n    packument.policyRestrictions.versions) || {}\n\n  const time = before && verTimes ? +(new Date(before)) : Infinity\n  const spec = npa.resolve(name, wanted || defaultTag)\n  const type = spec.type\n  const distTags = packument['dist-tags'] || {}\n\n  if (type !== 'tag' && type !== 'version' && type !== 'range') {\n    throw new Error('Only tag, version, and range are supported')\n  }\n\n  // if the type is 'tag', and not just the implicit default, then it must\n  // be that exactly, or nothing else will do.\n  if (wanted && type === 'tag') {\n    const ver = distTags[wanted]\n    // if the version in the dist-tags is before the before date, then\n    // we use that.  Otherwise, we get the highest precedence version\n    // prior to the dist-tag.\n    if (isBefore(verTimes, ver, time)) {\n      return decorateAvoid(versions[ver] || staged[ver] || restricted[ver], avoid)\n    } else {\n      return pickManifest(packument, `<=${ver}`, opts)\n    }\n  }\n\n  // similarly, if a specific version, then only that version will do\n  if (wanted && type === 'version') {\n    const ver = semver.clean(wanted, { loose: true })\n    const mani = versions[ver] || staged[ver] || restricted[ver]\n    return isBefore(verTimes, ver, time) ? decorateAvoid(mani, avoid) : null\n  }\n\n  // ok, sort based on our heuristics, and pick the best fit\n  const range = type === 'range' ? wanted : '*'\n\n  // if the range is *, then we prefer the 'latest' if available\n  // but skip this if it should be avoided, in that case we have\n  // to try a little harder.\n  const defaultVer = distTags[defaultTag]\n  if (defaultVer &&\n      (range === '*' || semver.satisfies(defaultVer, range, { loose: true })) &&\n      !shouldAvoid(defaultVer, avoid)) {\n    const mani = versions[defaultVer]\n    if (mani && isBefore(verTimes, defaultVer, time)) {\n      return mani\n    }\n  }\n\n  // ok, actually have to sort the list and take the winner\n  const allEntries = Object.entries(versions)\n    .concat(Object.entries(staged))\n    .concat(Object.entries(restricted))\n    .filter(([ver, mani]) => isBefore(verTimes, ver, time))\n\n  if (!allEntries.length) {\n    throw Object.assign(new Error(`No versions available for ${name}`), {\n      code: 'ENOVERSIONS',\n      name,\n      type,\n      wanted,\n      before,\n      versions: Object.keys(versions),\n    })\n  }\n\n  const sortSemverOpt = { loose: true }\n  const entries = allEntries.filter(([ver, mani]) =>\n    semver.satisfies(ver, range, { loose: true }))\n    .sort((a, b) => {\n      const [vera, mania] = a\n      const [verb, manib] = b\n      const notavoida = !shouldAvoid(vera, avoid)\n      const notavoidb = !shouldAvoid(verb, avoid)\n      const notrestra = !restricted[a]\n      const notrestrb = !restricted[b]\n      const notstagea = !staged[a]\n      const notstageb = !staged[b]\n      const notdepra = !mania.deprecated\n      const notdeprb = !manib.deprecated\n      const enginea = engineOk(mania, npmVersion, nodeVersion)\n      const engineb = engineOk(manib, npmVersion, nodeVersion)\n      // sort by:\n      // - not an avoided version\n      // - not restricted\n      // - not staged\n      // - not deprecated and engine ok\n      // - engine ok\n      // - not deprecated\n      // - semver\n      return (notavoidb - notavoida) ||\n        (notrestrb - notrestra) ||\n        (notstageb - notstagea) ||\n        ((notdeprb && engineb) - (notdepra && enginea)) ||\n        (engineb - enginea) ||\n        (notdeprb - notdepra) ||\n        semver.rcompare(vera, verb, sortSemverOpt)\n    })\n\n  return decorateAvoid(entries[0] && entries[0][1], avoid)\n}\n\nmodule.exports = (packument, wanted, opts = {}) => {\n  const mani = pickManifest(packument, wanted, opts)\n  const picked = mani && normalizeBin(mani)\n  const policyRestrictions = packument.policyRestrictions\n  const restricted = (policyRestrictions && policyRestrictions.versions) || {}\n\n  if (picked && !restricted[picked.version]) {\n    return picked\n  }\n\n  const { before = null, defaultTag = 'latest' } = opts\n  const bstr = before ? new Date(before).toLocaleString() : ''\n  const { name } = packument\n  const pckg = `${name}@${wanted}` +\n    (before ? ` with a date before ${bstr}` : '')\n\n  const isForbidden = picked && !!restricted[picked.version]\n  const polMsg = isForbidden ? policyRestrictions.message : ''\n\n  const msg = !isForbidden ? `No matching version found for ${pckg}.`\n    : `Could not download ${pckg} due to policy violations:\\n${polMsg}`\n\n  const code = isForbidden ? 'E403' : 'ETARGET'\n  throw Object.assign(new Error(msg), {\n    code,\n    type: npa.resolve(packument.name, wanted).type,\n    wanted,\n    versions: Object.keys(packument.versions),\n    name,\n    distTags: packument['dist-tags'],\n    defaultTag,\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}