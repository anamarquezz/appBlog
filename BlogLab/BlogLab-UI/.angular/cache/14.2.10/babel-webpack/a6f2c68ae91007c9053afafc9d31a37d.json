{"ast":null,"code":"// add a sha to a git remote url spec\nconst addGitSha = (spec, sha) => {\n  if (spec.hosted) {\n    const h = spec.hosted;\n    const opt = {\n      noCommittish: true\n    };\n    const base = h.https && h.auth ? h.https(opt) : h.shortcut(opt);\n    return `${base}#${sha}`;\n  } else {\n    // don't use new URL for this, because it doesn't handle scp urls\n    return spec.rawSpec.replace(/#.*$/, '') + `#${sha}`;\n  }\n};\n\nmodule.exports = addGitSha;","map":{"version":3,"names":["addGitSha","spec","sha","hosted","h","opt","noCommittish","base","https","auth","shortcut","rawSpec","replace","module","exports"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/pacote/lib/util/add-git-sha.js"],"sourcesContent":["// add a sha to a git remote url spec\nconst addGitSha = (spec, sha) => {\n  if (spec.hosted) {\n    const h = spec.hosted\n    const opt = { noCommittish: true }\n    const base = h.https && h.auth ? h.https(opt) : h.shortcut(opt)\n\n    return `${base}#${sha}`\n  } else {\n    // don't use new URL for this, because it doesn't handle scp urls\n    return spec.rawSpec.replace(/#.*$/, '') + `#${sha}`\n  }\n}\n\nmodule.exports = addGitSha\n"],"mappings":"AAAA;AACA,MAAMA,SAAS,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAe;EAC/B,IAAID,IAAI,CAACE,MAAT,EAAiB;IACf,MAAMC,CAAC,GAAGH,IAAI,CAACE,MAAf;IACA,MAAME,GAAG,GAAG;MAAEC,YAAY,EAAE;IAAhB,CAAZ;IACA,MAAMC,IAAI,GAAGH,CAAC,CAACI,KAAF,IAAWJ,CAAC,CAACK,IAAb,GAAoBL,CAAC,CAACI,KAAF,CAAQH,GAAR,CAApB,GAAmCD,CAAC,CAACM,QAAF,CAAWL,GAAX,CAAhD;IAEA,OAAQ,GAAEE,IAAK,IAAGL,GAAI,EAAtB;EACD,CAND,MAMO;IACL;IACA,OAAOD,IAAI,CAACU,OAAL,CAAaC,OAAb,CAAqB,MAArB,EAA6B,EAA7B,IAAoC,IAAGV,GAAI,EAAlD;EACD;AACF,CAXD;;AAaAW,MAAM,CAACC,OAAP,GAAiBd,SAAjB"},"metadata":{},"sourceType":"script"}