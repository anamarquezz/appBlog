{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VERSION = void 0;\n\nconst fs_1 = require(\"fs\");\n\nconst path_1 = require(\"path\"); // Same structure as used in framework packages\n\n\nclass Version {\n  constructor(full) {\n    this.full = full;\n    const [major, minor, patch] = full.split('-', 1)[0].split('.', 3);\n    this.major = major;\n    this.minor = minor;\n    this.patch = patch;\n  }\n\n} // TODO: Convert this to use build-time version stamping after flipping the build script to use bazel\n// export const VERSION = new Version('0.0.0-PLACEHOLDER');\n\n\nexports.VERSION = new Version(JSON.parse((0, fs_1.readFileSync)((0, path_1.resolve)(__dirname, '../../package.json'), 'utf-8')).version);","map":{"version":3,"names":["Object","defineProperty","exports","value","VERSION","fs_1","require","path_1","Version","constructor","full","major","minor","patch","split","JSON","parse","readFileSync","resolve","__dirname","version"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular/cli/src/utilities/version.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VERSION = void 0;\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\n// Same structure as used in framework packages\nclass Version {\n    constructor(full) {\n        this.full = full;\n        const [major, minor, patch] = full.split('-', 1)[0].split('.', 3);\n        this.major = major;\n        this.minor = minor;\n        this.patch = patch;\n    }\n}\n// TODO: Convert this to use build-time version stamping after flipping the build script to use bazel\n// export const VERSION = new Version('0.0.0-PLACEHOLDER');\nexports.VERSION = new Version(JSON.parse((0, fs_1.readFileSync)((0, path_1.resolve)(__dirname, '../../package.json'), 'utf-8')).version);\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,IAAD,CAApB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,MAAD,CAAtB,C,CACA;;;AACA,MAAME,OAAN,CAAc;EACVC,WAAW,CAACC,IAAD,EAAO;IACd,KAAKA,IAAL,GAAYA,IAAZ;IACA,MAAM,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,IAAwBH,IAAI,CAACI,KAAL,CAAW,GAAX,EAAgB,CAAhB,EAAmB,CAAnB,EAAsBA,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAA9B;IACA,KAAKH,KAAL,GAAaA,KAAb;IACA,KAAKC,KAAL,GAAaA,KAAb;IACA,KAAKC,KAAL,GAAaA,KAAb;EACH;;AAPS,C,CASd;AACA;;;AACAX,OAAO,CAACE,OAAR,GAAkB,IAAII,OAAJ,CAAYO,IAAI,CAACC,KAAL,CAAW,CAAC,GAAGX,IAAI,CAACY,YAAT,EAAuB,CAAC,GAAGV,MAAM,CAACW,OAAX,EAAoBC,SAApB,EAA+B,oBAA/B,CAAvB,EAA6E,OAA7E,CAAX,EAAkGC,OAA9G,CAAlB"},"metadata":{},"sourceType":"script"}