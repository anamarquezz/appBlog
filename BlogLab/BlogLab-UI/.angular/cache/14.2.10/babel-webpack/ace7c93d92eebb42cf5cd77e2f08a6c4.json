{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.test = void 0;\n\nconst path_1 = require(\"../path\");\n\nconst buffer_1 = require(\"./buffer\");\n\nconst memory_1 = require(\"./memory\");\n\nconst sync_1 = require(\"./sync\"); // eslint-disable-next-line @typescript-eslint/no-namespace\n\n\nvar test;\n\n(function (test) {\n  class TestHost extends memory_1.SimpleMemoryHost {\n    constructor(map = {}) {\n      super();\n      this._records = [];\n      this._sync = null;\n\n      for (const filePath of Object.getOwnPropertyNames(map)) {\n        this._write((0, path_1.normalize)(filePath), (0, buffer_1.stringToFileBuffer)(map[filePath]));\n      }\n    }\n\n    get records() {\n      return [...this._records];\n    }\n\n    clearRecords() {\n      this._records = [];\n    }\n\n    get files() {\n      const sync = this.sync;\n\n      function _visit(p) {\n        return sync.list(p).map(fragment => (0, path_1.join)(p, fragment)).reduce((files, path) => {\n          if (sync.isDirectory(path)) {\n            return files.concat(_visit(path));\n          } else {\n            return files.concat(path);\n          }\n        }, []);\n      }\n\n      return _visit((0, path_1.normalize)('/'));\n    }\n\n    get sync() {\n      if (!this._sync) {\n        this._sync = new sync_1.SyncDelegateHost(this);\n      }\n\n      return this._sync;\n    }\n\n    clone() {\n      const newHost = new TestHost();\n      newHost._cache = new Map(this._cache);\n      return newHost;\n    } // Override parents functions to keep a record of all operators that were done.\n\n\n    _write(path, content) {\n      this._records.push({\n        kind: 'write',\n        path\n      });\n\n      return super._write(path, content);\n    }\n\n    _read(path) {\n      this._records.push({\n        kind: 'read',\n        path\n      });\n\n      return super._read(path);\n    }\n\n    _delete(path) {\n      this._records.push({\n        kind: 'delete',\n        path\n      });\n\n      return super._delete(path);\n    }\n\n    _rename(from, to) {\n      this._records.push({\n        kind: 'rename',\n        from,\n        to\n      });\n\n      return super._rename(from, to);\n    }\n\n    _list(path) {\n      this._records.push({\n        kind: 'list',\n        path\n      });\n\n      return super._list(path);\n    }\n\n    _exists(path) {\n      this._records.push({\n        kind: 'exists',\n        path\n      });\n\n      return super._exists(path);\n    }\n\n    _isDirectory(path) {\n      this._records.push({\n        kind: 'isDirectory',\n        path\n      });\n\n      return super._isDirectory(path);\n    }\n\n    _isFile(path) {\n      this._records.push({\n        kind: 'isFile',\n        path\n      });\n\n      return super._isFile(path);\n    }\n\n    _stat(path) {\n      this._records.push({\n        kind: 'stat',\n        path\n      });\n\n      return super._stat(path);\n    }\n\n    _watch(path, options) {\n      this._records.push({\n        kind: 'watch',\n        path\n      });\n\n      return super._watch(path, options);\n    }\n\n    $write(path, content) {\n      return super._write((0, path_1.normalize)(path), (0, buffer_1.stringToFileBuffer)(content));\n    }\n\n    $read(path) {\n      return (0, buffer_1.fileBufferToString)(super._read((0, path_1.normalize)(path)));\n    }\n\n    $list(path) {\n      return super._list((0, path_1.normalize)(path));\n    }\n\n    $exists(path) {\n      return super._exists((0, path_1.normalize)(path));\n    }\n\n    $isDirectory(path) {\n      return super._isDirectory((0, path_1.normalize)(path));\n    }\n\n    $isFile(path) {\n      return super._isFile((0, path_1.normalize)(path));\n    }\n\n  }\n\n  test.TestHost = TestHost;\n})(test = exports.test || (exports.test = {}));","map":{"version":3,"names":["Object","defineProperty","exports","value","test","path_1","require","buffer_1","memory_1","sync_1","TestHost","SimpleMemoryHost","constructor","map","_records","_sync","filePath","getOwnPropertyNames","_write","normalize","stringToFileBuffer","records","clearRecords","files","sync","_visit","p","list","fragment","join","reduce","path","isDirectory","concat","SyncDelegateHost","clone","newHost","_cache","Map","content","push","kind","_read","_delete","_rename","from","to","_list","_exists","_isDirectory","_isFile","_stat","_watch","options","$write","$read","fileBufferToString","$list","$exists","$isDirectory","$isFile"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/core/src/virtual-fs/host/test.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.test = void 0;\nconst path_1 = require(\"../path\");\nconst buffer_1 = require(\"./buffer\");\nconst memory_1 = require(\"./memory\");\nconst sync_1 = require(\"./sync\");\n// eslint-disable-next-line @typescript-eslint/no-namespace\nvar test;\n(function (test) {\n    class TestHost extends memory_1.SimpleMemoryHost {\n        constructor(map = {}) {\n            super();\n            this._records = [];\n            this._sync = null;\n            for (const filePath of Object.getOwnPropertyNames(map)) {\n                this._write((0, path_1.normalize)(filePath), (0, buffer_1.stringToFileBuffer)(map[filePath]));\n            }\n        }\n        get records() {\n            return [...this._records];\n        }\n        clearRecords() {\n            this._records = [];\n        }\n        get files() {\n            const sync = this.sync;\n            function _visit(p) {\n                return sync\n                    .list(p)\n                    .map((fragment) => (0, path_1.join)(p, fragment))\n                    .reduce((files, path) => {\n                    if (sync.isDirectory(path)) {\n                        return files.concat(_visit(path));\n                    }\n                    else {\n                        return files.concat(path);\n                    }\n                }, []);\n            }\n            return _visit((0, path_1.normalize)('/'));\n        }\n        get sync() {\n            if (!this._sync) {\n                this._sync = new sync_1.SyncDelegateHost(this);\n            }\n            return this._sync;\n        }\n        clone() {\n            const newHost = new TestHost();\n            newHost._cache = new Map(this._cache);\n            return newHost;\n        }\n        // Override parents functions to keep a record of all operators that were done.\n        _write(path, content) {\n            this._records.push({ kind: 'write', path });\n            return super._write(path, content);\n        }\n        _read(path) {\n            this._records.push({ kind: 'read', path });\n            return super._read(path);\n        }\n        _delete(path) {\n            this._records.push({ kind: 'delete', path });\n            return super._delete(path);\n        }\n        _rename(from, to) {\n            this._records.push({ kind: 'rename', from, to });\n            return super._rename(from, to);\n        }\n        _list(path) {\n            this._records.push({ kind: 'list', path });\n            return super._list(path);\n        }\n        _exists(path) {\n            this._records.push({ kind: 'exists', path });\n            return super._exists(path);\n        }\n        _isDirectory(path) {\n            this._records.push({ kind: 'isDirectory', path });\n            return super._isDirectory(path);\n        }\n        _isFile(path) {\n            this._records.push({ kind: 'isFile', path });\n            return super._isFile(path);\n        }\n        _stat(path) {\n            this._records.push({ kind: 'stat', path });\n            return super._stat(path);\n        }\n        _watch(path, options) {\n            this._records.push({ kind: 'watch', path });\n            return super._watch(path, options);\n        }\n        $write(path, content) {\n            return super._write((0, path_1.normalize)(path), (0, buffer_1.stringToFileBuffer)(content));\n        }\n        $read(path) {\n            return (0, buffer_1.fileBufferToString)(super._read((0, path_1.normalize)(path)));\n        }\n        $list(path) {\n            return super._list((0, path_1.normalize)(path));\n        }\n        $exists(path) {\n            return super._exists((0, path_1.normalize)(path));\n        }\n        $isDirectory(path) {\n            return super._isDirectory((0, path_1.normalize)(path));\n        }\n        $isFile(path) {\n            return super._isFile((0, path_1.normalize)(path));\n        }\n    }\n    test.TestHost = TestHost;\n})(test = exports.test || (exports.test = {}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}