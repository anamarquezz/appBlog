{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnsupportedPlatformException = exports.UnimplementedException = exports.MergeConflictException = exports.InvalidUpdateRecordException = exports.ContentHasMutatedException = exports.PathIsFileException = exports.PathIsDirectoryException = exports.FileAlreadyExistException = exports.FileDoesNotExistException = exports.UnknownException = exports.BaseException = void 0;\n\nclass BaseException extends Error {\n  constructor(message = '') {\n    super(message);\n  }\n\n}\n\nexports.BaseException = BaseException;\n\nclass UnknownException extends BaseException {\n  constructor(message) {\n    super(message);\n  }\n\n}\n\nexports.UnknownException = UnknownException; // Exceptions\n\nclass FileDoesNotExistException extends BaseException {\n  constructor(path) {\n    super(`Path \"${path}\" does not exist.`);\n  }\n\n}\n\nexports.FileDoesNotExistException = FileDoesNotExistException;\n\nclass FileAlreadyExistException extends BaseException {\n  constructor(path) {\n    super(`Path \"${path}\" already exist.`);\n  }\n\n}\n\nexports.FileAlreadyExistException = FileAlreadyExistException;\n\nclass PathIsDirectoryException extends BaseException {\n  constructor(path) {\n    super(`Path \"${path}\" is a directory.`);\n  }\n\n}\n\nexports.PathIsDirectoryException = PathIsDirectoryException;\n\nclass PathIsFileException extends BaseException {\n  constructor(path) {\n    super(`Path \"${path}\" is a file.`);\n  }\n\n}\n\nexports.PathIsFileException = PathIsFileException;\n/**\n * @deprecated since version 14. Use the same symbol from `@angular-devkit/schematics`.\n */\n\nclass ContentHasMutatedException extends BaseException {\n  constructor(path) {\n    super(`Content at path \"${path}\" has changed between the start and the end of an update.`);\n  }\n\n}\n\nexports.ContentHasMutatedException = ContentHasMutatedException;\n/**\n * @deprecated since version 14. Use the same symbol from `@angular-devkit/schematics`.\n */\n\nclass InvalidUpdateRecordException extends BaseException {\n  constructor() {\n    super(`Invalid record instance.`);\n  }\n\n}\n\nexports.InvalidUpdateRecordException = InvalidUpdateRecordException;\n/**\n * @deprecated since version 14. Use the same symbol from `@angular-devkit/schematics`.\n */\n\nclass MergeConflictException extends BaseException {\n  constructor(path) {\n    super(`A merge conflicted on path \"${path}\".`);\n  }\n\n}\n\nexports.MergeConflictException = MergeConflictException;\n/**\n * @deprecated since version 14. Create a custom exception implementation instead.\n */\n\nclass UnimplementedException extends BaseException {\n  constructor() {\n    super('This function is unimplemented.');\n  }\n\n}\n\nexports.UnimplementedException = UnimplementedException;\n/**\n * @deprecated since version 14. Create a custom exception implementation instead.\n */\n\nclass UnsupportedPlatformException extends BaseException {\n  constructor() {\n    super('This platform is not supported by this code path.');\n  }\n\n}\n\nexports.UnsupportedPlatformException = UnsupportedPlatformException;","map":{"version":3,"names":["Object","defineProperty","exports","value","UnsupportedPlatformException","UnimplementedException","MergeConflictException","InvalidUpdateRecordException","ContentHasMutatedException","PathIsFileException","PathIsDirectoryException","FileAlreadyExistException","FileDoesNotExistException","UnknownException","BaseException","Error","constructor","message","path"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/core/src/exception.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnsupportedPlatformException = exports.UnimplementedException = exports.MergeConflictException = exports.InvalidUpdateRecordException = exports.ContentHasMutatedException = exports.PathIsFileException = exports.PathIsDirectoryException = exports.FileAlreadyExistException = exports.FileDoesNotExistException = exports.UnknownException = exports.BaseException = void 0;\nclass BaseException extends Error {\n    constructor(message = '') {\n        super(message);\n    }\n}\nexports.BaseException = BaseException;\nclass UnknownException extends BaseException {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.UnknownException = UnknownException;\n// Exceptions\nclass FileDoesNotExistException extends BaseException {\n    constructor(path) {\n        super(`Path \"${path}\" does not exist.`);\n    }\n}\nexports.FileDoesNotExistException = FileDoesNotExistException;\nclass FileAlreadyExistException extends BaseException {\n    constructor(path) {\n        super(`Path \"${path}\" already exist.`);\n    }\n}\nexports.FileAlreadyExistException = FileAlreadyExistException;\nclass PathIsDirectoryException extends BaseException {\n    constructor(path) {\n        super(`Path \"${path}\" is a directory.`);\n    }\n}\nexports.PathIsDirectoryException = PathIsDirectoryException;\nclass PathIsFileException extends BaseException {\n    constructor(path) {\n        super(`Path \"${path}\" is a file.`);\n    }\n}\nexports.PathIsFileException = PathIsFileException;\n/**\n * @deprecated since version 14. Use the same symbol from `@angular-devkit/schematics`.\n */\nclass ContentHasMutatedException extends BaseException {\n    constructor(path) {\n        super(`Content at path \"${path}\" has changed between the start and the end of an update.`);\n    }\n}\nexports.ContentHasMutatedException = ContentHasMutatedException;\n/**\n * @deprecated since version 14. Use the same symbol from `@angular-devkit/schematics`.\n */\nclass InvalidUpdateRecordException extends BaseException {\n    constructor() {\n        super(`Invalid record instance.`);\n    }\n}\nexports.InvalidUpdateRecordException = InvalidUpdateRecordException;\n/**\n * @deprecated since version 14. Use the same symbol from `@angular-devkit/schematics`.\n */\nclass MergeConflictException extends BaseException {\n    constructor(path) {\n        super(`A merge conflicted on path \"${path}\".`);\n    }\n}\nexports.MergeConflictException = MergeConflictException;\n/**\n * @deprecated since version 14. Create a custom exception implementation instead.\n */\nclass UnimplementedException extends BaseException {\n    constructor() {\n        super('This function is unimplemented.');\n    }\n}\nexports.UnimplementedException = UnimplementedException;\n/**\n * @deprecated since version 14. Create a custom exception implementation instead.\n */\nclass UnsupportedPlatformException extends BaseException {\n    constructor() {\n        super('This platform is not supported by this code path.');\n    }\n}\nexports.UnsupportedPlatformException = UnsupportedPlatformException;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,4BAAR,GAAuCF,OAAO,CAACG,sBAAR,GAAiCH,OAAO,CAACI,sBAAR,GAAiCJ,OAAO,CAACK,4BAAR,GAAuCL,OAAO,CAACM,0BAAR,GAAqCN,OAAO,CAACO,mBAAR,GAA8BP,OAAO,CAACQ,wBAAR,GAAmCR,OAAO,CAACS,yBAAR,GAAoCT,OAAO,CAACU,yBAAR,GAAoCV,OAAO,CAACW,gBAAR,GAA2BX,OAAO,CAACY,aAAR,GAAwB,KAAK,CAAtX;;AACA,MAAMA,aAAN,SAA4BC,KAA5B,CAAkC;EAC9BC,WAAW,CAACC,OAAO,GAAG,EAAX,EAAe;IACtB,MAAMA,OAAN;EACH;;AAH6B;;AAKlCf,OAAO,CAACY,aAAR,GAAwBA,aAAxB;;AACA,MAAMD,gBAAN,SAA+BC,aAA/B,CAA6C;EACzCE,WAAW,CAACC,OAAD,EAAU;IACjB,MAAMA,OAAN;EACH;;AAHwC;;AAK7Cf,OAAO,CAACW,gBAAR,GAA2BA,gBAA3B,C,CACA;;AACA,MAAMD,yBAAN,SAAwCE,aAAxC,CAAsD;EAClDE,WAAW,CAACE,IAAD,EAAO;IACd,MAAO,SAAQA,IAAK,mBAApB;EACH;;AAHiD;;AAKtDhB,OAAO,CAACU,yBAAR,GAAoCA,yBAApC;;AACA,MAAMD,yBAAN,SAAwCG,aAAxC,CAAsD;EAClDE,WAAW,CAACE,IAAD,EAAO;IACd,MAAO,SAAQA,IAAK,kBAApB;EACH;;AAHiD;;AAKtDhB,OAAO,CAACS,yBAAR,GAAoCA,yBAApC;;AACA,MAAMD,wBAAN,SAAuCI,aAAvC,CAAqD;EACjDE,WAAW,CAACE,IAAD,EAAO;IACd,MAAO,SAAQA,IAAK,mBAApB;EACH;;AAHgD;;AAKrDhB,OAAO,CAACQ,wBAAR,GAAmCA,wBAAnC;;AACA,MAAMD,mBAAN,SAAkCK,aAAlC,CAAgD;EAC5CE,WAAW,CAACE,IAAD,EAAO;IACd,MAAO,SAAQA,IAAK,cAApB;EACH;;AAH2C;;AAKhDhB,OAAO,CAACO,mBAAR,GAA8BA,mBAA9B;AACA;AACA;AACA;;AACA,MAAMD,0BAAN,SAAyCM,aAAzC,CAAuD;EACnDE,WAAW,CAACE,IAAD,EAAO;IACd,MAAO,oBAAmBA,IAAK,2DAA/B;EACH;;AAHkD;;AAKvDhB,OAAO,CAACM,0BAAR,GAAqCA,0BAArC;AACA;AACA;AACA;;AACA,MAAMD,4BAAN,SAA2CO,aAA3C,CAAyD;EACrDE,WAAW,GAAG;IACV,MAAO,0BAAP;EACH;;AAHoD;;AAKzDd,OAAO,CAACK,4BAAR,GAAuCA,4BAAvC;AACA;AACA;AACA;;AACA,MAAMD,sBAAN,SAAqCQ,aAArC,CAAmD;EAC/CE,WAAW,CAACE,IAAD,EAAO;IACd,MAAO,+BAA8BA,IAAK,IAA1C;EACH;;AAH8C;;AAKnDhB,OAAO,CAACI,sBAAR,GAAiCA,sBAAjC;AACA;AACA;AACA;;AACA,MAAMD,sBAAN,SAAqCS,aAArC,CAAmD;EAC/CE,WAAW,GAAG;IACV,MAAM,iCAAN;EACH;;AAH8C;;AAKnDd,OAAO,CAACG,sBAAR,GAAiCA,sBAAjC;AACA;AACA;AACA;;AACA,MAAMD,4BAAN,SAA2CU,aAA3C,CAAyD;EACrDE,WAAW,GAAG;IACV,MAAM,mDAAN;EACH;;AAHoD;;AAKzDd,OAAO,CAACE,4BAAR,GAAuCA,4BAAvC"},"metadata":{},"sourceType":"script"}