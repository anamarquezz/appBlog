{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DryRunSink = void 0;\n\nconst core_1 = require(\"@angular-devkit/core\");\n\nconst node_1 = require(\"@angular-devkit/core/node\");\n\nconst rxjs_1 = require(\"rxjs\");\n\nconst host_1 = require(\"./host\");\n\nclass DryRunSink extends host_1.HostSink {\n  constructor(host, force = false) {\n    super(typeof host == 'string' ? new core_1.virtualFs.ScopedHost(new node_1.NodeJsSyncHost(), (0, core_1.normalize)(host)) : host, force);\n    this._subject = new rxjs_1.Subject();\n    this._fileDoesNotExistExceptionSet = new Set();\n    this._fileAlreadyExistExceptionSet = new Set();\n    this.reporter = this._subject.asObservable();\n  }\n\n  _fileAlreadyExistException(path) {\n    this._fileAlreadyExistExceptionSet.add(path);\n  }\n\n  _fileDoesNotExistException(path) {\n    this._fileDoesNotExistExceptionSet.add(path);\n  }\n\n  _done() {\n    this._fileAlreadyExistExceptionSet.forEach(path => {\n      this._subject.next({\n        kind: 'error',\n        description: 'alreadyExist',\n        path\n      });\n    });\n\n    this._fileDoesNotExistExceptionSet.forEach(path => {\n      this._subject.next({\n        kind: 'error',\n        description: 'doesNotExist',\n        path\n      });\n    });\n\n    this._filesToDelete.forEach(path => {\n      // Check if this is a renaming.\n      for (const [from] of this._filesToRename) {\n        if (from == path) {\n          // The event is sent later on.\n          return;\n        }\n      }\n\n      this._subject.next({\n        kind: 'delete',\n        path\n      });\n    });\n\n    this._filesToRename.forEach(([path, to]) => {\n      this._subject.next({\n        kind: 'rename',\n        path,\n        to\n      });\n    });\n\n    this._filesToCreate.forEach((content, path) => {\n      // Check if this is a renaming.\n      for (const [, to] of this._filesToRename) {\n        if (to == path) {\n          // The event is sent later on.\n          return;\n        }\n      }\n\n      if (this._fileAlreadyExistExceptionSet.has(path) || this._fileDoesNotExistExceptionSet.has(path)) {\n        return;\n      }\n\n      this._subject.next({\n        kind: 'create',\n        path,\n        content: content.generate()\n      });\n    });\n\n    this._filesToUpdate.forEach((content, path) => {\n      this._subject.next({\n        kind: 'update',\n        path,\n        content: content.generate()\n      });\n    });\n\n    this._subject.complete();\n\n    return (0, rxjs_1.of)(undefined);\n  }\n\n}\n\nexports.DryRunSink = DryRunSink;","map":{"version":3,"names":["Object","defineProperty","exports","value","DryRunSink","core_1","require","node_1","rxjs_1","host_1","HostSink","constructor","host","force","virtualFs","ScopedHost","NodeJsSyncHost","normalize","_subject","Subject","_fileDoesNotExistExceptionSet","Set","_fileAlreadyExistExceptionSet","reporter","asObservable","_fileAlreadyExistException","path","add","_fileDoesNotExistException","_done","forEach","next","kind","description","_filesToDelete","from","_filesToRename","to","_filesToCreate","content","has","generate","_filesToUpdate","complete","of","undefined"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/schematics/src/sink/dryrun.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DryRunSink = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst node_1 = require(\"@angular-devkit/core/node\");\nconst rxjs_1 = require(\"rxjs\");\nconst host_1 = require(\"./host\");\nclass DryRunSink extends host_1.HostSink {\n    constructor(host, force = false) {\n        super(typeof host == 'string'\n            ? new core_1.virtualFs.ScopedHost(new node_1.NodeJsSyncHost(), (0, core_1.normalize)(host))\n            : host, force);\n        this._subject = new rxjs_1.Subject();\n        this._fileDoesNotExistExceptionSet = new Set();\n        this._fileAlreadyExistExceptionSet = new Set();\n        this.reporter = this._subject.asObservable();\n    }\n    _fileAlreadyExistException(path) {\n        this._fileAlreadyExistExceptionSet.add(path);\n    }\n    _fileDoesNotExistException(path) {\n        this._fileDoesNotExistExceptionSet.add(path);\n    }\n    _done() {\n        this._fileAlreadyExistExceptionSet.forEach((path) => {\n            this._subject.next({\n                kind: 'error',\n                description: 'alreadyExist',\n                path,\n            });\n        });\n        this._fileDoesNotExistExceptionSet.forEach((path) => {\n            this._subject.next({\n                kind: 'error',\n                description: 'doesNotExist',\n                path,\n            });\n        });\n        this._filesToDelete.forEach((path) => {\n            // Check if this is a renaming.\n            for (const [from] of this._filesToRename) {\n                if (from == path) {\n                    // The event is sent later on.\n                    return;\n                }\n            }\n            this._subject.next({ kind: 'delete', path });\n        });\n        this._filesToRename.forEach(([path, to]) => {\n            this._subject.next({ kind: 'rename', path, to });\n        });\n        this._filesToCreate.forEach((content, path) => {\n            // Check if this is a renaming.\n            for (const [, to] of this._filesToRename) {\n                if (to == path) {\n                    // The event is sent later on.\n                    return;\n                }\n            }\n            if (this._fileAlreadyExistExceptionSet.has(path) ||\n                this._fileDoesNotExistExceptionSet.has(path)) {\n                return;\n            }\n            this._subject.next({ kind: 'create', path, content: content.generate() });\n        });\n        this._filesToUpdate.forEach((content, path) => {\n            this._subject.next({ kind: 'update', path, content: content.generate() });\n        });\n        this._subject.complete();\n        return (0, rxjs_1.of)(undefined);\n    }\n}\nexports.DryRunSink = DryRunSink;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}