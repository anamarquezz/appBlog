{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SocksProxyAgent = void 0;\n\nconst socks_1 = require(\"socks\");\n\nconst agent_base_1 = require(\"agent-base\");\n\nconst debug_1 = __importDefault(require(\"debug\"));\n\nconst dns_1 = __importDefault(require(\"dns\"));\n\nconst tls_1 = __importDefault(require(\"tls\"));\n\nconst debug = (0, debug_1.default)('socks-proxy-agent');\n\nfunction parseSocksProxy(opts) {\n  var _a;\n\n  let port = 0;\n  let lookup = false;\n  let type = 5;\n  const host = opts.hostname;\n\n  if (host == null) {\n    throw new TypeError('No \"host\"');\n  }\n\n  if (typeof opts.port === 'number') {\n    port = opts.port;\n  } else if (typeof opts.port === 'string') {\n    port = parseInt(opts.port, 10);\n  } // From RFC 1928, Section 3: https://tools.ietf.org/html/rfc1928#section-3\n  // \"The SOCKS service is conventionally located on TCP port 1080\"\n\n\n  if (port == null) {\n    port = 1080;\n  } // figure out if we want socks v4 or v5, based on the \"protocol\" used.\n  // Defaults to 5.\n\n\n  if (opts.protocol != null) {\n    switch (opts.protocol.replace(':', '')) {\n      case 'socks4':\n        lookup = true;\n      // pass through\n\n      case 'socks4a':\n        type = 4;\n        break;\n\n      case 'socks5':\n        lookup = true;\n      // pass through\n\n      case 'socks': // no version specified, default to 5h\n\n      case 'socks5h':\n        type = 5;\n        break;\n\n      default:\n        throw new TypeError(`A \"socks\" protocol must be specified! Got: ${String(opts.protocol)}`);\n    }\n  }\n\n  if (typeof opts.type !== 'undefined') {\n    if (opts.type === 4 || opts.type === 5) {\n      type = opts.type;\n    } else {\n      throw new TypeError(`\"type\" must be 4 or 5, got: ${String(opts.type)}`);\n    }\n  }\n\n  const proxy = {\n    host,\n    port,\n    type\n  };\n  let userId = (_a = opts.userId) !== null && _a !== void 0 ? _a : opts.username;\n  let password = opts.password;\n\n  if (opts.auth != null) {\n    const auth = opts.auth.split(':');\n    userId = auth[0];\n    password = auth[1];\n  }\n\n  if (userId != null) {\n    Object.defineProperty(proxy, 'userId', {\n      value: userId,\n      enumerable: false\n    });\n  }\n\n  if (password != null) {\n    Object.defineProperty(proxy, 'password', {\n      value: password,\n      enumerable: false\n    });\n  }\n\n  return {\n    lookup,\n    proxy\n  };\n}\n\nconst normalizeProxyOptions = input => {\n  let proxyOptions;\n\n  if (typeof input === 'string') {\n    proxyOptions = new URL(input);\n  } else {\n    proxyOptions = input;\n  }\n\n  if (proxyOptions == null) {\n    throw new TypeError('a SOCKS proxy server `host` and `port` must be specified!');\n  }\n\n  return proxyOptions;\n};\n\nclass SocksProxyAgent extends agent_base_1.Agent {\n  constructor(input, options) {\n    var _a;\n\n    const proxyOptions = normalizeProxyOptions(input);\n    super(proxyOptions);\n    const parsedProxy = parseSocksProxy(proxyOptions);\n    this.shouldLookup = parsedProxy.lookup;\n    this.proxy = parsedProxy.proxy;\n    this.tlsConnectionOptions = proxyOptions.tls != null ? proxyOptions.tls : {};\n    this.timeout = (_a = options === null || options === void 0 ? void 0 : options.timeout) !== null && _a !== void 0 ? _a : null;\n  }\n  /**\n   * Initiates a SOCKS connection to the specified SOCKS proxy server,\n   * which in turn connects to the specified remote host and port.\n   *\n   * @api protected\n   */\n\n\n  callback(req, opts) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function* () {\n      const {\n        shouldLookup,\n        proxy,\n        timeout\n      } = this;\n      let {\n        host,\n        port,\n        lookup: lookupCallback\n      } = opts;\n\n      if (host == null) {\n        throw new Error('No `host` defined!');\n      }\n\n      if (shouldLookup) {\n        // Client-side DNS resolution for \"4\" and \"5\" socks proxy versions.\n        host = yield new Promise((resolve, reject) => {\n          // Use the request's custom lookup, if one was configured:\n          const lookupFn = lookupCallback !== null && lookupCallback !== void 0 ? lookupCallback : dns_1.default.lookup;\n          lookupFn(host, {}, (err, res) => {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(res);\n            }\n          });\n        });\n      }\n\n      const socksOpts = {\n        proxy,\n        destination: {\n          host,\n          port\n        },\n        command: 'connect',\n        timeout: timeout !== null && timeout !== void 0 ? timeout : undefined\n      };\n\n      const cleanup = tlsSocket => {\n        req.destroy();\n        socket.destroy();\n        if (tlsSocket) tlsSocket.destroy();\n      };\n\n      debug('Creating socks proxy connection: %o', socksOpts);\n      const {\n        socket\n      } = yield socks_1.SocksClient.createConnection(socksOpts);\n      debug('Successfully created socks proxy connection');\n\n      if (timeout !== null) {\n        socket.setTimeout(timeout);\n        socket.on('timeout', () => cleanup());\n      }\n\n      if (opts.secureEndpoint) {\n        // The proxy is connecting to a TLS server, so upgrade\n        // this socket connection to a TLS connection.\n        debug('Upgrading socket connection to TLS');\n        const servername = (_a = opts.servername) !== null && _a !== void 0 ? _a : opts.host;\n        const tlsSocket = tls_1.default.connect(Object.assign(Object.assign(Object.assign({}, omit(opts, 'host', 'hostname', 'path', 'port')), {\n          socket,\n          servername\n        }), this.tlsConnectionOptions));\n        tlsSocket.once('error', error => {\n          debug('socket TLS error', error.message);\n          cleanup(tlsSocket);\n        });\n        return tlsSocket;\n      }\n\n      return socket;\n    });\n  }\n\n}\n\nexports.SocksProxyAgent = SocksProxyAgent;\n\nfunction omit(obj, ...keys) {\n  const ret = {};\n  let key;\n\n  for (key in obj) {\n    if (!keys.includes(key)) {\n      ret[key] = obj[key];\n    }\n  }\n\n  return ret;\n}","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","SocksProxyAgent","socks_1","require","agent_base_1","debug_1","dns_1","tls_1","debug","default","parseSocksProxy","opts","_a","port","lookup","type","host","hostname","TypeError","parseInt","protocol","replace","String","proxy","userId","username","password","auth","split","enumerable","normalizeProxyOptions","input","proxyOptions","URL","Agent","constructor","options","parsedProxy","shouldLookup","tlsConnectionOptions","tls","timeout","callback","req","lookupCallback","Error","lookupFn","err","res","socksOpts","destination","command","undefined","cleanup","tlsSocket","destroy","socket","SocksClient","createConnection","setTimeout","on","secureEndpoint","servername","connect","assign","omit","once","error","message","obj","keys","ret","key","includes"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/socks-proxy-agent/dist/index.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SocksProxyAgent = void 0;\nconst socks_1 = require(\"socks\");\nconst agent_base_1 = require(\"agent-base\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst dns_1 = __importDefault(require(\"dns\"));\nconst tls_1 = __importDefault(require(\"tls\"));\nconst debug = (0, debug_1.default)('socks-proxy-agent');\nfunction parseSocksProxy(opts) {\n    var _a;\n    let port = 0;\n    let lookup = false;\n    let type = 5;\n    const host = opts.hostname;\n    if (host == null) {\n        throw new TypeError('No \"host\"');\n    }\n    if (typeof opts.port === 'number') {\n        port = opts.port;\n    }\n    else if (typeof opts.port === 'string') {\n        port = parseInt(opts.port, 10);\n    }\n    // From RFC 1928, Section 3: https://tools.ietf.org/html/rfc1928#section-3\n    // \"The SOCKS service is conventionally located on TCP port 1080\"\n    if (port == null) {\n        port = 1080;\n    }\n    // figure out if we want socks v4 or v5, based on the \"protocol\" used.\n    // Defaults to 5.\n    if (opts.protocol != null) {\n        switch (opts.protocol.replace(':', '')) {\n            case 'socks4':\n                lookup = true;\n            // pass through\n            case 'socks4a':\n                type = 4;\n                break;\n            case 'socks5':\n                lookup = true;\n            // pass through\n            case 'socks': // no version specified, default to 5h\n            case 'socks5h':\n                type = 5;\n                break;\n            default:\n                throw new TypeError(`A \"socks\" protocol must be specified! Got: ${String(opts.protocol)}`);\n        }\n    }\n    if (typeof opts.type !== 'undefined') {\n        if (opts.type === 4 || opts.type === 5) {\n            type = opts.type;\n        }\n        else {\n            throw new TypeError(`\"type\" must be 4 or 5, got: ${String(opts.type)}`);\n        }\n    }\n    const proxy = {\n        host,\n        port,\n        type\n    };\n    let userId = (_a = opts.userId) !== null && _a !== void 0 ? _a : opts.username;\n    let password = opts.password;\n    if (opts.auth != null) {\n        const auth = opts.auth.split(':');\n        userId = auth[0];\n        password = auth[1];\n    }\n    if (userId != null) {\n        Object.defineProperty(proxy, 'userId', {\n            value: userId,\n            enumerable: false\n        });\n    }\n    if (password != null) {\n        Object.defineProperty(proxy, 'password', {\n            value: password,\n            enumerable: false\n        });\n    }\n    return { lookup, proxy };\n}\nconst normalizeProxyOptions = (input) => {\n    let proxyOptions;\n    if (typeof input === 'string') {\n        proxyOptions = new URL(input);\n    }\n    else {\n        proxyOptions = input;\n    }\n    if (proxyOptions == null) {\n        throw new TypeError('a SOCKS proxy server `host` and `port` must be specified!');\n    }\n    return proxyOptions;\n};\nclass SocksProxyAgent extends agent_base_1.Agent {\n    constructor(input, options) {\n        var _a;\n        const proxyOptions = normalizeProxyOptions(input);\n        super(proxyOptions);\n        const parsedProxy = parseSocksProxy(proxyOptions);\n        this.shouldLookup = parsedProxy.lookup;\n        this.proxy = parsedProxy.proxy;\n        this.tlsConnectionOptions = proxyOptions.tls != null ? proxyOptions.tls : {};\n        this.timeout = (_a = options === null || options === void 0 ? void 0 : options.timeout) !== null && _a !== void 0 ? _a : null;\n    }\n    /**\n     * Initiates a SOCKS connection to the specified SOCKS proxy server,\n     * which in turn connects to the specified remote host and port.\n     *\n     * @api protected\n     */\n    callback(req, opts) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { shouldLookup, proxy, timeout } = this;\n            let { host, port, lookup: lookupCallback } = opts;\n            if (host == null) {\n                throw new Error('No `host` defined!');\n            }\n            if (shouldLookup) {\n                // Client-side DNS resolution for \"4\" and \"5\" socks proxy versions.\n                host = yield new Promise((resolve, reject) => {\n                    // Use the request's custom lookup, if one was configured:\n                    const lookupFn = lookupCallback !== null && lookupCallback !== void 0 ? lookupCallback : dns_1.default.lookup;\n                    lookupFn(host, {}, (err, res) => {\n                        if (err) {\n                            reject(err);\n                        }\n                        else {\n                            resolve(res);\n                        }\n                    });\n                });\n            }\n            const socksOpts = {\n                proxy,\n                destination: { host, port },\n                command: 'connect',\n                timeout: timeout !== null && timeout !== void 0 ? timeout : undefined\n            };\n            const cleanup = (tlsSocket) => {\n                req.destroy();\n                socket.destroy();\n                if (tlsSocket)\n                    tlsSocket.destroy();\n            };\n            debug('Creating socks proxy connection: %o', socksOpts);\n            const { socket } = yield socks_1.SocksClient.createConnection(socksOpts);\n            debug('Successfully created socks proxy connection');\n            if (timeout !== null) {\n                socket.setTimeout(timeout);\n                socket.on('timeout', () => cleanup());\n            }\n            if (opts.secureEndpoint) {\n                // The proxy is connecting to a TLS server, so upgrade\n                // this socket connection to a TLS connection.\n                debug('Upgrading socket connection to TLS');\n                const servername = (_a = opts.servername) !== null && _a !== void 0 ? _a : opts.host;\n                const tlsSocket = tls_1.default.connect(Object.assign(Object.assign(Object.assign({}, omit(opts, 'host', 'hostname', 'path', 'port')), { socket,\n                    servername }), this.tlsConnectionOptions));\n                tlsSocket.once('error', (error) => {\n                    debug('socket TLS error', error.message);\n                    cleanup(tlsSocket);\n                });\n                return tlsSocket;\n            }\n            return socket;\n        });\n    }\n}\nexports.SocksProxyAgent = SocksProxyAgent;\nfunction omit(obj, ...keys) {\n    const ret = {};\n    let key;\n    for (key in obj) {\n        if (!keys.includes(key)) {\n            ret[key] = obj[key];\n        }\n    }\n    return ret;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}