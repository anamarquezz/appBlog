{"ast":null,"code":"'use strict';\n\nconst fs = require('graceful-fs');\n\nconst path = require('path');\n\nconst log = require('npmlog');\n\nconst os = require('os');\n\nconst processRelease = require('./process-release');\n\nconst win = process.platform === 'win32';\n\nconst findNodeDirectory = require('./find-node-directory');\n\nconst createConfigGypi = require('./create-config-gypi');\n\nconst msgFormat = require('util').format;\n\nvar findPython = require('./find-python');\n\nif (win) {\n  var findVisualStudio = require('./find-visualstudio');\n}\n\nfunction configure(gyp, argv, callback) {\n  var python;\n  var buildDir = path.resolve('build');\n  var buildBinsDir = path.join(buildDir, 'node_gyp_bins');\n  var configNames = ['config.gypi', 'common.gypi'];\n  var configs = [];\n  var nodeDir;\n  var release = processRelease(argv, gyp, process.version, process.release);\n  findPython(gyp.opts.python, function (err, found) {\n    if (err) {\n      callback(err);\n    } else {\n      python = found;\n      getNodeDir();\n    }\n  });\n\n  function getNodeDir() {\n    // 'python' should be set by now\n    process.env.PYTHON = python;\n\n    if (gyp.opts.nodedir) {\n      // --nodedir was specified. use that for the dev files\n      nodeDir = gyp.opts.nodedir.replace(/^~/, os.homedir());\n      log.verbose('get node dir', 'compiling against specified --nodedir dev files: %s', nodeDir);\n      createBuildDir();\n    } else {\n      // if no --nodedir specified, ensure node dependencies are installed\n      if ('v' + release.version !== process.version) {\n        // if --target was given, then determine a target version to compile for\n        log.verbose('get node dir', 'compiling against --target node version: %s', release.version);\n      } else {\n        // if no --target was specified then use the current host node version\n        log.verbose('get node dir', 'no --target version specified, falling back to host node version: %s', release.version);\n      }\n\n      if (!release.semver) {\n        // could not parse the version string with semver\n        return callback(new Error('Invalid version number: ' + release.version));\n      } // If the tarball option is set, always remove and reinstall the headers\n      // into devdir. Otherwise only install if they're not already there.\n\n\n      gyp.opts.ensure = !gyp.opts.tarball;\n      gyp.commands.install([release.version], function (err) {\n        if (err) {\n          return callback(err);\n        }\n\n        log.verbose('get node dir', 'target node version installed:', release.versionDir);\n        nodeDir = path.resolve(gyp.devDir, release.versionDir);\n        createBuildDir();\n      });\n    }\n  }\n\n  function createBuildDir() {\n    log.verbose('build dir', 'attempting to create \"build\" dir: %s', buildDir);\n    const deepestBuildDirSubdirectory = win ? buildDir : buildBinsDir;\n    fs.mkdir(deepestBuildDirSubdirectory, {\n      recursive: true\n    }, function (err, isNew) {\n      if (err) {\n        return callback(err);\n      }\n\n      log.verbose('build dir', '\"build\" dir needed to be created?', isNew ? 'Yes' : 'No');\n\n      if (win) {\n        findVisualStudio(release.semver, gyp.opts.msvs_version, createConfigFile);\n      } else {\n        createPythonSymlink();\n        createConfigFile();\n      }\n    });\n  }\n\n  function createPythonSymlink() {\n    const symlinkDestination = path.join(buildBinsDir, 'python3');\n    log.verbose('python symlink', `creating symlink to \"${python}\" at \"${symlinkDestination}\"`);\n    fs.unlink(symlinkDestination, function (err) {\n      if (err && err.code !== 'ENOENT') {\n        log.verbose('python symlink', 'error when attempting to remove existing symlink');\n        log.verbose('python symlink', err.stack, 'errno: ' + err.errno);\n      }\n\n      fs.symlink(python, symlinkDestination, function (err) {\n        if (err) {\n          log.verbose('python symlink', 'error when attempting to create Python symlink');\n          log.verbose('python symlink', err.stack, 'errno: ' + err.errno);\n        }\n      });\n    });\n  }\n\n  function createConfigFile(err, vsInfo) {\n    if (err) {\n      return callback(err);\n    }\n\n    if (process.platform === 'win32') {\n      process.env.GYP_MSVS_VERSION = Math.min(vsInfo.versionYear, 2015);\n      process.env.GYP_MSVS_OVERRIDE_PATH = vsInfo.path;\n    }\n\n    createConfigGypi({\n      gyp,\n      buildDir,\n      nodeDir,\n      vsInfo\n    }).then(configPath => {\n      configs.push(configPath);\n      findConfigs();\n    }).catch(err => {\n      callback(err);\n    });\n  }\n\n  function findConfigs() {\n    var name = configNames.shift();\n\n    if (!name) {\n      return runGyp();\n    }\n\n    var fullPath = path.resolve(name);\n    log.verbose(name, 'checking for gypi file: %s', fullPath);\n    fs.stat(fullPath, function (err) {\n      if (err) {\n        if (err.code === 'ENOENT') {\n          findConfigs(); // check next gypi filename\n        } else {\n          callback(err);\n        }\n      } else {\n        log.verbose(name, 'found gypi file');\n        configs.push(fullPath);\n        findConfigs();\n      }\n    });\n  }\n\n  function runGyp(err) {\n    if (err) {\n      return callback(err);\n    }\n\n    if (!~argv.indexOf('-f') && !~argv.indexOf('--format')) {\n      if (win) {\n        log.verbose('gyp', 'gyp format was not specified; forcing \"msvs\"'); // force the 'make' target for non-Windows\n\n        argv.push('-f', 'msvs');\n      } else {\n        log.verbose('gyp', 'gyp format was not specified; forcing \"make\"'); // force the 'make' target for non-Windows\n\n        argv.push('-f', 'make');\n      }\n    } // include all the \".gypi\" files that were found\n\n\n    configs.forEach(function (config) {\n      argv.push('-I', config);\n    }); // For AIX and z/OS we need to set up the path to the exports file\n    // which contains the symbols needed for linking.\n\n    var nodeExpFile;\n\n    if (process.platform === 'aix' || process.platform === 'os390' || process.platform === 'os400') {\n      var ext = process.platform === 'os390' ? 'x' : 'exp';\n      var nodeRootDir = findNodeDirectory();\n      var candidates;\n\n      if (process.platform === 'aix' || process.platform === 'os400') {\n        candidates = ['include/node/node', 'out/Release/node', 'out/Debug/node', 'node'].map(function (file) {\n          return file + '.' + ext;\n        });\n      } else {\n        candidates = ['out/Release/lib.target/libnode', 'out/Debug/lib.target/libnode', 'out/Release/obj.target/libnode', 'out/Debug/obj.target/libnode', 'lib/libnode'].map(function (file) {\n          return file + '.' + ext;\n        });\n      }\n\n      var logprefix = 'find exports file';\n      nodeExpFile = findAccessibleSync(logprefix, nodeRootDir, candidates);\n\n      if (nodeExpFile !== undefined) {\n        log.verbose(logprefix, 'Found exports file: %s', nodeExpFile);\n      } else {\n        var msg = msgFormat('Could not find node.%s file in %s', ext, nodeRootDir);\n        log.error(logprefix, 'Could not find exports file');\n        return callback(new Error(msg));\n      }\n    } // For z/OS we need to set up the path to zoslib include directory,\n    // which contains headers included in v8config.h.\n\n\n    var zoslibIncDir;\n\n    if (process.platform === 'os390') {\n      logprefix = \"find zoslib's zos-base.h:\";\n      let msg;\n      var zoslibIncPath = process.env.ZOSLIB_INCLUDES;\n\n      if (zoslibIncPath) {\n        zoslibIncPath = findAccessibleSync(logprefix, zoslibIncPath, ['zos-base.h']);\n\n        if (zoslibIncPath === undefined) {\n          msg = msgFormat('Could not find zos-base.h file in the directory set ' + 'in ZOSLIB_INCLUDES environment variable: %s; set it ' + 'to the correct path, or unset it to search %s', process.env.ZOSLIB_INCLUDES, nodeRootDir);\n        }\n      } else {\n        candidates = ['include/node/zoslib/zos-base.h', 'include/zoslib/zos-base.h', 'zoslib/include/zos-base.h', 'install/include/node/zoslib/zos-base.h'];\n        zoslibIncPath = findAccessibleSync(logprefix, nodeRootDir, candidates);\n\n        if (zoslibIncPath === undefined) {\n          msg = msgFormat('Could not find any of %s in directory %s; set ' + 'environmant variable ZOSLIB_INCLUDES to the path ' + 'that contains zos-base.h', candidates.toString(), nodeRootDir);\n        }\n      }\n\n      if (zoslibIncPath !== undefined) {\n        zoslibIncDir = path.dirname(zoslibIncPath);\n        log.verbose(logprefix, \"Found zoslib's zos-base.h in: %s\", zoslibIncDir);\n      } else if (release.version.split('.')[0] >= 16) {\n        // zoslib is only shipped in Node v16 and above.\n        log.error(logprefix, msg);\n        return callback(new Error(msg));\n      }\n    } // this logic ported from the old `gyp_addon` python file\n\n\n    var gypScript = path.resolve(__dirname, '..', 'gyp', 'gyp_main.py');\n    var addonGypi = path.resolve(__dirname, '..', 'addon.gypi');\n    var commonGypi = path.resolve(nodeDir, 'include/node/common.gypi');\n    fs.stat(commonGypi, function (err) {\n      if (err) {\n        commonGypi = path.resolve(nodeDir, 'common.gypi');\n      }\n\n      var outputDir = 'build';\n\n      if (win) {\n        // Windows expects an absolute path\n        outputDir = buildDir;\n      }\n\n      var nodeGypDir = path.resolve(__dirname, '..');\n      var nodeLibFile = path.join(nodeDir, !gyp.opts.nodedir ? '<(target_arch)' : '$(Configuration)', release.name + '.lib');\n      argv.push('-I', addonGypi);\n      argv.push('-I', commonGypi);\n      argv.push('-Dlibrary=shared_library');\n      argv.push('-Dvisibility=default');\n      argv.push('-Dnode_root_dir=' + nodeDir);\n\n      if (process.platform === 'aix' || process.platform === 'os390' || process.platform === 'os400') {\n        argv.push('-Dnode_exp_file=' + nodeExpFile);\n\n        if (process.platform === 'os390' && zoslibIncDir) {\n          argv.push('-Dzoslib_include_dir=' + zoslibIncDir);\n        }\n      }\n\n      argv.push('-Dnode_gyp_dir=' + nodeGypDir); // Do this to keep Cygwin environments happy, else the unescaped '\\' gets eaten up,\n      // resulting in bad paths, Ex c:parentFolderfolderanotherFolder instead of c:\\parentFolder\\folder\\anotherFolder\n\n      if (win) {\n        nodeLibFile = nodeLibFile.replace(/\\\\/g, '\\\\\\\\');\n      }\n\n      argv.push('-Dnode_lib_file=' + nodeLibFile);\n      argv.push('-Dmodule_root_dir=' + process.cwd());\n      argv.push('-Dnode_engine=' + (gyp.opts.node_engine || process.jsEngine || 'v8'));\n      argv.push('--depth=.');\n      argv.push('--no-parallel'); // tell gyp to write the Makefile/Solution files into output_dir\n\n      argv.push('--generator-output', outputDir); // tell make to write its output into the same dir\n\n      argv.push('-Goutput_dir=.'); // enforce use of the \"binding.gyp\" file\n\n      argv.unshift('binding.gyp'); // execute `gyp` from the current target nodedir\n\n      argv.unshift(gypScript); // make sure python uses files that came with this particular node package\n\n      var pypath = [path.join(__dirname, '..', 'gyp', 'pylib')];\n\n      if (process.env.PYTHONPATH) {\n        pypath.push(process.env.PYTHONPATH);\n      }\n\n      process.env.PYTHONPATH = pypath.join(win ? ';' : ':');\n      var cp = gyp.spawn(python, argv);\n      cp.on('exit', onCpExit);\n    });\n  }\n\n  function onCpExit(code) {\n    if (code !== 0) {\n      callback(new Error('`gyp` failed with exit code: ' + code));\n    } else {\n      // we're done\n      callback();\n    }\n  }\n}\n/**\n * Returns the first file or directory from an array of candidates that is\n * readable by the current user, or undefined if none of the candidates are\n * readable.\n */\n\n\nfunction findAccessibleSync(logprefix, dir, candidates) {\n  for (var next = 0; next < candidates.length; next++) {\n    var candidate = path.resolve(dir, candidates[next]);\n\n    try {\n      var fd = fs.openSync(candidate, 'r');\n    } catch (e) {\n      // this candidate was not found or not readable, do nothing\n      log.silly(logprefix, 'Could not open %s: %s', candidate, e.message);\n      continue;\n    }\n\n    fs.closeSync(fd);\n    log.silly(logprefix, 'Found readable %s', candidate);\n    return candidate;\n  }\n\n  return undefined;\n}\n\nmodule.exports = configure;\nmodule.exports.test = {\n  findAccessibleSync: findAccessibleSync\n};\nmodule.exports.usage = 'Generates ' + (win ? 'MSVC project files' : 'a Makefile') + ' for the current module';","map":{"version":3,"names":["fs","require","path","log","os","processRelease","win","process","platform","findNodeDirectory","createConfigGypi","msgFormat","format","findPython","findVisualStudio","configure","gyp","argv","callback","python","buildDir","resolve","buildBinsDir","join","configNames","configs","nodeDir","release","version","opts","err","found","getNodeDir","env","PYTHON","nodedir","replace","homedir","verbose","createBuildDir","semver","Error","ensure","tarball","commands","install","versionDir","devDir","deepestBuildDirSubdirectory","mkdir","recursive","isNew","msvs_version","createConfigFile","createPythonSymlink","symlinkDestination","unlink","code","stack","errno","symlink","vsInfo","GYP_MSVS_VERSION","Math","min","versionYear","GYP_MSVS_OVERRIDE_PATH","then","configPath","push","findConfigs","catch","name","shift","runGyp","fullPath","stat","indexOf","forEach","config","nodeExpFile","ext","nodeRootDir","candidates","map","file","logprefix","findAccessibleSync","undefined","msg","error","zoslibIncDir","zoslibIncPath","ZOSLIB_INCLUDES","toString","dirname","split","gypScript","__dirname","addonGypi","commonGypi","outputDir","nodeGypDir","nodeLibFile","cwd","node_engine","jsEngine","unshift","pypath","PYTHONPATH","cp","spawn","on","onCpExit","dir","next","length","candidate","fd","openSync","e","silly","message","closeSync","module","exports","test","usage"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/node-gyp/lib/configure.js"],"sourcesContent":["'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst log = require('npmlog')\nconst os = require('os')\nconst processRelease = require('./process-release')\nconst win = process.platform === 'win32'\nconst findNodeDirectory = require('./find-node-directory')\nconst createConfigGypi = require('./create-config-gypi')\nconst msgFormat = require('util').format\nvar findPython = require('./find-python')\nif (win) {\n  var findVisualStudio = require('./find-visualstudio')\n}\n\nfunction configure (gyp, argv, callback) {\n  var python\n  var buildDir = path.resolve('build')\n  var buildBinsDir = path.join(buildDir, 'node_gyp_bins')\n  var configNames = ['config.gypi', 'common.gypi']\n  var configs = []\n  var nodeDir\n  var release = processRelease(argv, gyp, process.version, process.release)\n\n  findPython(gyp.opts.python, function (err, found) {\n    if (err) {\n      callback(err)\n    } else {\n      python = found\n      getNodeDir()\n    }\n  })\n\n  function getNodeDir () {\n    // 'python' should be set by now\n    process.env.PYTHON = python\n\n    if (gyp.opts.nodedir) {\n      // --nodedir was specified. use that for the dev files\n      nodeDir = gyp.opts.nodedir.replace(/^~/, os.homedir())\n\n      log.verbose('get node dir', 'compiling against specified --nodedir dev files: %s', nodeDir)\n      createBuildDir()\n    } else {\n      // if no --nodedir specified, ensure node dependencies are installed\n      if ('v' + release.version !== process.version) {\n        // if --target was given, then determine a target version to compile for\n        log.verbose('get node dir', 'compiling against --target node version: %s', release.version)\n      } else {\n        // if no --target was specified then use the current host node version\n        log.verbose('get node dir', 'no --target version specified, falling back to host node version: %s', release.version)\n      }\n\n      if (!release.semver) {\n        // could not parse the version string with semver\n        return callback(new Error('Invalid version number: ' + release.version))\n      }\n\n      // If the tarball option is set, always remove and reinstall the headers\n      // into devdir. Otherwise only install if they're not already there.\n      gyp.opts.ensure = !gyp.opts.tarball\n\n      gyp.commands.install([release.version], function (err) {\n        if (err) {\n          return callback(err)\n        }\n        log.verbose('get node dir', 'target node version installed:', release.versionDir)\n        nodeDir = path.resolve(gyp.devDir, release.versionDir)\n        createBuildDir()\n      })\n    }\n  }\n\n  function createBuildDir () {\n    log.verbose('build dir', 'attempting to create \"build\" dir: %s', buildDir)\n\n    const deepestBuildDirSubdirectory = win ? buildDir : buildBinsDir\n    fs.mkdir(deepestBuildDirSubdirectory, { recursive: true }, function (err, isNew) {\n      if (err) {\n        return callback(err)\n      }\n      log.verbose(\n        'build dir', '\"build\" dir needed to be created?', isNew ? 'Yes' : 'No'\n      )\n      if (win) {\n        findVisualStudio(release.semver, gyp.opts.msvs_version,\n          createConfigFile)\n      } else {\n        createPythonSymlink()\n        createConfigFile()\n      }\n    })\n  }\n\n  function createPythonSymlink () {\n    const symlinkDestination = path.join(buildBinsDir, 'python3')\n\n    log.verbose('python symlink', `creating symlink to \"${python}\" at \"${symlinkDestination}\"`)\n\n    fs.unlink(symlinkDestination, function (err) {\n      if (err && err.code !== 'ENOENT') {\n        log.verbose('python symlink', 'error when attempting to remove existing symlink')\n        log.verbose('python symlink', err.stack, 'errno: ' + err.errno)\n      }\n      fs.symlink(python, symlinkDestination, function (err) {\n        if (err) {\n          log.verbose('python symlink', 'error when attempting to create Python symlink')\n          log.verbose('python symlink', err.stack, 'errno: ' + err.errno)\n        }\n      })\n    })\n  }\n\n  function createConfigFile (err, vsInfo) {\n    if (err) {\n      return callback(err)\n    }\n    if (process.platform === 'win32') {\n      process.env.GYP_MSVS_VERSION = Math.min(vsInfo.versionYear, 2015)\n      process.env.GYP_MSVS_OVERRIDE_PATH = vsInfo.path\n    }\n    createConfigGypi({ gyp, buildDir, nodeDir, vsInfo }).then(configPath => {\n      configs.push(configPath)\n      findConfigs()\n    }).catch(err => {\n      callback(err)\n    })\n  }\n\n  function findConfigs () {\n    var name = configNames.shift()\n    if (!name) {\n      return runGyp()\n    }\n    var fullPath = path.resolve(name)\n\n    log.verbose(name, 'checking for gypi file: %s', fullPath)\n    fs.stat(fullPath, function (err) {\n      if (err) {\n        if (err.code === 'ENOENT') {\n          findConfigs() // check next gypi filename\n        } else {\n          callback(err)\n        }\n      } else {\n        log.verbose(name, 'found gypi file')\n        configs.push(fullPath)\n        findConfigs()\n      }\n    })\n  }\n\n  function runGyp (err) {\n    if (err) {\n      return callback(err)\n    }\n\n    if (!~argv.indexOf('-f') && !~argv.indexOf('--format')) {\n      if (win) {\n        log.verbose('gyp', 'gyp format was not specified; forcing \"msvs\"')\n        // force the 'make' target for non-Windows\n        argv.push('-f', 'msvs')\n      } else {\n        log.verbose('gyp', 'gyp format was not specified; forcing \"make\"')\n        // force the 'make' target for non-Windows\n        argv.push('-f', 'make')\n      }\n    }\n\n    // include all the \".gypi\" files that were found\n    configs.forEach(function (config) {\n      argv.push('-I', config)\n    })\n\n    // For AIX and z/OS we need to set up the path to the exports file\n    // which contains the symbols needed for linking.\n    var nodeExpFile\n    if (process.platform === 'aix' || process.platform === 'os390' || process.platform === 'os400') {\n      var ext = process.platform === 'os390' ? 'x' : 'exp'\n      var nodeRootDir = findNodeDirectory()\n      var candidates\n\n      if (process.platform === 'aix' || process.platform === 'os400') {\n        candidates = [\n          'include/node/node',\n          'out/Release/node',\n          'out/Debug/node',\n          'node'\n        ].map(function (file) {\n          return file + '.' + ext\n        })\n      } else {\n        candidates = [\n          'out/Release/lib.target/libnode',\n          'out/Debug/lib.target/libnode',\n          'out/Release/obj.target/libnode',\n          'out/Debug/obj.target/libnode',\n          'lib/libnode'\n        ].map(function (file) {\n          return file + '.' + ext\n        })\n      }\n\n      var logprefix = 'find exports file'\n      nodeExpFile = findAccessibleSync(logprefix, nodeRootDir, candidates)\n      if (nodeExpFile !== undefined) {\n        log.verbose(logprefix, 'Found exports file: %s', nodeExpFile)\n      } else {\n        var msg = msgFormat('Could not find node.%s file in %s', ext, nodeRootDir)\n        log.error(logprefix, 'Could not find exports file')\n        return callback(new Error(msg))\n      }\n    }\n\n    // For z/OS we need to set up the path to zoslib include directory,\n    // which contains headers included in v8config.h.\n    var zoslibIncDir\n    if (process.platform === 'os390') {\n      logprefix = \"find zoslib's zos-base.h:\"\n      let msg\n      var zoslibIncPath = process.env.ZOSLIB_INCLUDES\n      if (zoslibIncPath) {\n        zoslibIncPath = findAccessibleSync(logprefix, zoslibIncPath, ['zos-base.h'])\n        if (zoslibIncPath === undefined) {\n          msg = msgFormat('Could not find zos-base.h file in the directory set ' +\n                          'in ZOSLIB_INCLUDES environment variable: %s; set it ' +\n                          'to the correct path, or unset it to search %s', process.env.ZOSLIB_INCLUDES, nodeRootDir)\n        }\n      } else {\n        candidates = [\n          'include/node/zoslib/zos-base.h',\n          'include/zoslib/zos-base.h',\n          'zoslib/include/zos-base.h',\n          'install/include/node/zoslib/zos-base.h'\n        ]\n        zoslibIncPath = findAccessibleSync(logprefix, nodeRootDir, candidates)\n        if (zoslibIncPath === undefined) {\n          msg = msgFormat('Could not find any of %s in directory %s; set ' +\n                          'environmant variable ZOSLIB_INCLUDES to the path ' +\n                          'that contains zos-base.h', candidates.toString(), nodeRootDir)\n        }\n      }\n      if (zoslibIncPath !== undefined) {\n        zoslibIncDir = path.dirname(zoslibIncPath)\n        log.verbose(logprefix, \"Found zoslib's zos-base.h in: %s\", zoslibIncDir)\n      } else if (release.version.split('.')[0] >= 16) {\n        // zoslib is only shipped in Node v16 and above.\n        log.error(logprefix, msg)\n        return callback(new Error(msg))\n      }\n    }\n\n    // this logic ported from the old `gyp_addon` python file\n    var gypScript = path.resolve(__dirname, '..', 'gyp', 'gyp_main.py')\n    var addonGypi = path.resolve(__dirname, '..', 'addon.gypi')\n    var commonGypi = path.resolve(nodeDir, 'include/node/common.gypi')\n    fs.stat(commonGypi, function (err) {\n      if (err) {\n        commonGypi = path.resolve(nodeDir, 'common.gypi')\n      }\n\n      var outputDir = 'build'\n      if (win) {\n        // Windows expects an absolute path\n        outputDir = buildDir\n      }\n      var nodeGypDir = path.resolve(__dirname, '..')\n\n      var nodeLibFile = path.join(nodeDir,\n        !gyp.opts.nodedir ? '<(target_arch)' : '$(Configuration)',\n        release.name + '.lib')\n\n      argv.push('-I', addonGypi)\n      argv.push('-I', commonGypi)\n      argv.push('-Dlibrary=shared_library')\n      argv.push('-Dvisibility=default')\n      argv.push('-Dnode_root_dir=' + nodeDir)\n      if (process.platform === 'aix' || process.platform === 'os390' || process.platform === 'os400') {\n        argv.push('-Dnode_exp_file=' + nodeExpFile)\n        if (process.platform === 'os390' && zoslibIncDir) {\n          argv.push('-Dzoslib_include_dir=' + zoslibIncDir)\n        }\n      }\n      argv.push('-Dnode_gyp_dir=' + nodeGypDir)\n\n      // Do this to keep Cygwin environments happy, else the unescaped '\\' gets eaten up,\n      // resulting in bad paths, Ex c:parentFolderfolderanotherFolder instead of c:\\parentFolder\\folder\\anotherFolder\n      if (win) {\n        nodeLibFile = nodeLibFile.replace(/\\\\/g, '\\\\\\\\')\n      }\n      argv.push('-Dnode_lib_file=' + nodeLibFile)\n      argv.push('-Dmodule_root_dir=' + process.cwd())\n      argv.push('-Dnode_engine=' +\n        (gyp.opts.node_engine || process.jsEngine || 'v8'))\n      argv.push('--depth=.')\n      argv.push('--no-parallel')\n\n      // tell gyp to write the Makefile/Solution files into output_dir\n      argv.push('--generator-output', outputDir)\n\n      // tell make to write its output into the same dir\n      argv.push('-Goutput_dir=.')\n\n      // enforce use of the \"binding.gyp\" file\n      argv.unshift('binding.gyp')\n\n      // execute `gyp` from the current target nodedir\n      argv.unshift(gypScript)\n\n      // make sure python uses files that came with this particular node package\n      var pypath = [path.join(__dirname, '..', 'gyp', 'pylib')]\n      if (process.env.PYTHONPATH) {\n        pypath.push(process.env.PYTHONPATH)\n      }\n      process.env.PYTHONPATH = pypath.join(win ? ';' : ':')\n\n      var cp = gyp.spawn(python, argv)\n      cp.on('exit', onCpExit)\n    })\n  }\n\n  function onCpExit (code) {\n    if (code !== 0) {\n      callback(new Error('`gyp` failed with exit code: ' + code))\n    } else {\n      // we're done\n      callback()\n    }\n  }\n}\n\n/**\n * Returns the first file or directory from an array of candidates that is\n * readable by the current user, or undefined if none of the candidates are\n * readable.\n */\nfunction findAccessibleSync (logprefix, dir, candidates) {\n  for (var next = 0; next < candidates.length; next++) {\n    var candidate = path.resolve(dir, candidates[next])\n    try {\n      var fd = fs.openSync(candidate, 'r')\n    } catch (e) {\n      // this candidate was not found or not readable, do nothing\n      log.silly(logprefix, 'Could not open %s: %s', candidate, e.message)\n      continue\n    }\n    fs.closeSync(fd)\n    log.silly(logprefix, 'Found readable %s', candidate)\n    return candidate\n  }\n\n  return undefined\n}\n\nmodule.exports = configure\nmodule.exports.test = {\n  findAccessibleSync: findAccessibleSync\n}\nmodule.exports.usage = 'Generates ' + (win ? 'MSVC project files' : 'a Makefile') + ' for the current module'\n"],"mappings":"AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,GAAG,GAAGF,OAAO,CAAC,QAAD,CAAnB;;AACA,MAAMG,EAAE,GAAGH,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMI,cAAc,GAAGJ,OAAO,CAAC,mBAAD,CAA9B;;AACA,MAAMK,GAAG,GAAGC,OAAO,CAACC,QAAR,KAAqB,OAAjC;;AACA,MAAMC,iBAAiB,GAAGR,OAAO,CAAC,uBAAD,CAAjC;;AACA,MAAMS,gBAAgB,GAAGT,OAAO,CAAC,sBAAD,CAAhC;;AACA,MAAMU,SAAS,GAAGV,OAAO,CAAC,MAAD,CAAP,CAAgBW,MAAlC;;AACA,IAAIC,UAAU,GAAGZ,OAAO,CAAC,eAAD,CAAxB;;AACA,IAAIK,GAAJ,EAAS;EACP,IAAIQ,gBAAgB,GAAGb,OAAO,CAAC,qBAAD,CAA9B;AACD;;AAED,SAASc,SAAT,CAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,QAA/B,EAAyC;EACvC,IAAIC,MAAJ;EACA,IAAIC,QAAQ,GAAGlB,IAAI,CAACmB,OAAL,CAAa,OAAb,CAAf;EACA,IAAIC,YAAY,GAAGpB,IAAI,CAACqB,IAAL,CAAUH,QAAV,EAAoB,eAApB,CAAnB;EACA,IAAII,WAAW,GAAG,CAAC,aAAD,EAAgB,aAAhB,CAAlB;EACA,IAAIC,OAAO,GAAG,EAAd;EACA,IAAIC,OAAJ;EACA,IAAIC,OAAO,GAAGtB,cAAc,CAACY,IAAD,EAAOD,GAAP,EAAYT,OAAO,CAACqB,OAApB,EAA6BrB,OAAO,CAACoB,OAArC,CAA5B;EAEAd,UAAU,CAACG,GAAG,CAACa,IAAJ,CAASV,MAAV,EAAkB,UAAUW,GAAV,EAAeC,KAAf,EAAsB;IAChD,IAAID,GAAJ,EAAS;MACPZ,QAAQ,CAACY,GAAD,CAAR;IACD,CAFD,MAEO;MACLX,MAAM,GAAGY,KAAT;MACAC,UAAU;IACX;EACF,CAPS,CAAV;;EASA,SAASA,UAAT,GAAuB;IACrB;IACAzB,OAAO,CAAC0B,GAAR,CAAYC,MAAZ,GAAqBf,MAArB;;IAEA,IAAIH,GAAG,CAACa,IAAJ,CAASM,OAAb,EAAsB;MACpB;MACAT,OAAO,GAAGV,GAAG,CAACa,IAAJ,CAASM,OAAT,CAAiBC,OAAjB,CAAyB,IAAzB,EAA+BhC,EAAE,CAACiC,OAAH,EAA/B,CAAV;MAEAlC,GAAG,CAACmC,OAAJ,CAAY,cAAZ,EAA4B,qDAA5B,EAAmFZ,OAAnF;MACAa,cAAc;IACf,CAND,MAMO;MACL;MACA,IAAI,MAAMZ,OAAO,CAACC,OAAd,KAA0BrB,OAAO,CAACqB,OAAtC,EAA+C;QAC7C;QACAzB,GAAG,CAACmC,OAAJ,CAAY,cAAZ,EAA4B,6CAA5B,EAA2EX,OAAO,CAACC,OAAnF;MACD,CAHD,MAGO;QACL;QACAzB,GAAG,CAACmC,OAAJ,CAAY,cAAZ,EAA4B,sEAA5B,EAAoGX,OAAO,CAACC,OAA5G;MACD;;MAED,IAAI,CAACD,OAAO,CAACa,MAAb,EAAqB;QACnB;QACA,OAAOtB,QAAQ,CAAC,IAAIuB,KAAJ,CAAU,6BAA6Bd,OAAO,CAACC,OAA/C,CAAD,CAAf;MACD,CAbI,CAeL;MACA;;;MACAZ,GAAG,CAACa,IAAJ,CAASa,MAAT,GAAkB,CAAC1B,GAAG,CAACa,IAAJ,CAASc,OAA5B;MAEA3B,GAAG,CAAC4B,QAAJ,CAAaC,OAAb,CAAqB,CAAClB,OAAO,CAACC,OAAT,CAArB,EAAwC,UAAUE,GAAV,EAAe;QACrD,IAAIA,GAAJ,EAAS;UACP,OAAOZ,QAAQ,CAACY,GAAD,CAAf;QACD;;QACD3B,GAAG,CAACmC,OAAJ,CAAY,cAAZ,EAA4B,gCAA5B,EAA8DX,OAAO,CAACmB,UAAtE;QACApB,OAAO,GAAGxB,IAAI,CAACmB,OAAL,CAAaL,GAAG,CAAC+B,MAAjB,EAAyBpB,OAAO,CAACmB,UAAjC,CAAV;QACAP,cAAc;MACf,CAPD;IAQD;EACF;;EAED,SAASA,cAAT,GAA2B;IACzBpC,GAAG,CAACmC,OAAJ,CAAY,WAAZ,EAAyB,sCAAzB,EAAiElB,QAAjE;IAEA,MAAM4B,2BAA2B,GAAG1C,GAAG,GAAGc,QAAH,GAAcE,YAArD;IACAtB,EAAE,CAACiD,KAAH,CAASD,2BAAT,EAAsC;MAAEE,SAAS,EAAE;IAAb,CAAtC,EAA2D,UAAUpB,GAAV,EAAeqB,KAAf,EAAsB;MAC/E,IAAIrB,GAAJ,EAAS;QACP,OAAOZ,QAAQ,CAACY,GAAD,CAAf;MACD;;MACD3B,GAAG,CAACmC,OAAJ,CACE,WADF,EACe,mCADf,EACoDa,KAAK,GAAG,KAAH,GAAW,IADpE;;MAGA,IAAI7C,GAAJ,EAAS;QACPQ,gBAAgB,CAACa,OAAO,CAACa,MAAT,EAAiBxB,GAAG,CAACa,IAAJ,CAASuB,YAA1B,EACdC,gBADc,CAAhB;MAED,CAHD,MAGO;QACLC,mBAAmB;QACnBD,gBAAgB;MACjB;IACF,CAdD;EAeD;;EAED,SAASC,mBAAT,GAAgC;IAC9B,MAAMC,kBAAkB,GAAGrD,IAAI,CAACqB,IAAL,CAAUD,YAAV,EAAwB,SAAxB,CAA3B;IAEAnB,GAAG,CAACmC,OAAJ,CAAY,gBAAZ,EAA+B,wBAAuBnB,MAAO,SAAQoC,kBAAmB,GAAxF;IAEAvD,EAAE,CAACwD,MAAH,CAAUD,kBAAV,EAA8B,UAAUzB,GAAV,EAAe;MAC3C,IAAIA,GAAG,IAAIA,GAAG,CAAC2B,IAAJ,KAAa,QAAxB,EAAkC;QAChCtD,GAAG,CAACmC,OAAJ,CAAY,gBAAZ,EAA8B,kDAA9B;QACAnC,GAAG,CAACmC,OAAJ,CAAY,gBAAZ,EAA8BR,GAAG,CAAC4B,KAAlC,EAAyC,YAAY5B,GAAG,CAAC6B,KAAzD;MACD;;MACD3D,EAAE,CAAC4D,OAAH,CAAWzC,MAAX,EAAmBoC,kBAAnB,EAAuC,UAAUzB,GAAV,EAAe;QACpD,IAAIA,GAAJ,EAAS;UACP3B,GAAG,CAACmC,OAAJ,CAAY,gBAAZ,EAA8B,gDAA9B;UACAnC,GAAG,CAACmC,OAAJ,CAAY,gBAAZ,EAA8BR,GAAG,CAAC4B,KAAlC,EAAyC,YAAY5B,GAAG,CAAC6B,KAAzD;QACD;MACF,CALD;IAMD,CAXD;EAYD;;EAED,SAASN,gBAAT,CAA2BvB,GAA3B,EAAgC+B,MAAhC,EAAwC;IACtC,IAAI/B,GAAJ,EAAS;MACP,OAAOZ,QAAQ,CAACY,GAAD,CAAf;IACD;;IACD,IAAIvB,OAAO,CAACC,QAAR,KAAqB,OAAzB,EAAkC;MAChCD,OAAO,CAAC0B,GAAR,CAAY6B,gBAAZ,GAA+BC,IAAI,CAACC,GAAL,CAASH,MAAM,CAACI,WAAhB,EAA6B,IAA7B,CAA/B;MACA1D,OAAO,CAAC0B,GAAR,CAAYiC,sBAAZ,GAAqCL,MAAM,CAAC3D,IAA5C;IACD;;IACDQ,gBAAgB,CAAC;MAAEM,GAAF;MAAOI,QAAP;MAAiBM,OAAjB;MAA0BmC;IAA1B,CAAD,CAAhB,CAAqDM,IAArD,CAA0DC,UAAU,IAAI;MACtE3C,OAAO,CAAC4C,IAAR,CAAaD,UAAb;MACAE,WAAW;IACZ,CAHD,EAGGC,KAHH,CAGSzC,GAAG,IAAI;MACdZ,QAAQ,CAACY,GAAD,CAAR;IACD,CALD;EAMD;;EAED,SAASwC,WAAT,GAAwB;IACtB,IAAIE,IAAI,GAAGhD,WAAW,CAACiD,KAAZ,EAAX;;IACA,IAAI,CAACD,IAAL,EAAW;MACT,OAAOE,MAAM,EAAb;IACD;;IACD,IAAIC,QAAQ,GAAGzE,IAAI,CAACmB,OAAL,CAAamD,IAAb,CAAf;IAEArE,GAAG,CAACmC,OAAJ,CAAYkC,IAAZ,EAAkB,4BAAlB,EAAgDG,QAAhD;IACA3E,EAAE,CAAC4E,IAAH,CAAQD,QAAR,EAAkB,UAAU7C,GAAV,EAAe;MAC/B,IAAIA,GAAJ,EAAS;QACP,IAAIA,GAAG,CAAC2B,IAAJ,KAAa,QAAjB,EAA2B;UACzBa,WAAW,GADc,CACX;QACf,CAFD,MAEO;UACLpD,QAAQ,CAACY,GAAD,CAAR;QACD;MACF,CAND,MAMO;QACL3B,GAAG,CAACmC,OAAJ,CAAYkC,IAAZ,EAAkB,iBAAlB;QACA/C,OAAO,CAAC4C,IAAR,CAAaM,QAAb;QACAL,WAAW;MACZ;IACF,CAZD;EAaD;;EAED,SAASI,MAAT,CAAiB5C,GAAjB,EAAsB;IACpB,IAAIA,GAAJ,EAAS;MACP,OAAOZ,QAAQ,CAACY,GAAD,CAAf;IACD;;IAED,IAAI,CAAC,CAACb,IAAI,CAAC4D,OAAL,CAAa,IAAb,CAAF,IAAwB,CAAC,CAAC5D,IAAI,CAAC4D,OAAL,CAAa,UAAb,CAA9B,EAAwD;MACtD,IAAIvE,GAAJ,EAAS;QACPH,GAAG,CAACmC,OAAJ,CAAY,KAAZ,EAAmB,8CAAnB,EADO,CAEP;;QACArB,IAAI,CAACoD,IAAL,CAAU,IAAV,EAAgB,MAAhB;MACD,CAJD,MAIO;QACLlE,GAAG,CAACmC,OAAJ,CAAY,KAAZ,EAAmB,8CAAnB,EADK,CAEL;;QACArB,IAAI,CAACoD,IAAL,CAAU,IAAV,EAAgB,MAAhB;MACD;IACF,CAfmB,CAiBpB;;;IACA5C,OAAO,CAACqD,OAAR,CAAgB,UAAUC,MAAV,EAAkB;MAChC9D,IAAI,CAACoD,IAAL,CAAU,IAAV,EAAgBU,MAAhB;IACD,CAFD,EAlBoB,CAsBpB;IACA;;IACA,IAAIC,WAAJ;;IACA,IAAIzE,OAAO,CAACC,QAAR,KAAqB,KAArB,IAA8BD,OAAO,CAACC,QAAR,KAAqB,OAAnD,IAA8DD,OAAO,CAACC,QAAR,KAAqB,OAAvF,EAAgG;MAC9F,IAAIyE,GAAG,GAAG1E,OAAO,CAACC,QAAR,KAAqB,OAArB,GAA+B,GAA/B,GAAqC,KAA/C;MACA,IAAI0E,WAAW,GAAGzE,iBAAiB,EAAnC;MACA,IAAI0E,UAAJ;;MAEA,IAAI5E,OAAO,CAACC,QAAR,KAAqB,KAArB,IAA8BD,OAAO,CAACC,QAAR,KAAqB,OAAvD,EAAgE;QAC9D2E,UAAU,GAAG,CACX,mBADW,EAEX,kBAFW,EAGX,gBAHW,EAIX,MAJW,EAKXC,GALW,CAKP,UAAUC,IAAV,EAAgB;UACpB,OAAOA,IAAI,GAAG,GAAP,GAAaJ,GAApB;QACD,CAPY,CAAb;MAQD,CATD,MASO;QACLE,UAAU,GAAG,CACX,gCADW,EAEX,8BAFW,EAGX,gCAHW,EAIX,8BAJW,EAKX,aALW,EAMXC,GANW,CAMP,UAAUC,IAAV,EAAgB;UACpB,OAAOA,IAAI,GAAG,GAAP,GAAaJ,GAApB;QACD,CARY,CAAb;MASD;;MAED,IAAIK,SAAS,GAAG,mBAAhB;MACAN,WAAW,GAAGO,kBAAkB,CAACD,SAAD,EAAYJ,WAAZ,EAAyBC,UAAzB,CAAhC;;MACA,IAAIH,WAAW,KAAKQ,SAApB,EAA+B;QAC7BrF,GAAG,CAACmC,OAAJ,CAAYgD,SAAZ,EAAuB,wBAAvB,EAAiDN,WAAjD;MACD,CAFD,MAEO;QACL,IAAIS,GAAG,GAAG9E,SAAS,CAAC,mCAAD,EAAsCsE,GAAtC,EAA2CC,WAA3C,CAAnB;QACA/E,GAAG,CAACuF,KAAJ,CAAUJ,SAAV,EAAqB,6BAArB;QACA,OAAOpE,QAAQ,CAAC,IAAIuB,KAAJ,CAAUgD,GAAV,CAAD,CAAf;MACD;IACF,CA5DmB,CA8DpB;IACA;;;IACA,IAAIE,YAAJ;;IACA,IAAIpF,OAAO,CAACC,QAAR,KAAqB,OAAzB,EAAkC;MAChC8E,SAAS,GAAG,2BAAZ;MACA,IAAIG,GAAJ;MACA,IAAIG,aAAa,GAAGrF,OAAO,CAAC0B,GAAR,CAAY4D,eAAhC;;MACA,IAAID,aAAJ,EAAmB;QACjBA,aAAa,GAAGL,kBAAkB,CAACD,SAAD,EAAYM,aAAZ,EAA2B,CAAC,YAAD,CAA3B,CAAlC;;QACA,IAAIA,aAAa,KAAKJ,SAAtB,EAAiC;UAC/BC,GAAG,GAAG9E,SAAS,CAAC,yDACA,sDADA,GAEA,+CAFD,EAEkDJ,OAAO,CAAC0B,GAAR,CAAY4D,eAF9D,EAE+EX,WAF/E,CAAf;QAGD;MACF,CAPD,MAOO;QACLC,UAAU,GAAG,CACX,gCADW,EAEX,2BAFW,EAGX,2BAHW,EAIX,wCAJW,CAAb;QAMAS,aAAa,GAAGL,kBAAkB,CAACD,SAAD,EAAYJ,WAAZ,EAAyBC,UAAzB,CAAlC;;QACA,IAAIS,aAAa,KAAKJ,SAAtB,EAAiC;UAC/BC,GAAG,GAAG9E,SAAS,CAAC,mDACA,mDADA,GAEA,0BAFD,EAE6BwE,UAAU,CAACW,QAAX,EAF7B,EAEoDZ,WAFpD,CAAf;QAGD;MACF;;MACD,IAAIU,aAAa,KAAKJ,SAAtB,EAAiC;QAC/BG,YAAY,GAAGzF,IAAI,CAAC6F,OAAL,CAAaH,aAAb,CAAf;QACAzF,GAAG,CAACmC,OAAJ,CAAYgD,SAAZ,EAAuB,kCAAvB,EAA2DK,YAA3D;MACD,CAHD,MAGO,IAAIhE,OAAO,CAACC,OAAR,CAAgBoE,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,KAAiC,EAArC,EAAyC;QAC9C;QACA7F,GAAG,CAACuF,KAAJ,CAAUJ,SAAV,EAAqBG,GAArB;QACA,OAAOvE,QAAQ,CAAC,IAAIuB,KAAJ,CAAUgD,GAAV,CAAD,CAAf;MACD;IACF,CAlGmB,CAoGpB;;;IACA,IAAIQ,SAAS,GAAG/F,IAAI,CAACmB,OAAL,CAAa6E,SAAb,EAAwB,IAAxB,EAA8B,KAA9B,EAAqC,aAArC,CAAhB;IACA,IAAIC,SAAS,GAAGjG,IAAI,CAACmB,OAAL,CAAa6E,SAAb,EAAwB,IAAxB,EAA8B,YAA9B,CAAhB;IACA,IAAIE,UAAU,GAAGlG,IAAI,CAACmB,OAAL,CAAaK,OAAb,EAAsB,0BAAtB,CAAjB;IACA1B,EAAE,CAAC4E,IAAH,CAAQwB,UAAR,EAAoB,UAAUtE,GAAV,EAAe;MACjC,IAAIA,GAAJ,EAAS;QACPsE,UAAU,GAAGlG,IAAI,CAACmB,OAAL,CAAaK,OAAb,EAAsB,aAAtB,CAAb;MACD;;MAED,IAAI2E,SAAS,GAAG,OAAhB;;MACA,IAAI/F,GAAJ,EAAS;QACP;QACA+F,SAAS,GAAGjF,QAAZ;MACD;;MACD,IAAIkF,UAAU,GAAGpG,IAAI,CAACmB,OAAL,CAAa6E,SAAb,EAAwB,IAAxB,CAAjB;MAEA,IAAIK,WAAW,GAAGrG,IAAI,CAACqB,IAAL,CAAUG,OAAV,EAChB,CAACV,GAAG,CAACa,IAAJ,CAASM,OAAV,GAAoB,gBAApB,GAAuC,kBADvB,EAEhBR,OAAO,CAAC6C,IAAR,GAAe,MAFC,CAAlB;MAIAvD,IAAI,CAACoD,IAAL,CAAU,IAAV,EAAgB8B,SAAhB;MACAlF,IAAI,CAACoD,IAAL,CAAU,IAAV,EAAgB+B,UAAhB;MACAnF,IAAI,CAACoD,IAAL,CAAU,0BAAV;MACApD,IAAI,CAACoD,IAAL,CAAU,sBAAV;MACApD,IAAI,CAACoD,IAAL,CAAU,qBAAqB3C,OAA/B;;MACA,IAAInB,OAAO,CAACC,QAAR,KAAqB,KAArB,IAA8BD,OAAO,CAACC,QAAR,KAAqB,OAAnD,IAA8DD,OAAO,CAACC,QAAR,KAAqB,OAAvF,EAAgG;QAC9FS,IAAI,CAACoD,IAAL,CAAU,qBAAqBW,WAA/B;;QACA,IAAIzE,OAAO,CAACC,QAAR,KAAqB,OAArB,IAAgCmF,YAApC,EAAkD;UAChD1E,IAAI,CAACoD,IAAL,CAAU,0BAA0BsB,YAApC;QACD;MACF;;MACD1E,IAAI,CAACoD,IAAL,CAAU,oBAAoBiC,UAA9B,EA3BiC,CA6BjC;MACA;;MACA,IAAIhG,GAAJ,EAAS;QACPiG,WAAW,GAAGA,WAAW,CAACnE,OAAZ,CAAoB,KAApB,EAA2B,MAA3B,CAAd;MACD;;MACDnB,IAAI,CAACoD,IAAL,CAAU,qBAAqBkC,WAA/B;MACAtF,IAAI,CAACoD,IAAL,CAAU,uBAAuB9D,OAAO,CAACiG,GAAR,EAAjC;MACAvF,IAAI,CAACoD,IAAL,CAAU,oBACPrD,GAAG,CAACa,IAAJ,CAAS4E,WAAT,IAAwBlG,OAAO,CAACmG,QAAhC,IAA4C,IADrC,CAAV;MAEAzF,IAAI,CAACoD,IAAL,CAAU,WAAV;MACApD,IAAI,CAACoD,IAAL,CAAU,eAAV,EAvCiC,CAyCjC;;MACApD,IAAI,CAACoD,IAAL,CAAU,oBAAV,EAAgCgC,SAAhC,EA1CiC,CA4CjC;;MACApF,IAAI,CAACoD,IAAL,CAAU,gBAAV,EA7CiC,CA+CjC;;MACApD,IAAI,CAAC0F,OAAL,CAAa,aAAb,EAhDiC,CAkDjC;;MACA1F,IAAI,CAAC0F,OAAL,CAAaV,SAAb,EAnDiC,CAqDjC;;MACA,IAAIW,MAAM,GAAG,CAAC1G,IAAI,CAACqB,IAAL,CAAU2E,SAAV,EAAqB,IAArB,EAA2B,KAA3B,EAAkC,OAAlC,CAAD,CAAb;;MACA,IAAI3F,OAAO,CAAC0B,GAAR,CAAY4E,UAAhB,EAA4B;QAC1BD,MAAM,CAACvC,IAAP,CAAY9D,OAAO,CAAC0B,GAAR,CAAY4E,UAAxB;MACD;;MACDtG,OAAO,CAAC0B,GAAR,CAAY4E,UAAZ,GAAyBD,MAAM,CAACrF,IAAP,CAAYjB,GAAG,GAAG,GAAH,GAAS,GAAxB,CAAzB;MAEA,IAAIwG,EAAE,GAAG9F,GAAG,CAAC+F,KAAJ,CAAU5F,MAAV,EAAkBF,IAAlB,CAAT;MACA6F,EAAE,CAACE,EAAH,CAAM,MAAN,EAAcC,QAAd;IACD,CA9DD;EA+DD;;EAED,SAASA,QAAT,CAAmBxD,IAAnB,EAAyB;IACvB,IAAIA,IAAI,KAAK,CAAb,EAAgB;MACdvC,QAAQ,CAAC,IAAIuB,KAAJ,CAAU,kCAAkCgB,IAA5C,CAAD,CAAR;IACD,CAFD,MAEO;MACL;MACAvC,QAAQ;IACT;EACF;AACF;AAED;AACA;AACA;AACA;AACA;;;AACA,SAASqE,kBAAT,CAA6BD,SAA7B,EAAwC4B,GAAxC,EAA6C/B,UAA7C,EAAyD;EACvD,KAAK,IAAIgC,IAAI,GAAG,CAAhB,EAAmBA,IAAI,GAAGhC,UAAU,CAACiC,MAArC,EAA6CD,IAAI,EAAjD,EAAqD;IACnD,IAAIE,SAAS,GAAGnH,IAAI,CAACmB,OAAL,CAAa6F,GAAb,EAAkB/B,UAAU,CAACgC,IAAD,CAA5B,CAAhB;;IACA,IAAI;MACF,IAAIG,EAAE,GAAGtH,EAAE,CAACuH,QAAH,CAAYF,SAAZ,EAAuB,GAAvB,CAAT;IACD,CAFD,CAEE,OAAOG,CAAP,EAAU;MACV;MACArH,GAAG,CAACsH,KAAJ,CAAUnC,SAAV,EAAqB,uBAArB,EAA8C+B,SAA9C,EAAyDG,CAAC,CAACE,OAA3D;MACA;IACD;;IACD1H,EAAE,CAAC2H,SAAH,CAAaL,EAAb;IACAnH,GAAG,CAACsH,KAAJ,CAAUnC,SAAV,EAAqB,mBAArB,EAA0C+B,SAA1C;IACA,OAAOA,SAAP;EACD;;EAED,OAAO7B,SAAP;AACD;;AAEDoC,MAAM,CAACC,OAAP,GAAiB9G,SAAjB;AACA6G,MAAM,CAACC,OAAP,CAAeC,IAAf,GAAsB;EACpBvC,kBAAkB,EAAEA;AADA,CAAtB;AAGAqC,MAAM,CAACC,OAAP,CAAeE,KAAf,GAAuB,gBAAgBzH,GAAG,GAAG,oBAAH,GAA0B,YAA7C,IAA6D,yBAApF"},"metadata":{},"sourceType":"script"}