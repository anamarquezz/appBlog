{"ast":null,"code":"var _asyncToGenerator = require(\"C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nconst util = require('util');\n\nconst fs = require('fs');\n\nconst {\n  stat\n} = fs.promises || {\n  stat: util.promisify(fs.stat)\n};\n\nconst {\n  resolve\n} = require('path');\n\nmodule.exports = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (path) {\n    try {\n      const st = yield stat(resolve(path, 'server.js'));\n      return st.isFile();\n    } catch (er) {\n      return false;\n    }\n  });\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["util","require","fs","stat","promises","promisify","resolve","module","exports","path","st","isFile","er"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@npmcli/run-script/lib/is-server-package.js"],"sourcesContent":["const util = require('util')\nconst fs = require('fs')\nconst { stat } = fs.promises || { stat: util.promisify(fs.stat) }\nconst { resolve } = require('path')\nmodule.exports = async path => {\n  try {\n    const st = await stat(resolve(path, 'server.js'))\n    return st.isFile()\n  } catch (er) {\n    return false\n  }\n}\n"],"mappings":";;AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAM;EAAEE;AAAF,IAAWD,EAAE,CAACE,QAAH,IAAe;EAAED,IAAI,EAAEH,IAAI,CAACK,SAAL,CAAeH,EAAE,CAACC,IAAlB;AAAR,CAAhC;;AACA,MAAM;EAAEG;AAAF,IAAcL,OAAO,CAAC,MAAD,CAA3B;;AACAM,MAAM,CAACC,OAAP;EAAA,6BAAiB,WAAMC,IAAN,EAAc;IAC7B,IAAI;MACF,MAAMC,EAAE,SAASP,IAAI,CAACG,OAAO,CAACG,IAAD,EAAO,WAAP,CAAR,CAArB;MACA,OAAOC,EAAE,CAACC,MAAH,EAAP;IACD,CAHD,CAGE,OAAOC,EAAP,EAAW;MACX,OAAO,KAAP;IACD;EACF,CAPD;;EAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"script"}