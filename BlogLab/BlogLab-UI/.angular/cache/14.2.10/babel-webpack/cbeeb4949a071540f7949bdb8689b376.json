{"ast":null,"code":"'use strict'; // classic singleton yargs API, to use yargs\n// without running as a singleton do:\n// require('yargs/yargs')(process.argv.slice(2))\n\nconst {\n  Yargs,\n  processArgv\n} = require('./build/index.cjs');\n\nArgv(processArgv.hideBin(process.argv));\nmodule.exports = Argv;\n\nfunction Argv(processArgs, cwd) {\n  const argv = Yargs(processArgs, cwd, require);\n  singletonify(argv); // TODO(bcoe): warn if argv.parse() or argv.argv is used directly.\n\n  return argv;\n}\n\nfunction defineGetter(obj, key, getter) {\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    enumerable: true,\n    get: getter\n  });\n}\n\nfunction lookupGetter(obj, key) {\n  const desc = Object.getOwnPropertyDescriptor(obj, key);\n\n  if (typeof desc !== 'undefined') {\n    return desc.get;\n  }\n}\n/*  Hack an instance of Argv with process.argv into Argv\n    so people can do\n    require('yargs')(['--beeble=1','-z','zizzle']).argv\n    to parse a list of args and\n    require('yargs').argv\n    to get a parsed version of process.argv.\n*/\n\n\nfunction singletonify(inst) {\n  [...Object.keys(inst), ...Object.getOwnPropertyNames(inst.constructor.prototype)].forEach(key => {\n    if (key === 'argv') {\n      defineGetter(Argv, key, lookupGetter(inst, key));\n    } else if (typeof inst[key] === 'function') {\n      Argv[key] = inst[key].bind(inst);\n    } else {\n      defineGetter(Argv, '$0', () => inst.$0);\n      defineGetter(Argv, 'parsed', () => inst.parsed);\n    }\n  });\n}","map":{"version":3,"names":["Yargs","processArgv","require","Argv","hideBin","process","argv","module","exports","processArgs","cwd","singletonify","defineGetter","obj","key","getter","Object","defineProperty","configurable","enumerable","get","lookupGetter","desc","getOwnPropertyDescriptor","inst","keys","getOwnPropertyNames","constructor","prototype","forEach","bind","$0","parsed"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/yargs/index.cjs"],"sourcesContent":["'use strict';\n// classic singleton yargs API, to use yargs\n// without running as a singleton do:\n// require('yargs/yargs')(process.argv.slice(2))\nconst {Yargs, processArgv} = require('./build/index.cjs');\n\nArgv(processArgv.hideBin(process.argv));\n\nmodule.exports = Argv;\n\nfunction Argv(processArgs, cwd) {\n  const argv = Yargs(processArgs, cwd, require);\n  singletonify(argv);\n  // TODO(bcoe): warn if argv.parse() or argv.argv is used directly.\n  return argv;\n}\n\nfunction defineGetter(obj, key, getter) {\n  Object.defineProperty(obj, key, {\n    configurable: true,\n    enumerable: true,\n    get: getter,\n  });\n}\nfunction lookupGetter(obj, key) {\n  const desc = Object.getOwnPropertyDescriptor(obj, key);\n  if (typeof desc !== 'undefined') {\n    return desc.get;\n  }\n}\n\n/*  Hack an instance of Argv with process.argv into Argv\n    so people can do\n    require('yargs')(['--beeble=1','-z','zizzle']).argv\n    to parse a list of args and\n    require('yargs').argv\n    to get a parsed version of process.argv.\n*/\nfunction singletonify(inst) {\n  [\n    ...Object.keys(inst),\n    ...Object.getOwnPropertyNames(inst.constructor.prototype),\n  ].forEach(key => {\n    if (key === 'argv') {\n      defineGetter(Argv, key, lookupGetter(inst, key));\n    } else if (typeof inst[key] === 'function') {\n      Argv[key] = inst[key].bind(inst);\n    } else {\n      defineGetter(Argv, '$0', () => inst.$0);\n      defineGetter(Argv, 'parsed', () => inst.parsed);\n    }\n  });\n}\n"],"mappings":"AAAA,a,CACA;AACA;AACA;;AACA,MAAM;EAACA,KAAD;EAAQC;AAAR,IAAuBC,OAAO,CAAC,mBAAD,CAApC;;AAEAC,IAAI,CAACF,WAAW,CAACG,OAAZ,CAAoBC,OAAO,CAACC,IAA5B,CAAD,CAAJ;AAEAC,MAAM,CAACC,OAAP,GAAiBL,IAAjB;;AAEA,SAASA,IAAT,CAAcM,WAAd,EAA2BC,GAA3B,EAAgC;EAC9B,MAAMJ,IAAI,GAAGN,KAAK,CAACS,WAAD,EAAcC,GAAd,EAAmBR,OAAnB,CAAlB;EACAS,YAAY,CAACL,IAAD,CAAZ,CAF8B,CAG9B;;EACA,OAAOA,IAAP;AACD;;AAED,SAASM,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,MAAhC,EAAwC;EACtCC,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;IAC9BI,YAAY,EAAE,IADgB;IAE9BC,UAAU,EAAE,IAFkB;IAG9BC,GAAG,EAAEL;EAHyB,CAAhC;AAKD;;AACD,SAASM,YAAT,CAAsBR,GAAtB,EAA2BC,GAA3B,EAAgC;EAC9B,MAAMQ,IAAI,GAAGN,MAAM,CAACO,wBAAP,CAAgCV,GAAhC,EAAqCC,GAArC,CAAb;;EACA,IAAI,OAAOQ,IAAP,KAAgB,WAApB,EAAiC;IAC/B,OAAOA,IAAI,CAACF,GAAZ;EACD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAST,YAAT,CAAsBa,IAAtB,EAA4B;EAC1B,CACE,GAAGR,MAAM,CAACS,IAAP,CAAYD,IAAZ,CADL,EAEE,GAAGR,MAAM,CAACU,mBAAP,CAA2BF,IAAI,CAACG,WAAL,CAAiBC,SAA5C,CAFL,EAGEC,OAHF,CAGUf,GAAG,IAAI;IACf,IAAIA,GAAG,KAAK,MAAZ,EAAoB;MAClBF,YAAY,CAACT,IAAD,EAAOW,GAAP,EAAYO,YAAY,CAACG,IAAD,EAAOV,GAAP,CAAxB,CAAZ;IACD,CAFD,MAEO,IAAI,OAAOU,IAAI,CAACV,GAAD,CAAX,KAAqB,UAAzB,EAAqC;MAC1CX,IAAI,CAACW,GAAD,CAAJ,GAAYU,IAAI,CAACV,GAAD,CAAJ,CAAUgB,IAAV,CAAeN,IAAf,CAAZ;IACD,CAFM,MAEA;MACLZ,YAAY,CAACT,IAAD,EAAO,IAAP,EAAa,MAAMqB,IAAI,CAACO,EAAxB,CAAZ;MACAnB,YAAY,CAACT,IAAD,EAAO,QAAP,EAAiB,MAAMqB,IAAI,CAACQ,MAA5B,CAAZ;IACD;EACF,CAZD;AAaD"},"metadata":{},"sourceType":"script"}