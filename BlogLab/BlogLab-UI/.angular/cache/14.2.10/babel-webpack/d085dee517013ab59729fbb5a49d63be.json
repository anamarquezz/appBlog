{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HostSink = void 0;\n\nconst rxjs_1 = require(\"rxjs\");\n\nconst operators_1 = require(\"rxjs/operators\");\n\nconst update_buffer_1 = require(\"../utility/update-buffer\");\n\nconst sink_1 = require(\"./sink\");\n\nclass HostSink extends sink_1.SimpleSinkBase {\n  constructor(_host, _force = false) {\n    super();\n    this._host = _host;\n    this._force = _force;\n    this._filesToDelete = new Set();\n    this._filesToRename = new Set();\n    this._filesToCreate = new Map();\n    this._filesToUpdate = new Map();\n  }\n\n  _validateCreateAction(action) {\n    return this._force ? rxjs_1.EMPTY : super._validateCreateAction(action);\n  }\n\n  _validateFileExists(p) {\n    if (this._filesToCreate.has(p) || this._filesToUpdate.has(p)) {\n      return (0, rxjs_1.of)(true);\n    }\n\n    if (this._filesToDelete.has(p)) {\n      return (0, rxjs_1.of)(false);\n    }\n\n    for (const [from, to] of this._filesToRename.values()) {\n      switch (p) {\n        case from:\n          return (0, rxjs_1.of)(false);\n\n        case to:\n          return (0, rxjs_1.of)(true);\n      }\n    }\n\n    return this._host.exists(p);\n  }\n\n  _overwriteFile(path, content) {\n    this._filesToUpdate.set(path, update_buffer_1.UpdateBufferBase.create(content));\n\n    return rxjs_1.EMPTY;\n  }\n\n  _createFile(path, content) {\n    this._filesToCreate.set(path, update_buffer_1.UpdateBufferBase.create(content));\n\n    return rxjs_1.EMPTY;\n  }\n\n  _renameFile(from, to) {\n    this._filesToRename.add([from, to]);\n\n    return rxjs_1.EMPTY;\n  }\n\n  _deleteFile(path) {\n    if (this._filesToCreate.has(path)) {\n      this._filesToCreate.delete(path);\n\n      this._filesToUpdate.delete(path);\n    } else {\n      this._filesToDelete.add(path);\n    }\n\n    return rxjs_1.EMPTY;\n  }\n\n  _done() {\n    // Really commit everything to the actual filesystem.\n    return (0, rxjs_1.concat)((0, rxjs_1.from)([...this._filesToDelete.values()]).pipe((0, operators_1.concatMap)(path => this._host.delete(path))), (0, rxjs_1.from)([...this._filesToRename.entries()]).pipe((0, operators_1.concatMap)(([_, [path, to]]) => this._host.rename(path, to))), (0, rxjs_1.from)([...this._filesToCreate.entries()]).pipe((0, operators_1.concatMap)(([path, buffer]) => {\n      return this._host.write(path, buffer.generate());\n    })), (0, rxjs_1.from)([...this._filesToUpdate.entries()]).pipe((0, operators_1.concatMap)(([path, buffer]) => {\n      return this._host.write(path, buffer.generate());\n    }))).pipe((0, operators_1.reduce)(() => {}));\n  }\n\n}\n\nexports.HostSink = HostSink;","map":{"version":3,"names":["Object","defineProperty","exports","value","HostSink","rxjs_1","require","operators_1","update_buffer_1","sink_1","SimpleSinkBase","constructor","_host","_force","_filesToDelete","Set","_filesToRename","_filesToCreate","Map","_filesToUpdate","_validateCreateAction","action","EMPTY","_validateFileExists","p","has","of","from","to","values","exists","_overwriteFile","path","content","set","UpdateBufferBase","create","_createFile","_renameFile","add","_deleteFile","delete","_done","concat","pipe","concatMap","entries","_","rename","buffer","write","generate","reduce"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/schematics/src/sink/host.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HostSink = void 0;\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst update_buffer_1 = require(\"../utility/update-buffer\");\nconst sink_1 = require(\"./sink\");\nclass HostSink extends sink_1.SimpleSinkBase {\n    constructor(_host, _force = false) {\n        super();\n        this._host = _host;\n        this._force = _force;\n        this._filesToDelete = new Set();\n        this._filesToRename = new Set();\n        this._filesToCreate = new Map();\n        this._filesToUpdate = new Map();\n    }\n    _validateCreateAction(action) {\n        return this._force ? rxjs_1.EMPTY : super._validateCreateAction(action);\n    }\n    _validateFileExists(p) {\n        if (this._filesToCreate.has(p) || this._filesToUpdate.has(p)) {\n            return (0, rxjs_1.of)(true);\n        }\n        if (this._filesToDelete.has(p)) {\n            return (0, rxjs_1.of)(false);\n        }\n        for (const [from, to] of this._filesToRename.values()) {\n            switch (p) {\n                case from:\n                    return (0, rxjs_1.of)(false);\n                case to:\n                    return (0, rxjs_1.of)(true);\n            }\n        }\n        return this._host.exists(p);\n    }\n    _overwriteFile(path, content) {\n        this._filesToUpdate.set(path, update_buffer_1.UpdateBufferBase.create(content));\n        return rxjs_1.EMPTY;\n    }\n    _createFile(path, content) {\n        this._filesToCreate.set(path, update_buffer_1.UpdateBufferBase.create(content));\n        return rxjs_1.EMPTY;\n    }\n    _renameFile(from, to) {\n        this._filesToRename.add([from, to]);\n        return rxjs_1.EMPTY;\n    }\n    _deleteFile(path) {\n        if (this._filesToCreate.has(path)) {\n            this._filesToCreate.delete(path);\n            this._filesToUpdate.delete(path);\n        }\n        else {\n            this._filesToDelete.add(path);\n        }\n        return rxjs_1.EMPTY;\n    }\n    _done() {\n        // Really commit everything to the actual filesystem.\n        return (0, rxjs_1.concat)((0, rxjs_1.from)([...this._filesToDelete.values()]).pipe((0, operators_1.concatMap)((path) => this._host.delete(path))), (0, rxjs_1.from)([...this._filesToRename.entries()]).pipe((0, operators_1.concatMap)(([_, [path, to]]) => this._host.rename(path, to))), (0, rxjs_1.from)([...this._filesToCreate.entries()]).pipe((0, operators_1.concatMap)(([path, buffer]) => {\n            return this._host.write(path, buffer.generate());\n        })), (0, rxjs_1.from)([...this._filesToUpdate.entries()]).pipe((0, operators_1.concatMap)(([path, buffer]) => {\n            return this._host.write(path, buffer.generate());\n        }))).pipe((0, operators_1.reduce)(() => { }));\n    }\n}\nexports.HostSink = HostSink;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}