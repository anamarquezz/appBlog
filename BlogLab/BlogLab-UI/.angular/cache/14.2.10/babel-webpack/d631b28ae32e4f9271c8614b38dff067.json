{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VersionCommandModule = void 0;\n\nconst module_1 = __importDefault(require(\"module\"));\n\nconst path_1 = require(\"path\");\n\nconst command_module_1 = require(\"../../command-builder/command-module\");\n\nconst color_1 = require(\"../../utilities/color\");\n/**\n * Major versions of Node.js that are officially supported by Angular.\n */\n\n\nconst SUPPORTED_NODE_MAJORS = [14, 16];\nconst PACKAGE_PATTERNS = [/^@angular\\/.*/, /^@angular-devkit\\/.*/, /^@bazel\\/.*/, /^@ngtools\\/.*/, /^@nguniversal\\/.*/, /^@schematics\\/.*/, /^rxjs$/, /^typescript$/, /^ng-packagr$/, /^webpack$/];\n\nclass VersionCommandModule extends command_module_1.CommandModule {\n  constructor() {\n    super(...arguments);\n    this.command = 'version';\n    this.aliases = ['v'];\n    this.describe = 'Outputs Angular CLI version.';\n  }\n\n  builder(localYargs) {\n    return localYargs;\n  }\n\n  run() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      const {\n        packageManager,\n        logger,\n        root\n      } = _this.context;\n      const localRequire = module_1.default.createRequire((0, path_1.resolve)(__filename, '../../../')); // Trailing slash is used to allow the path to be treated as a directory\n\n      const workspaceRequire = module_1.default.createRequire(root + '/');\n      const cliPackage = localRequire('./package.json');\n      let workspacePackage;\n\n      try {\n        workspacePackage = workspaceRequire('./package.json');\n      } catch {}\n\n      const [nodeMajor] = process.versions.node.split('.').map(part => Number(part));\n      const unsupportedNodeVersion = !SUPPORTED_NODE_MAJORS.includes(nodeMajor);\n      const packageNames = new Set(Object.keys({ ...cliPackage.dependencies,\n        ...cliPackage.devDependencies,\n        ...(workspacePackage === null || workspacePackage === void 0 ? void 0 : workspacePackage.dependencies),\n        ...(workspacePackage === null || workspacePackage === void 0 ? void 0 : workspacePackage.devDependencies)\n      }));\n      const versions = {};\n\n      for (const name of packageNames) {\n        if (PACKAGE_PATTERNS.some(p => p.test(name))) {\n          versions[name] = _this.getVersion(name, workspaceRequire, localRequire);\n        }\n      }\n\n      const ngCliVersion = cliPackage.version;\n      let angularCoreVersion = '';\n      const angularSameAsCore = [];\n\n      if (workspacePackage) {\n        // Filter all angular versions that are the same as core.\n        angularCoreVersion = versions['@angular/core'];\n\n        if (angularCoreVersion) {\n          for (const [name, version] of Object.entries(versions)) {\n            if (version === angularCoreVersion && name.startsWith('@angular/')) {\n              angularSameAsCore.push(name.replace(/^@angular\\//, ''));\n              delete versions[name];\n            }\n          } // Make sure we list them in alphabetical order.\n\n\n          angularSameAsCore.sort();\n        }\n      }\n\n      const namePad = ' '.repeat(Object.keys(versions).sort((a, b) => b.length - a.length)[0].length + 3);\n      const asciiArt = `\n     _                      _                 ____ _     ___\n    / \\\\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / â–³ \\\\ | '_ \\\\ / _\\` | | | | |/ _\\` | '__|   | |   | |    | |\n  / ___ \\\\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\\\_\\\\_| |_|\\\\__, |\\\\__,_|_|\\\\__,_|_|       \\\\____|_____|___|\n                |___/\n    `.split('\\n').map(x => color_1.colors.red(x)).join('\\n');\n      logger.info(asciiArt);\n      logger.info(`\n      Angular CLI: ${ngCliVersion}\n      Node: ${process.versions.node}${unsupportedNodeVersion ? ' (Unsupported)' : ''}\n      Package Manager: ${packageManager.name} ${(_a = packageManager.version) !== null && _a !== void 0 ? _a : '<error>'} \n      OS: ${process.platform} ${process.arch}\n\n      Angular: ${angularCoreVersion}\n      ... ${angularSameAsCore.reduce((acc, name) => {\n        // Perform a simple word wrap around 60.\n        if (acc.length == 0) {\n          return [name];\n        }\n\n        const line = acc[acc.length - 1] + ', ' + name;\n\n        if (line.length > 60) {\n          acc.push(name);\n        } else {\n          acc[acc.length - 1] = line;\n        }\n\n        return acc;\n      }, []).join('\\n... ')}\n\n      Package${namePad.slice(7)}Version\n      -------${namePad.replace(/ /g, '-')}------------------\n      ${Object.keys(versions).map(module => `${module}${namePad.slice(module.length)}${versions[module]}`).sort().join('\\n')}\n    `.replace(/^ {6}/gm, ''));\n\n      if (unsupportedNodeVersion) {\n        logger.warn(`Warning: The current version of Node (${process.versions.node}) is not supported by Angular.`);\n      }\n    })();\n  }\n\n  getVersion(moduleName, workspaceRequire, localRequire) {\n    let packageInfo;\n    let cliOnly = false; // Try to find the package in the workspace\n\n    try {\n      packageInfo = workspaceRequire(`${moduleName}/package.json`);\n    } catch {} // If not found, try to find within the CLI\n\n\n    if (!packageInfo) {\n      try {\n        packageInfo = localRequire(`${moduleName}/package.json`);\n        cliOnly = true;\n      } catch {}\n    } // If found, attempt to get the version\n\n\n    if (packageInfo) {\n      try {\n        return packageInfo.version + (cliOnly ? ' (cli-only)' : '');\n      } catch {}\n    }\n\n    return '<error>';\n  }\n\n}\n\nexports.VersionCommandModule = VersionCommandModule;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","VersionCommandModule","module_1","require","path_1","command_module_1","color_1","SUPPORTED_NODE_MAJORS","PACKAGE_PATTERNS","CommandModule","constructor","arguments","command","aliases","describe","builder","localYargs","run","_a","packageManager","logger","root","context","localRequire","default","createRequire","resolve","__filename","workspaceRequire","cliPackage","workspacePackage","nodeMajor","process","versions","node","split","map","part","Number","unsupportedNodeVersion","includes","packageNames","Set","keys","dependencies","devDependencies","name","some","p","test","getVersion","ngCliVersion","version","angularCoreVersion","angularSameAsCore","entries","startsWith","push","replace","sort","namePad","repeat","a","b","length","asciiArt","x","colors","red","join","info","platform","arch","reduce","acc","line","slice","module","warn","moduleName","packageInfo","cliOnly"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular/cli/src/commands/version/cli.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VersionCommandModule = void 0;\nconst module_1 = __importDefault(require(\"module\"));\nconst path_1 = require(\"path\");\nconst command_module_1 = require(\"../../command-builder/command-module\");\nconst color_1 = require(\"../../utilities/color\");\n/**\n * Major versions of Node.js that are officially supported by Angular.\n */\nconst SUPPORTED_NODE_MAJORS = [14, 16];\nconst PACKAGE_PATTERNS = [\n    /^@angular\\/.*/,\n    /^@angular-devkit\\/.*/,\n    /^@bazel\\/.*/,\n    /^@ngtools\\/.*/,\n    /^@nguniversal\\/.*/,\n    /^@schematics\\/.*/,\n    /^rxjs$/,\n    /^typescript$/,\n    /^ng-packagr$/,\n    /^webpack$/,\n];\nclass VersionCommandModule extends command_module_1.CommandModule {\n    constructor() {\n        super(...arguments);\n        this.command = 'version';\n        this.aliases = ['v'];\n        this.describe = 'Outputs Angular CLI version.';\n    }\n    builder(localYargs) {\n        return localYargs;\n    }\n    async run() {\n        var _a;\n        const { packageManager, logger, root } = this.context;\n        const localRequire = module_1.default.createRequire((0, path_1.resolve)(__filename, '../../../'));\n        // Trailing slash is used to allow the path to be treated as a directory\n        const workspaceRequire = module_1.default.createRequire(root + '/');\n        const cliPackage = localRequire('./package.json');\n        let workspacePackage;\n        try {\n            workspacePackage = workspaceRequire('./package.json');\n        }\n        catch { }\n        const [nodeMajor] = process.versions.node.split('.').map((part) => Number(part));\n        const unsupportedNodeVersion = !SUPPORTED_NODE_MAJORS.includes(nodeMajor);\n        const packageNames = new Set(Object.keys({\n            ...cliPackage.dependencies,\n            ...cliPackage.devDependencies,\n            ...workspacePackage === null || workspacePackage === void 0 ? void 0 : workspacePackage.dependencies,\n            ...workspacePackage === null || workspacePackage === void 0 ? void 0 : workspacePackage.devDependencies,\n        }));\n        const versions = {};\n        for (const name of packageNames) {\n            if (PACKAGE_PATTERNS.some((p) => p.test(name))) {\n                versions[name] = this.getVersion(name, workspaceRequire, localRequire);\n            }\n        }\n        const ngCliVersion = cliPackage.version;\n        let angularCoreVersion = '';\n        const angularSameAsCore = [];\n        if (workspacePackage) {\n            // Filter all angular versions that are the same as core.\n            angularCoreVersion = versions['@angular/core'];\n            if (angularCoreVersion) {\n                for (const [name, version] of Object.entries(versions)) {\n                    if (version === angularCoreVersion && name.startsWith('@angular/')) {\n                        angularSameAsCore.push(name.replace(/^@angular\\//, ''));\n                        delete versions[name];\n                    }\n                }\n                // Make sure we list them in alphabetical order.\n                angularSameAsCore.sort();\n            }\n        }\n        const namePad = ' '.repeat(Object.keys(versions).sort((a, b) => b.length - a.length)[0].length + 3);\n        const asciiArt = `\n     _                      _                 ____ _     ___\n    / \\\\   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|\n   / â–³ \\\\ | '_ \\\\ / _\\` | | | | |/ _\\` | '__|   | |   | |    | |\n  / ___ \\\\| | | | (_| | |_| | | (_| | |      | |___| |___ | |\n /_/   \\\\_\\\\_| |_|\\\\__, |\\\\__,_|_|\\\\__,_|_|       \\\\____|_____|___|\n                |___/\n    `\n            .split('\\n')\n            .map((x) => color_1.colors.red(x))\n            .join('\\n');\n        logger.info(asciiArt);\n        logger.info(`\n      Angular CLI: ${ngCliVersion}\n      Node: ${process.versions.node}${unsupportedNodeVersion ? ' (Unsupported)' : ''}\n      Package Manager: ${packageManager.name} ${(_a = packageManager.version) !== null && _a !== void 0 ? _a : '<error>'} \n      OS: ${process.platform} ${process.arch}\n\n      Angular: ${angularCoreVersion}\n      ... ${angularSameAsCore\n            .reduce((acc, name) => {\n            // Perform a simple word wrap around 60.\n            if (acc.length == 0) {\n                return [name];\n            }\n            const line = acc[acc.length - 1] + ', ' + name;\n            if (line.length > 60) {\n                acc.push(name);\n            }\n            else {\n                acc[acc.length - 1] = line;\n            }\n            return acc;\n        }, [])\n            .join('\\n... ')}\n\n      Package${namePad.slice(7)}Version\n      -------${namePad.replace(/ /g, '-')}------------------\n      ${Object.keys(versions)\n            .map((module) => `${module}${namePad.slice(module.length)}${versions[module]}`)\n            .sort()\n            .join('\\n')}\n    `.replace(/^ {6}/gm, ''));\n        if (unsupportedNodeVersion) {\n            logger.warn(`Warning: The current version of Node (${process.versions.node}) is not supported by Angular.`);\n        }\n    }\n    getVersion(moduleName, workspaceRequire, localRequire) {\n        let packageInfo;\n        let cliOnly = false;\n        // Try to find the package in the workspace\n        try {\n            packageInfo = workspaceRequire(`${moduleName}/package.json`);\n        }\n        catch { }\n        // If not found, try to find within the CLI\n        if (!packageInfo) {\n            try {\n                packageInfo = localRequire(`${moduleName}/package.json`);\n                cliOnly = true;\n            }\n            catch { }\n        }\n        // If found, attempt to get the version\n        if (packageInfo) {\n            try {\n                return packageInfo.version + (cliOnly ? ' (cli-only)' : '');\n            }\n            catch { }\n        }\n        return '<error>';\n    }\n}\nexports.VersionCommandModule = VersionCommandModule;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}