{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDispatcher = void 0;\n\nconst api_1 = require(\"./api\");\n\nconst exception_1 = require(\"./exception\");\n/**\n * OnReady a dispatcher that can dispatch to a sub job, depending on conditions.\n * @param options\n */\n\n\nfunction createDispatcher(options = {}) {\n  let defaultDelegate = null;\n  const conditionalDelegateList = [];\n  const job = Object.assign((argument, context) => {\n    const maybeDelegate = conditionalDelegateList.find(([predicate]) => predicate(argument));\n    let delegate = null;\n\n    if (maybeDelegate) {\n      delegate = context.scheduler.schedule(maybeDelegate[1], argument);\n    } else if (defaultDelegate) {\n      delegate = context.scheduler.schedule(defaultDelegate, argument);\n    } else {\n      throw new exception_1.JobDoesNotExistException('<null>');\n    }\n\n    context.inboundBus.subscribe(delegate.inboundBus);\n    return delegate.outboundBus;\n  }, {\n    jobDescription: options\n  });\n  return Object.assign(job, {\n    setDefaultJob(name) {\n      if ((0, api_1.isJobHandler)(name)) {\n        name = name.jobDescription.name === undefined ? null : name.jobDescription.name;\n      }\n\n      defaultDelegate = name;\n    },\n\n    addConditionalJob(predicate, name) {\n      conditionalDelegateList.push([predicate, name]);\n    } // TODO: Remove return-only generic from createDispatcher() API.\n\n\n  });\n}\n\nexports.createDispatcher = createDispatcher;","map":{"version":3,"names":["Object","defineProperty","exports","value","createDispatcher","api_1","require","exception_1","options","defaultDelegate","conditionalDelegateList","job","assign","argument","context","maybeDelegate","find","predicate","delegate","scheduler","schedule","JobDoesNotExistException","inboundBus","subscribe","outboundBus","jobDescription","setDefaultJob","name","isJobHandler","undefined","addConditionalJob","push"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/core/src/experimental/jobs/dispatcher.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createDispatcher = void 0;\nconst api_1 = require(\"./api\");\nconst exception_1 = require(\"./exception\");\n/**\n * OnReady a dispatcher that can dispatch to a sub job, depending on conditions.\n * @param options\n */\nfunction createDispatcher(options = {}) {\n    let defaultDelegate = null;\n    const conditionalDelegateList = [];\n    const job = Object.assign((argument, context) => {\n        const maybeDelegate = conditionalDelegateList.find(([predicate]) => predicate(argument));\n        let delegate = null;\n        if (maybeDelegate) {\n            delegate = context.scheduler.schedule(maybeDelegate[1], argument);\n        }\n        else if (defaultDelegate) {\n            delegate = context.scheduler.schedule(defaultDelegate, argument);\n        }\n        else {\n            throw new exception_1.JobDoesNotExistException('<null>');\n        }\n        context.inboundBus.subscribe(delegate.inboundBus);\n        return delegate.outboundBus;\n    }, {\n        jobDescription: options,\n    });\n    return Object.assign(job, {\n        setDefaultJob(name) {\n            if ((0, api_1.isJobHandler)(name)) {\n                name = name.jobDescription.name === undefined ? null : name.jobDescription.name;\n            }\n            defaultDelegate = name;\n        },\n        addConditionalJob(predicate, name) {\n            conditionalDelegateList.push([predicate, name]);\n        },\n        // TODO: Remove return-only generic from createDispatcher() API.\n    });\n}\nexports.createDispatcher = createDispatcher;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2B,KAAK,CAAhC;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,aAAD,CAA3B;AACA;AACA;AACA;AACA;;;AACA,SAASF,gBAAT,CAA0BI,OAAO,GAAG,EAApC,EAAwC;EACpC,IAAIC,eAAe,GAAG,IAAtB;EACA,MAAMC,uBAAuB,GAAG,EAAhC;EACA,MAAMC,GAAG,GAAGX,MAAM,CAACY,MAAP,CAAc,CAACC,QAAD,EAAWC,OAAX,KAAuB;IAC7C,MAAMC,aAAa,GAAGL,uBAAuB,CAACM,IAAxB,CAA6B,CAAC,CAACC,SAAD,CAAD,KAAiBA,SAAS,CAACJ,QAAD,CAAvD,CAAtB;IACA,IAAIK,QAAQ,GAAG,IAAf;;IACA,IAAIH,aAAJ,EAAmB;MACfG,QAAQ,GAAGJ,OAAO,CAACK,SAAR,CAAkBC,QAAlB,CAA2BL,aAAa,CAAC,CAAD,CAAxC,EAA6CF,QAA7C,CAAX;IACH,CAFD,MAGK,IAAIJ,eAAJ,EAAqB;MACtBS,QAAQ,GAAGJ,OAAO,CAACK,SAAR,CAAkBC,QAAlB,CAA2BX,eAA3B,EAA4CI,QAA5C,CAAX;IACH,CAFI,MAGA;MACD,MAAM,IAAIN,WAAW,CAACc,wBAAhB,CAAyC,QAAzC,CAAN;IACH;;IACDP,OAAO,CAACQ,UAAR,CAAmBC,SAAnB,CAA6BL,QAAQ,CAACI,UAAtC;IACA,OAAOJ,QAAQ,CAACM,WAAhB;EACH,CAdW,EAcT;IACCC,cAAc,EAAEjB;EADjB,CAdS,CAAZ;EAiBA,OAAOR,MAAM,CAACY,MAAP,CAAcD,GAAd,EAAmB;IACtBe,aAAa,CAACC,IAAD,EAAO;MAChB,IAAI,CAAC,GAAGtB,KAAK,CAACuB,YAAV,EAAwBD,IAAxB,CAAJ,EAAmC;QAC/BA,IAAI,GAAGA,IAAI,CAACF,cAAL,CAAoBE,IAApB,KAA6BE,SAA7B,GAAyC,IAAzC,GAAgDF,IAAI,CAACF,cAAL,CAAoBE,IAA3E;MACH;;MACDlB,eAAe,GAAGkB,IAAlB;IACH,CANqB;;IAOtBG,iBAAiB,CAACb,SAAD,EAAYU,IAAZ,EAAkB;MAC/BjB,uBAAuB,CAACqB,IAAxB,CAA6B,CAACd,SAAD,EAAYU,IAAZ,CAA7B;IACH,CATqB,CAUtB;;;EAVsB,CAAnB,CAAP;AAYH;;AACDzB,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B"},"metadata":{},"sourceType":"script"}