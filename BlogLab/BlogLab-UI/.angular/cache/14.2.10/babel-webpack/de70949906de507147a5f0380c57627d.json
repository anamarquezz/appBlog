{"ast":null,"code":"'use strict';\n/**\n * Inquirer.js\n * A collection of common interactive command line user interfaces.\n */\n\nconst inquirer = module.exports;\n/**\n * Client interfaces\n */\n\ninquirer.prompts = {};\ninquirer.Separator = require('./objects/separator');\ninquirer.ui = {\n  BottomBar: require('./ui/bottom-bar'),\n  Prompt: require('./ui/prompt')\n};\n/**\n * Create a new self-contained prompt module.\n */\n\ninquirer.createPromptModule = function (opt) {\n  const promptModule = function (questions, answers) {\n    let ui;\n\n    try {\n      ui = new inquirer.ui.Prompt(promptModule.prompts, opt);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    const promise = ui.run(questions, answers); // Monkey patch the UI on the promise object so\n    // that it remains publicly accessible.\n\n    promise.ui = ui;\n    return promise;\n  };\n\n  promptModule.prompts = {};\n  /**\n   * Register a prompt type\n   * @param {String} name     Prompt type name\n   * @param {Function} prompt Prompt constructor\n   * @return {inquirer}\n   */\n\n  promptModule.registerPrompt = function (name, prompt) {\n    promptModule.prompts[name] = prompt;\n    return this;\n  };\n  /**\n   * Register the defaults provider prompts\n   */\n\n\n  promptModule.restoreDefaultPrompts = function () {\n    this.registerPrompt('list', require('./prompts/list'));\n    this.registerPrompt('input', require('./prompts/input'));\n    this.registerPrompt('number', require('./prompts/number'));\n    this.registerPrompt('confirm', require('./prompts/confirm'));\n    this.registerPrompt('rawlist', require('./prompts/rawlist'));\n    this.registerPrompt('expand', require('./prompts/expand'));\n    this.registerPrompt('checkbox', require('./prompts/checkbox'));\n    this.registerPrompt('password', require('./prompts/password'));\n    this.registerPrompt('editor', require('./prompts/editor'));\n  };\n\n  promptModule.restoreDefaultPrompts();\n  return promptModule;\n};\n/**\n * Public CLI helper interface\n * @param  {Array|Object|Rx.Observable} questions - Questions settings array\n * @param  {Function} cb - Callback being passed the user answers\n * @return {inquirer.ui.Prompt}\n */\n\n\ninquirer.prompt = inquirer.createPromptModule(); // Expose helper functions on the top level for easiest usage by common users\n\ninquirer.registerPrompt = function (name, prompt) {\n  inquirer.prompt.registerPrompt(name, prompt);\n};\n\ninquirer.restoreDefaultPrompts = function () {\n  inquirer.prompt.restoreDefaultPrompts();\n};","map":{"version":3,"names":["inquirer","module","exports","prompts","Separator","require","ui","BottomBar","Prompt","createPromptModule","opt","promptModule","questions","answers","error","Promise","reject","promise","run","registerPrompt","name","prompt","restoreDefaultPrompts"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/inquirer/lib/inquirer.js"],"sourcesContent":["'use strict';\n/**\n * Inquirer.js\n * A collection of common interactive command line user interfaces.\n */\n\nconst inquirer = module.exports;\n\n/**\n * Client interfaces\n */\n\ninquirer.prompts = {};\n\ninquirer.Separator = require('./objects/separator');\n\ninquirer.ui = {\n  BottomBar: require('./ui/bottom-bar'),\n  Prompt: require('./ui/prompt'),\n};\n\n/**\n * Create a new self-contained prompt module.\n */\ninquirer.createPromptModule = function (opt) {\n  const promptModule = function (questions, answers) {\n    let ui;\n    try {\n      ui = new inquirer.ui.Prompt(promptModule.prompts, opt);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n    const promise = ui.run(questions, answers);\n\n    // Monkey patch the UI on the promise object so\n    // that it remains publicly accessible.\n    promise.ui = ui;\n\n    return promise;\n  };\n\n  promptModule.prompts = {};\n\n  /**\n   * Register a prompt type\n   * @param {String} name     Prompt type name\n   * @param {Function} prompt Prompt constructor\n   * @return {inquirer}\n   */\n\n  promptModule.registerPrompt = function (name, prompt) {\n    promptModule.prompts[name] = prompt;\n    return this;\n  };\n\n  /**\n   * Register the defaults provider prompts\n   */\n\n  promptModule.restoreDefaultPrompts = function () {\n    this.registerPrompt('list', require('./prompts/list'));\n    this.registerPrompt('input', require('./prompts/input'));\n    this.registerPrompt('number', require('./prompts/number'));\n    this.registerPrompt('confirm', require('./prompts/confirm'));\n    this.registerPrompt('rawlist', require('./prompts/rawlist'));\n    this.registerPrompt('expand', require('./prompts/expand'));\n    this.registerPrompt('checkbox', require('./prompts/checkbox'));\n    this.registerPrompt('password', require('./prompts/password'));\n    this.registerPrompt('editor', require('./prompts/editor'));\n  };\n\n  promptModule.restoreDefaultPrompts();\n\n  return promptModule;\n};\n\n/**\n * Public CLI helper interface\n * @param  {Array|Object|Rx.Observable} questions - Questions settings array\n * @param  {Function} cb - Callback being passed the user answers\n * @return {inquirer.ui.Prompt}\n */\n\ninquirer.prompt = inquirer.createPromptModule();\n\n// Expose helper functions on the top level for easiest usage by common users\ninquirer.registerPrompt = function (name, prompt) {\n  inquirer.prompt.registerPrompt(name, prompt);\n};\n\ninquirer.restoreDefaultPrompts = function () {\n  inquirer.prompt.restoreDefaultPrompts();\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,QAAQ,GAAGC,MAAM,CAACC,OAAxB;AAEA;AACA;AACA;;AAEAF,QAAQ,CAACG,OAAT,GAAmB,EAAnB;AAEAH,QAAQ,CAACI,SAAT,GAAqBC,OAAO,CAAC,qBAAD,CAA5B;AAEAL,QAAQ,CAACM,EAAT,GAAc;EACZC,SAAS,EAAEF,OAAO,CAAC,iBAAD,CADN;EAEZG,MAAM,EAAEH,OAAO,CAAC,aAAD;AAFH,CAAd;AAKA;AACA;AACA;;AACAL,QAAQ,CAACS,kBAAT,GAA8B,UAAUC,GAAV,EAAe;EAC3C,MAAMC,YAAY,GAAG,UAAUC,SAAV,EAAqBC,OAArB,EAA8B;IACjD,IAAIP,EAAJ;;IACA,IAAI;MACFA,EAAE,GAAG,IAAIN,QAAQ,CAACM,EAAT,CAAYE,MAAhB,CAAuBG,YAAY,CAACR,OAApC,EAA6CO,GAA7C,CAAL;IACD,CAFD,CAEE,OAAOI,KAAP,EAAc;MACd,OAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;IACD;;IACD,MAAMG,OAAO,GAAGX,EAAE,CAACY,GAAH,CAAON,SAAP,EAAkBC,OAAlB,CAAhB,CAPiD,CASjD;IACA;;IACAI,OAAO,CAACX,EAAR,GAAaA,EAAb;IAEA,OAAOW,OAAP;EACD,CAdD;;EAgBAN,YAAY,CAACR,OAAb,GAAuB,EAAvB;EAEA;AACF;AACA;AACA;AACA;AACA;;EAEEQ,YAAY,CAACQ,cAAb,GAA8B,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;IACpDV,YAAY,CAACR,OAAb,CAAqBiB,IAArB,IAA6BC,MAA7B;IACA,OAAO,IAAP;EACD,CAHD;EAKA;AACF;AACA;;;EAEEV,YAAY,CAACW,qBAAb,GAAqC,YAAY;IAC/C,KAAKH,cAAL,CAAoB,MAApB,EAA4Bd,OAAO,CAAC,gBAAD,CAAnC;IACA,KAAKc,cAAL,CAAoB,OAApB,EAA6Bd,OAAO,CAAC,iBAAD,CAApC;IACA,KAAKc,cAAL,CAAoB,QAApB,EAA8Bd,OAAO,CAAC,kBAAD,CAArC;IACA,KAAKc,cAAL,CAAoB,SAApB,EAA+Bd,OAAO,CAAC,mBAAD,CAAtC;IACA,KAAKc,cAAL,CAAoB,SAApB,EAA+Bd,OAAO,CAAC,mBAAD,CAAtC;IACA,KAAKc,cAAL,CAAoB,QAApB,EAA8Bd,OAAO,CAAC,kBAAD,CAArC;IACA,KAAKc,cAAL,CAAoB,UAApB,EAAgCd,OAAO,CAAC,oBAAD,CAAvC;IACA,KAAKc,cAAL,CAAoB,UAApB,EAAgCd,OAAO,CAAC,oBAAD,CAAvC;IACA,KAAKc,cAAL,CAAoB,QAApB,EAA8Bd,OAAO,CAAC,kBAAD,CAArC;EACD,CAVD;;EAYAM,YAAY,CAACW,qBAAb;EAEA,OAAOX,YAAP;AACD,CAlDD;AAoDA;AACA;AACA;AACA;AACA;AACA;;;AAEAX,QAAQ,CAACqB,MAAT,GAAkBrB,QAAQ,CAACS,kBAAT,EAAlB,C,CAEA;;AACAT,QAAQ,CAACmB,cAAT,GAA0B,UAAUC,IAAV,EAAgBC,MAAhB,EAAwB;EAChDrB,QAAQ,CAACqB,MAAT,CAAgBF,cAAhB,CAA+BC,IAA/B,EAAqCC,MAArC;AACD,CAFD;;AAIArB,QAAQ,CAACsB,qBAAT,GAAiC,YAAY;EAC3CtB,QAAQ,CAACqB,MAAT,CAAgBC,qBAAhB;AACD,CAFD"},"metadata":{},"sourceType":"script"}