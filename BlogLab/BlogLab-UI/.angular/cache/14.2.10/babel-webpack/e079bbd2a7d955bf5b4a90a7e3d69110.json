{"ast":null,"code":"const {\n  URL\n} = require('url');\n\nconst replace = '***';\nconst tokenRegex = /\\bnpm_[a-zA-Z0-9]{36}\\b/g;\nconst guidRegex = /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/g;\n\nconst cleanUrl = str => {\n  if (typeof str !== 'string' || !str) {\n    return str;\n  }\n\n  try {\n    const url = new URL(str);\n\n    if (url.password) {\n      str = str.replace(url.password, replace);\n    }\n  } catch {// ignore errors\n  }\n\n  return str.replace(tokenRegex, `npm_${replace}`).replace(guidRegex, `npm_${replace}`);\n};\n\nmodule.exports = cleanUrl;","map":{"version":3,"names":["URL","require","replace","tokenRegex","guidRegex","cleanUrl","str","url","password","module","exports"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/npm-registry-fetch/lib/clean-url.js"],"sourcesContent":["const { URL } = require('url')\n\nconst replace = '***'\nconst tokenRegex = /\\bnpm_[a-zA-Z0-9]{36}\\b/g\nconst guidRegex = /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/g\n\nconst cleanUrl = (str) => {\n  if (typeof str !== 'string' || !str) {\n    return str\n  }\n\n  try {\n    const url = new URL(str)\n    if (url.password) {\n      str = str.replace(url.password, replace)\n    }\n  } catch {\n    // ignore errors\n  }\n\n  return str\n    .replace(tokenRegex, `npm_${replace}`)\n    .replace(guidRegex, `npm_${replace}`)\n}\n\nmodule.exports = cleanUrl\n"],"mappings":"AAAA,MAAM;EAAEA;AAAF,IAAUC,OAAO,CAAC,KAAD,CAAvB;;AAEA,MAAMC,OAAO,GAAG,KAAhB;AACA,MAAMC,UAAU,GAAG,0BAAnB;AACA,MAAMC,SAAS,GAAG,mEAAlB;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;EACxB,IAAI,OAAOA,GAAP,KAAe,QAAf,IAA2B,CAACA,GAAhC,EAAqC;IACnC,OAAOA,GAAP;EACD;;EAED,IAAI;IACF,MAAMC,GAAG,GAAG,IAAIP,GAAJ,CAAQM,GAAR,CAAZ;;IACA,IAAIC,GAAG,CAACC,QAAR,EAAkB;MAChBF,GAAG,GAAGA,GAAG,CAACJ,OAAJ,CAAYK,GAAG,CAACC,QAAhB,EAA0BN,OAA1B,CAAN;IACD;EACF,CALD,CAKE,MAAM,CACN;EACD;;EAED,OAAOI,GAAG,CACPJ,OADI,CACIC,UADJ,EACiB,OAAMD,OAAQ,EAD/B,EAEJA,OAFI,CAEIE,SAFJ,EAEgB,OAAMF,OAAQ,EAF9B,CAAP;AAGD,CAjBD;;AAmBAO,MAAM,CAACC,OAAP,GAAiBL,QAAjB"},"metadata":{},"sourceType":"script"}