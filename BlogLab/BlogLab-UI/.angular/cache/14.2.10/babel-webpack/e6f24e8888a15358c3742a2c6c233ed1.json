{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UpdateRecorderBom = exports.UpdateRecorderBase = void 0;\n\nconst exception_1 = require(\"../exception/exception\");\n\nconst update_buffer_1 = require(\"../utility/update-buffer\");\n\nclass UpdateRecorderBase {\n  constructor(entry) {\n    this._original = Buffer.from(entry.content);\n    this._content = update_buffer_1.UpdateBufferBase.create(entry.content);\n    this._path = entry.path;\n  }\n\n  static createFromFileEntry(entry) {\n    const c0 = entry.content.byteLength > 0 && entry.content.readUInt8(0);\n    const c1 = entry.content.byteLength > 1 && entry.content.readUInt8(1);\n    const c2 = entry.content.byteLength > 2 && entry.content.readUInt8(2); // Check if we're BOM.\n\n    if (c0 == 0xef && c1 == 0xbb && c2 == 0xbf) {\n      return new UpdateRecorderBom(entry);\n    } else if (c0 === 0xff && c1 == 0xfe) {\n      return new UpdateRecorderBom(entry);\n    } else if (c0 === 0xfe && c1 == 0xff) {\n      return new UpdateRecorderBom(entry);\n    }\n\n    return new UpdateRecorderBase(entry);\n  }\n\n  get path() {\n    return this._path;\n  } // These just record changes.\n\n\n  insertLeft(index, content) {\n    this._content.insertLeft(index, typeof content == 'string' ? Buffer.from(content) : content);\n\n    return this;\n  }\n\n  insertRight(index, content) {\n    this._content.insertRight(index, typeof content == 'string' ? Buffer.from(content) : content);\n\n    return this;\n  }\n\n  remove(index, length) {\n    this._content.remove(index, length);\n\n    return this;\n  }\n\n  apply(content) {\n    if (!content.equals(this._content.original)) {\n      throw new exception_1.ContentHasMutatedException(this.path);\n    }\n\n    return this._content.generate();\n  }\n\n}\n\nexports.UpdateRecorderBase = UpdateRecorderBase;\n\nclass UpdateRecorderBom extends UpdateRecorderBase {\n  constructor(entry, _delta = 1) {\n    super(entry);\n    this._delta = _delta;\n  }\n\n  insertLeft(index, content) {\n    return super.insertLeft(index + this._delta, content);\n  }\n\n  insertRight(index, content) {\n    return super.insertRight(index + this._delta, content);\n  }\n\n  remove(index, length) {\n    return super.remove(index + this._delta, length);\n  }\n\n}\n\nexports.UpdateRecorderBom = UpdateRecorderBom;","map":{"version":3,"names":["Object","defineProperty","exports","value","UpdateRecorderBom","UpdateRecorderBase","exception_1","require","update_buffer_1","constructor","entry","_original","Buffer","from","content","_content","UpdateBufferBase","create","_path","path","createFromFileEntry","c0","byteLength","readUInt8","c1","c2","insertLeft","index","insertRight","remove","length","apply","equals","original","ContentHasMutatedException","generate","_delta"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/schematics/src/tree/recorder.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateRecorderBom = exports.UpdateRecorderBase = void 0;\nconst exception_1 = require(\"../exception/exception\");\nconst update_buffer_1 = require(\"../utility/update-buffer\");\nclass UpdateRecorderBase {\n    constructor(entry) {\n        this._original = Buffer.from(entry.content);\n        this._content = update_buffer_1.UpdateBufferBase.create(entry.content);\n        this._path = entry.path;\n    }\n    static createFromFileEntry(entry) {\n        const c0 = entry.content.byteLength > 0 && entry.content.readUInt8(0);\n        const c1 = entry.content.byteLength > 1 && entry.content.readUInt8(1);\n        const c2 = entry.content.byteLength > 2 && entry.content.readUInt8(2);\n        // Check if we're BOM.\n        if (c0 == 0xef && c1 == 0xbb && c2 == 0xbf) {\n            return new UpdateRecorderBom(entry);\n        }\n        else if (c0 === 0xff && c1 == 0xfe) {\n            return new UpdateRecorderBom(entry);\n        }\n        else if (c0 === 0xfe && c1 == 0xff) {\n            return new UpdateRecorderBom(entry);\n        }\n        return new UpdateRecorderBase(entry);\n    }\n    get path() {\n        return this._path;\n    }\n    // These just record changes.\n    insertLeft(index, content) {\n        this._content.insertLeft(index, typeof content == 'string' ? Buffer.from(content) : content);\n        return this;\n    }\n    insertRight(index, content) {\n        this._content.insertRight(index, typeof content == 'string' ? Buffer.from(content) : content);\n        return this;\n    }\n    remove(index, length) {\n        this._content.remove(index, length);\n        return this;\n    }\n    apply(content) {\n        if (!content.equals(this._content.original)) {\n            throw new exception_1.ContentHasMutatedException(this.path);\n        }\n        return this._content.generate();\n    }\n}\nexports.UpdateRecorderBase = UpdateRecorderBase;\nclass UpdateRecorderBom extends UpdateRecorderBase {\n    constructor(entry, _delta = 1) {\n        super(entry);\n        this._delta = _delta;\n    }\n    insertLeft(index, content) {\n        return super.insertLeft(index + this._delta, content);\n    }\n    insertRight(index, content) {\n        return super.insertRight(index + this._delta, content);\n    }\n    remove(index, length) {\n        return super.remove(index + this._delta, length);\n    }\n}\nexports.UpdateRecorderBom = UpdateRecorderBom;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}