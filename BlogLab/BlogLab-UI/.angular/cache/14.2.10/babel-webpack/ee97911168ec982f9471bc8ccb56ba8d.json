{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.callRule = exports.callSource = exports.InvalidSourceResultException = exports.InvalidRuleResultException = void 0;\n\nconst core_1 = require(\"@angular-devkit/core\");\n\nconst rxjs_1 = require(\"rxjs\");\n\nconst operators_1 = require(\"rxjs/operators\");\n\nconst interface_1 = require(\"../tree/interface\");\n\nfunction _getTypeOfResult(value) {\n  if (value === undefined) {\n    return 'undefined';\n  } else if (value === null) {\n    return 'null';\n  } else if (typeof value == 'function') {\n    return `Function()`;\n  } else if (typeof value != 'object') {\n    return `${typeof value}(${JSON.stringify(value)})`;\n  } else {\n    if (Object.getPrototypeOf(value) == Object) {\n      return `Object(${JSON.stringify(value)})`;\n    } else if (value.constructor) {\n      return `Instance of class ${value.constructor.name}`;\n    } else {\n      return 'Unknown Object';\n    }\n  }\n}\n/**\n * When a rule or source returns an invalid value.\n */\n\n\nclass InvalidRuleResultException extends core_1.BaseException {\n  constructor(value) {\n    super(`Invalid rule result: ${_getTypeOfResult(value)}.`);\n  }\n\n}\n\nexports.InvalidRuleResultException = InvalidRuleResultException;\n\nclass InvalidSourceResultException extends core_1.BaseException {\n  constructor(value) {\n    super(`Invalid source result: ${_getTypeOfResult(value)}.`);\n  }\n\n}\n\nexports.InvalidSourceResultException = InvalidSourceResultException;\n\nfunction callSource(source, context) {\n  return (0, rxjs_1.defer)( /*#__PURE__*/_asyncToGenerator(function* () {\n    let result = source(context);\n\n    if ((0, rxjs_1.isObservable)(result)) {\n      result = yield result.pipe((0, operators_1.defaultIfEmpty)()).toPromise();\n    }\n\n    if (result && interface_1.TreeSymbol in result) {\n      return result;\n    }\n\n    throw new InvalidSourceResultException(result);\n  }));\n}\n\nexports.callSource = callSource;\n\nfunction callRule(rule, input, context) {\n  if ((0, rxjs_1.isObservable)(input)) {\n    return input.pipe((0, operators_1.mergeMap)(inputTree => callRuleAsync(rule, inputTree, context)));\n  } else {\n    return (0, rxjs_1.defer)(() => callRuleAsync(rule, input, context));\n  }\n}\n\nexports.callRule = callRule;\n\nfunction callRuleAsync(_x, _x2, _x3) {\n  return _callRuleAsync.apply(this, arguments);\n}\n\nfunction _callRuleAsync() {\n  _callRuleAsync = _asyncToGenerator(function* (rule, tree, context) {\n    let result = yield rule(tree, context);\n\n    while (typeof result === 'function') {\n      // This is considered a Rule, chain the rule and return its output.\n      result = yield result(tree, context);\n    }\n\n    if (typeof result === 'undefined') {\n      return tree;\n    }\n\n    if ((0, rxjs_1.isObservable)(result)) {\n      result = yield result.pipe((0, operators_1.defaultIfEmpty)(tree)).toPromise();\n    }\n\n    if (result && interface_1.TreeSymbol in result) {\n      return result;\n    }\n\n    throw new InvalidRuleResultException(result);\n  });\n  return _callRuleAsync.apply(this, arguments);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","callRule","callSource","InvalidSourceResultException","InvalidRuleResultException","core_1","require","rxjs_1","operators_1","interface_1","_getTypeOfResult","undefined","JSON","stringify","getPrototypeOf","constructor","name","BaseException","source","context","defer","result","isObservable","pipe","defaultIfEmpty","toPromise","TreeSymbol","rule","input","mergeMap","inputTree","callRuleAsync","tree"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/schematics/src/rules/call.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.callRule = exports.callSource = exports.InvalidSourceResultException = exports.InvalidRuleResultException = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst interface_1 = require(\"../tree/interface\");\nfunction _getTypeOfResult(value) {\n    if (value === undefined) {\n        return 'undefined';\n    }\n    else if (value === null) {\n        return 'null';\n    }\n    else if (typeof value == 'function') {\n        return `Function()`;\n    }\n    else if (typeof value != 'object') {\n        return `${typeof value}(${JSON.stringify(value)})`;\n    }\n    else {\n        if (Object.getPrototypeOf(value) == Object) {\n            return `Object(${JSON.stringify(value)})`;\n        }\n        else if (value.constructor) {\n            return `Instance of class ${value.constructor.name}`;\n        }\n        else {\n            return 'Unknown Object';\n        }\n    }\n}\n/**\n * When a rule or source returns an invalid value.\n */\nclass InvalidRuleResultException extends core_1.BaseException {\n    constructor(value) {\n        super(`Invalid rule result: ${_getTypeOfResult(value)}.`);\n    }\n}\nexports.InvalidRuleResultException = InvalidRuleResultException;\nclass InvalidSourceResultException extends core_1.BaseException {\n    constructor(value) {\n        super(`Invalid source result: ${_getTypeOfResult(value)}.`);\n    }\n}\nexports.InvalidSourceResultException = InvalidSourceResultException;\nfunction callSource(source, context) {\n    return (0, rxjs_1.defer)(async () => {\n        let result = source(context);\n        if ((0, rxjs_1.isObservable)(result)) {\n            result = await result.pipe((0, operators_1.defaultIfEmpty)()).toPromise();\n        }\n        if (result && interface_1.TreeSymbol in result) {\n            return result;\n        }\n        throw new InvalidSourceResultException(result);\n    });\n}\nexports.callSource = callSource;\nfunction callRule(rule, input, context) {\n    if ((0, rxjs_1.isObservable)(input)) {\n        return input.pipe((0, operators_1.mergeMap)((inputTree) => callRuleAsync(rule, inputTree, context)));\n    }\n    else {\n        return (0, rxjs_1.defer)(() => callRuleAsync(rule, input, context));\n    }\n}\nexports.callRule = callRule;\nasync function callRuleAsync(rule, tree, context) {\n    let result = await rule(tree, context);\n    while (typeof result === 'function') {\n        // This is considered a Rule, chain the rule and return its output.\n        result = await result(tree, context);\n    }\n    if (typeof result === 'undefined') {\n        return tree;\n    }\n    if ((0, rxjs_1.isObservable)(result)) {\n        result = await result.pipe((0, operators_1.defaultIfEmpty)(tree)).toPromise();\n    }\n    if (result && interface_1.TreeSymbol in result) {\n        return result;\n    }\n    throw new InvalidRuleResultException(result);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}