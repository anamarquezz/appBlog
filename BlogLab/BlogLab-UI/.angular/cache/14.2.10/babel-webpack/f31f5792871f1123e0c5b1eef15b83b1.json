{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SchematicEngine = exports.TaskScheduler = exports.CollectionImpl = exports.UnknownTaskDependencyException = exports.UnregisteredTaskException = exports.SchematicEngineConflictingException = exports.PrivateSchematicException = exports.UnknownSchematicException = exports.CircularCollectionException = exports.UnknownCollectionException = exports.UnknownUrlSourceProtocol = void 0;\n\nconst core_1 = require(\"@angular-devkit/core\");\n\nconst rxjs_1 = require(\"rxjs\");\n\nconst operators_1 = require(\"rxjs/operators\");\n\nconst interface_1 = require(\"../tree/interface\");\n\nconst null_1 = require(\"../tree/null\");\n\nconst static_1 = require(\"../tree/static\");\n\nconst schematic_1 = require(\"./schematic\");\n\nclass UnknownUrlSourceProtocol extends core_1.BaseException {\n  constructor(url) {\n    super(`Unknown Protocol on url \"${url}\".`);\n  }\n\n}\n\nexports.UnknownUrlSourceProtocol = UnknownUrlSourceProtocol;\n\nclass UnknownCollectionException extends core_1.BaseException {\n  constructor(name) {\n    super(`Unknown collection \"${name}\".`);\n  }\n\n}\n\nexports.UnknownCollectionException = UnknownCollectionException;\n\nclass CircularCollectionException extends core_1.BaseException {\n  constructor(name) {\n    super(`Circular collection reference \"${name}\".`);\n  }\n\n}\n\nexports.CircularCollectionException = CircularCollectionException;\n\nclass UnknownSchematicException extends core_1.BaseException {\n  constructor(name, collection) {\n    super(`Schematic \"${name}\" not found in collection \"${collection.name}\".`);\n  }\n\n}\n\nexports.UnknownSchematicException = UnknownSchematicException;\n\nclass PrivateSchematicException extends core_1.BaseException {\n  constructor(name, collection) {\n    super(`Schematic \"${name}\" not found in collection \"${collection.name}\".`);\n  }\n\n}\n\nexports.PrivateSchematicException = PrivateSchematicException;\n\nclass SchematicEngineConflictingException extends core_1.BaseException {\n  constructor() {\n    super(`A schematic was called from a different engine as its parent.`);\n  }\n\n}\n\nexports.SchematicEngineConflictingException = SchematicEngineConflictingException;\n\nclass UnregisteredTaskException extends core_1.BaseException {\n  constructor(name, schematic) {\n    const addendum = schematic ? ` in schematic \"${schematic.name}\"` : '';\n    super(`Unregistered task \"${name}\"${addendum}.`);\n  }\n\n}\n\nexports.UnregisteredTaskException = UnregisteredTaskException;\n\nclass UnknownTaskDependencyException extends core_1.BaseException {\n  constructor(id) {\n    super(`Unknown task dependency [ID: ${id.id}].`);\n  }\n\n}\n\nexports.UnknownTaskDependencyException = UnknownTaskDependencyException;\n\nclass CollectionImpl {\n  constructor(_description, _engine, baseDescriptions) {\n    this._description = _description;\n    this._engine = _engine;\n    this.baseDescriptions = baseDescriptions;\n  }\n\n  get description() {\n    return this._description;\n  }\n\n  get name() {\n    return this.description.name || '<unknown>';\n  }\n\n  createSchematic(name, allowPrivate = false) {\n    return this._engine.createSchematic(name, this, allowPrivate);\n  }\n\n  listSchematicNames(includeHidden) {\n    return this._engine.listSchematicNames(this, includeHidden);\n  }\n\n}\n\nexports.CollectionImpl = CollectionImpl;\n\nclass TaskScheduler {\n  constructor(_context) {\n    this._context = _context;\n    this._queue = new core_1.PriorityQueue((x, y) => x.priority - y.priority);\n    this._taskIds = new Map();\n  }\n\n  _calculatePriority(dependencies) {\n    if (dependencies.size === 0) {\n      return 0;\n    }\n\n    const prio = [...dependencies].reduce((prio, task) => prio + task.priority, 1);\n    return prio;\n  }\n\n  _mapDependencies(dependencies) {\n    if (!dependencies) {\n      return new Set();\n    }\n\n    const tasks = dependencies.map(dep => {\n      const task = this._taskIds.get(dep);\n\n      if (!task) {\n        throw new UnknownTaskDependencyException(dep);\n      }\n\n      return task;\n    });\n    return new Set(tasks);\n  }\n\n  schedule(taskConfiguration) {\n    const dependencies = this._mapDependencies(taskConfiguration.dependencies);\n\n    const priority = this._calculatePriority(dependencies);\n\n    const task = {\n      id: TaskScheduler._taskIdCounter++,\n      priority,\n      configuration: taskConfiguration,\n      context: this._context\n    };\n\n    this._queue.push(task);\n\n    const id = {\n      id: task.id\n    };\n\n    this._taskIds.set(id, task);\n\n    return id;\n  }\n\n  finalize() {\n    const tasks = this._queue.toArray();\n\n    this._queue.clear();\n\n    this._taskIds.clear();\n\n    return tasks;\n  }\n\n}\n\nexports.TaskScheduler = TaskScheduler;\nTaskScheduler._taskIdCounter = 1;\n\nclass SchematicEngine {\n  constructor(_host, _workflow) {\n    this._host = _host;\n    this._workflow = _workflow;\n    this._collectionCache = new Map();\n    this._schematicCache = new WeakMap();\n    this._taskSchedulers = new Array();\n  }\n\n  get workflow() {\n    return this._workflow || null;\n  }\n\n  get defaultMergeStrategy() {\n    return this._host.defaultMergeStrategy || interface_1.MergeStrategy.Default;\n  }\n\n  createCollection(name, requester) {\n    let collection = this._collectionCache.get(name);\n\n    if (collection) {\n      return collection;\n    }\n\n    const [description, bases] = this._createCollectionDescription(name, requester === null || requester === void 0 ? void 0 : requester.description);\n\n    collection = new CollectionImpl(description, this, bases);\n\n    this._collectionCache.set(name, collection);\n\n    this._schematicCache.set(collection, new Map());\n\n    return collection;\n  }\n\n  _createCollectionDescription(name, requester, parentNames) {\n    const description = this._host.createCollectionDescription(name, requester);\n\n    if (!description) {\n      throw new UnknownCollectionException(name);\n    }\n\n    if (parentNames && parentNames.has(description.name)) {\n      throw new CircularCollectionException(name);\n    }\n\n    const bases = new Array();\n\n    if (description.extends) {\n      parentNames = (parentNames || new Set()).add(description.name);\n\n      for (const baseName of description.extends) {\n        const [base, baseBases] = this._createCollectionDescription(baseName, description, new Set(parentNames));\n\n        bases.unshift(base, ...baseBases);\n      }\n    }\n\n    return [description, bases];\n  }\n\n  createContext(schematic, parent, executionOptions) {\n    // Check for inconsistencies.\n    if (parent && parent.engine && parent.engine !== this) {\n      throw new SchematicEngineConflictingException();\n    }\n\n    let interactive = true;\n\n    if (executionOptions && executionOptions.interactive != undefined) {\n      interactive = executionOptions.interactive;\n    } else if (parent && parent.interactive != undefined) {\n      interactive = parent.interactive;\n    }\n\n    let context = {\n      debug: parent && parent.debug || false,\n      engine: this,\n      logger: parent && parent.logger && parent.logger.createChild(schematic.description.name) || new core_1.logging.NullLogger(),\n      schematic,\n      strategy: parent && parent.strategy !== undefined ? parent.strategy : this.defaultMergeStrategy,\n      interactive,\n      addTask\n    };\n\n    const maybeNewContext = this._host.transformContext(context);\n\n    if (maybeNewContext) {\n      context = maybeNewContext;\n    }\n\n    const taskScheduler = new TaskScheduler(context);\n    const host = this._host;\n\n    this._taskSchedulers.push(taskScheduler);\n\n    function addTask(task, dependencies) {\n      const config = task.toConfiguration();\n\n      if (!host.hasTaskExecutor(config.name)) {\n        throw new UnregisteredTaskException(config.name, schematic.description);\n      }\n\n      config.dependencies = config.dependencies || [];\n\n      if (dependencies) {\n        config.dependencies.unshift(...dependencies);\n      }\n\n      return taskScheduler.schedule(config);\n    }\n\n    return context;\n  }\n\n  createSchematic(name, collection, allowPrivate = false) {\n    const schematicMap = this._schematicCache.get(collection);\n\n    let schematic = schematicMap === null || schematicMap === void 0 ? void 0 : schematicMap.get(name);\n\n    if (schematic) {\n      return schematic;\n    }\n\n    let collectionDescription = collection.description;\n\n    let description = this._host.createSchematicDescription(name, collection.description);\n\n    if (!description) {\n      if (collection.baseDescriptions) {\n        for (const base of collection.baseDescriptions) {\n          description = this._host.createSchematicDescription(name, base);\n\n          if (description) {\n            collectionDescription = base;\n            break;\n          }\n        }\n      }\n\n      if (!description) {\n        // Report the error for the top level schematic collection\n        throw new UnknownSchematicException(name, collection.description);\n      }\n    }\n\n    if (description.private && !allowPrivate) {\n      throw new PrivateSchematicException(name, collection.description);\n    }\n\n    const factory = this._host.getSchematicRuleFactory(description, collectionDescription);\n\n    schematic = new schematic_1.SchematicImpl(description, factory, collection, this);\n    schematicMap === null || schematicMap === void 0 ? void 0 : schematicMap.set(name, schematic);\n    return schematic;\n  }\n\n  listSchematicNames(collection, includeHidden) {\n    const names = this._host.listSchematicNames(collection.description, includeHidden);\n\n    if (collection.baseDescriptions) {\n      for (const base of collection.baseDescriptions) {\n        names.push(...this._host.listSchematicNames(base, includeHidden));\n      }\n    } // remove duplicates\n\n\n    return [...new Set(names)].sort();\n  }\n\n  transformOptions(schematic, options, context) {\n    return this._host.transformOptions(schematic.description, options, context);\n  }\n\n  createSourceFromUrl(url, context) {\n    switch (url.protocol) {\n      case 'null:':\n        return () => new null_1.NullTree();\n\n      case 'empty:':\n        return () => (0, static_1.empty)();\n\n      default:\n        const hostSource = this._host.createSourceFromUrl(url, context);\n\n        if (!hostSource) {\n          throw new UnknownUrlSourceProtocol(url.toString());\n        }\n\n        return hostSource;\n    }\n  }\n\n  executePostTasks() {\n    const executors = new Map();\n    const taskObservable = (0, rxjs_1.from)(this._taskSchedulers).pipe((0, operators_1.concatMap)(scheduler => scheduler.finalize()), (0, operators_1.concatMap)(task => {\n      const {\n        name,\n        options\n      } = task.configuration;\n      const executor = executors.get(name);\n\n      if (executor) {\n        return executor(options, task.context);\n      }\n\n      return this._host.createTaskExecutor(name).pipe((0, operators_1.concatMap)(executor => {\n        executors.set(name, executor);\n        return executor(options, task.context);\n      }));\n    }));\n    return taskObservable;\n  }\n\n}\n\nexports.SchematicEngine = SchematicEngine;","map":{"version":3,"names":["Object","defineProperty","exports","value","SchematicEngine","TaskScheduler","CollectionImpl","UnknownTaskDependencyException","UnregisteredTaskException","SchematicEngineConflictingException","PrivateSchematicException","UnknownSchematicException","CircularCollectionException","UnknownCollectionException","UnknownUrlSourceProtocol","core_1","require","rxjs_1","operators_1","interface_1","null_1","static_1","schematic_1","BaseException","constructor","url","name","collection","schematic","addendum","id","_description","_engine","baseDescriptions","description","createSchematic","allowPrivate","listSchematicNames","includeHidden","_context","_queue","PriorityQueue","x","y","priority","_taskIds","Map","_calculatePriority","dependencies","size","prio","reduce","task","_mapDependencies","Set","tasks","map","dep","get","schedule","taskConfiguration","_taskIdCounter","configuration","context","push","set","finalize","toArray","clear","_host","_workflow","_collectionCache","_schematicCache","WeakMap","_taskSchedulers","Array","workflow","defaultMergeStrategy","MergeStrategy","Default","createCollection","requester","bases","_createCollectionDescription","parentNames","createCollectionDescription","has","extends","add","baseName","base","baseBases","unshift","createContext","parent","executionOptions","engine","interactive","undefined","debug","logger","createChild","logging","NullLogger","strategy","addTask","maybeNewContext","transformContext","taskScheduler","host","config","toConfiguration","hasTaskExecutor","schematicMap","collectionDescription","createSchematicDescription","private","factory","getSchematicRuleFactory","SchematicImpl","names","sort","transformOptions","options","createSourceFromUrl","protocol","NullTree","empty","hostSource","toString","executePostTasks","executors","taskObservable","from","pipe","concatMap","scheduler","executor","createTaskExecutor"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/schematics/src/engine/engine.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SchematicEngine = exports.TaskScheduler = exports.CollectionImpl = exports.UnknownTaskDependencyException = exports.UnregisteredTaskException = exports.SchematicEngineConflictingException = exports.PrivateSchematicException = exports.UnknownSchematicException = exports.CircularCollectionException = exports.UnknownCollectionException = exports.UnknownUrlSourceProtocol = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst interface_1 = require(\"../tree/interface\");\nconst null_1 = require(\"../tree/null\");\nconst static_1 = require(\"../tree/static\");\nconst schematic_1 = require(\"./schematic\");\nclass UnknownUrlSourceProtocol extends core_1.BaseException {\n    constructor(url) {\n        super(`Unknown Protocol on url \"${url}\".`);\n    }\n}\nexports.UnknownUrlSourceProtocol = UnknownUrlSourceProtocol;\nclass UnknownCollectionException extends core_1.BaseException {\n    constructor(name) {\n        super(`Unknown collection \"${name}\".`);\n    }\n}\nexports.UnknownCollectionException = UnknownCollectionException;\nclass CircularCollectionException extends core_1.BaseException {\n    constructor(name) {\n        super(`Circular collection reference \"${name}\".`);\n    }\n}\nexports.CircularCollectionException = CircularCollectionException;\nclass UnknownSchematicException extends core_1.BaseException {\n    constructor(name, collection) {\n        super(`Schematic \"${name}\" not found in collection \"${collection.name}\".`);\n    }\n}\nexports.UnknownSchematicException = UnknownSchematicException;\nclass PrivateSchematicException extends core_1.BaseException {\n    constructor(name, collection) {\n        super(`Schematic \"${name}\" not found in collection \"${collection.name}\".`);\n    }\n}\nexports.PrivateSchematicException = PrivateSchematicException;\nclass SchematicEngineConflictingException extends core_1.BaseException {\n    constructor() {\n        super(`A schematic was called from a different engine as its parent.`);\n    }\n}\nexports.SchematicEngineConflictingException = SchematicEngineConflictingException;\nclass UnregisteredTaskException extends core_1.BaseException {\n    constructor(name, schematic) {\n        const addendum = schematic ? ` in schematic \"${schematic.name}\"` : '';\n        super(`Unregistered task \"${name}\"${addendum}.`);\n    }\n}\nexports.UnregisteredTaskException = UnregisteredTaskException;\nclass UnknownTaskDependencyException extends core_1.BaseException {\n    constructor(id) {\n        super(`Unknown task dependency [ID: ${id.id}].`);\n    }\n}\nexports.UnknownTaskDependencyException = UnknownTaskDependencyException;\nclass CollectionImpl {\n    constructor(_description, _engine, baseDescriptions) {\n        this._description = _description;\n        this._engine = _engine;\n        this.baseDescriptions = baseDescriptions;\n    }\n    get description() {\n        return this._description;\n    }\n    get name() {\n        return this.description.name || '<unknown>';\n    }\n    createSchematic(name, allowPrivate = false) {\n        return this._engine.createSchematic(name, this, allowPrivate);\n    }\n    listSchematicNames(includeHidden) {\n        return this._engine.listSchematicNames(this, includeHidden);\n    }\n}\nexports.CollectionImpl = CollectionImpl;\nclass TaskScheduler {\n    constructor(_context) {\n        this._context = _context;\n        this._queue = new core_1.PriorityQueue((x, y) => x.priority - y.priority);\n        this._taskIds = new Map();\n    }\n    _calculatePriority(dependencies) {\n        if (dependencies.size === 0) {\n            return 0;\n        }\n        const prio = [...dependencies].reduce((prio, task) => prio + task.priority, 1);\n        return prio;\n    }\n    _mapDependencies(dependencies) {\n        if (!dependencies) {\n            return new Set();\n        }\n        const tasks = dependencies.map((dep) => {\n            const task = this._taskIds.get(dep);\n            if (!task) {\n                throw new UnknownTaskDependencyException(dep);\n            }\n            return task;\n        });\n        return new Set(tasks);\n    }\n    schedule(taskConfiguration) {\n        const dependencies = this._mapDependencies(taskConfiguration.dependencies);\n        const priority = this._calculatePriority(dependencies);\n        const task = {\n            id: TaskScheduler._taskIdCounter++,\n            priority,\n            configuration: taskConfiguration,\n            context: this._context,\n        };\n        this._queue.push(task);\n        const id = { id: task.id };\n        this._taskIds.set(id, task);\n        return id;\n    }\n    finalize() {\n        const tasks = this._queue.toArray();\n        this._queue.clear();\n        this._taskIds.clear();\n        return tasks;\n    }\n}\nexports.TaskScheduler = TaskScheduler;\nTaskScheduler._taskIdCounter = 1;\nclass SchematicEngine {\n    constructor(_host, _workflow) {\n        this._host = _host;\n        this._workflow = _workflow;\n        this._collectionCache = new Map();\n        this._schematicCache = new WeakMap();\n        this._taskSchedulers = new Array();\n    }\n    get workflow() {\n        return this._workflow || null;\n    }\n    get defaultMergeStrategy() {\n        return this._host.defaultMergeStrategy || interface_1.MergeStrategy.Default;\n    }\n    createCollection(name, requester) {\n        let collection = this._collectionCache.get(name);\n        if (collection) {\n            return collection;\n        }\n        const [description, bases] = this._createCollectionDescription(name, requester === null || requester === void 0 ? void 0 : requester.description);\n        collection = new CollectionImpl(description, this, bases);\n        this._collectionCache.set(name, collection);\n        this._schematicCache.set(collection, new Map());\n        return collection;\n    }\n    _createCollectionDescription(name, requester, parentNames) {\n        const description = this._host.createCollectionDescription(name, requester);\n        if (!description) {\n            throw new UnknownCollectionException(name);\n        }\n        if (parentNames && parentNames.has(description.name)) {\n            throw new CircularCollectionException(name);\n        }\n        const bases = new Array();\n        if (description.extends) {\n            parentNames = (parentNames || new Set()).add(description.name);\n            for (const baseName of description.extends) {\n                const [base, baseBases] = this._createCollectionDescription(baseName, description, new Set(parentNames));\n                bases.unshift(base, ...baseBases);\n            }\n        }\n        return [description, bases];\n    }\n    createContext(schematic, parent, executionOptions) {\n        // Check for inconsistencies.\n        if (parent && parent.engine && parent.engine !== this) {\n            throw new SchematicEngineConflictingException();\n        }\n        let interactive = true;\n        if (executionOptions && executionOptions.interactive != undefined) {\n            interactive = executionOptions.interactive;\n        }\n        else if (parent && parent.interactive != undefined) {\n            interactive = parent.interactive;\n        }\n        let context = {\n            debug: (parent && parent.debug) || false,\n            engine: this,\n            logger: (parent && parent.logger && parent.logger.createChild(schematic.description.name)) ||\n                new core_1.logging.NullLogger(),\n            schematic,\n            strategy: parent && parent.strategy !== undefined ? parent.strategy : this.defaultMergeStrategy,\n            interactive,\n            addTask,\n        };\n        const maybeNewContext = this._host.transformContext(context);\n        if (maybeNewContext) {\n            context = maybeNewContext;\n        }\n        const taskScheduler = new TaskScheduler(context);\n        const host = this._host;\n        this._taskSchedulers.push(taskScheduler);\n        function addTask(task, dependencies) {\n            const config = task.toConfiguration();\n            if (!host.hasTaskExecutor(config.name)) {\n                throw new UnregisteredTaskException(config.name, schematic.description);\n            }\n            config.dependencies = config.dependencies || [];\n            if (dependencies) {\n                config.dependencies.unshift(...dependencies);\n            }\n            return taskScheduler.schedule(config);\n        }\n        return context;\n    }\n    createSchematic(name, collection, allowPrivate = false) {\n        const schematicMap = this._schematicCache.get(collection);\n        let schematic = schematicMap === null || schematicMap === void 0 ? void 0 : schematicMap.get(name);\n        if (schematic) {\n            return schematic;\n        }\n        let collectionDescription = collection.description;\n        let description = this._host.createSchematicDescription(name, collection.description);\n        if (!description) {\n            if (collection.baseDescriptions) {\n                for (const base of collection.baseDescriptions) {\n                    description = this._host.createSchematicDescription(name, base);\n                    if (description) {\n                        collectionDescription = base;\n                        break;\n                    }\n                }\n            }\n            if (!description) {\n                // Report the error for the top level schematic collection\n                throw new UnknownSchematicException(name, collection.description);\n            }\n        }\n        if (description.private && !allowPrivate) {\n            throw new PrivateSchematicException(name, collection.description);\n        }\n        const factory = this._host.getSchematicRuleFactory(description, collectionDescription);\n        schematic = new schematic_1.SchematicImpl(description, factory, collection, this);\n        schematicMap === null || schematicMap === void 0 ? void 0 : schematicMap.set(name, schematic);\n        return schematic;\n    }\n    listSchematicNames(collection, includeHidden) {\n        const names = this._host.listSchematicNames(collection.description, includeHidden);\n        if (collection.baseDescriptions) {\n            for (const base of collection.baseDescriptions) {\n                names.push(...this._host.listSchematicNames(base, includeHidden));\n            }\n        }\n        // remove duplicates\n        return [...new Set(names)].sort();\n    }\n    transformOptions(schematic, options, context) {\n        return this._host.transformOptions(schematic.description, options, context);\n    }\n    createSourceFromUrl(url, context) {\n        switch (url.protocol) {\n            case 'null:':\n                return () => new null_1.NullTree();\n            case 'empty:':\n                return () => (0, static_1.empty)();\n            default:\n                const hostSource = this._host.createSourceFromUrl(url, context);\n                if (!hostSource) {\n                    throw new UnknownUrlSourceProtocol(url.toString());\n                }\n                return hostSource;\n        }\n    }\n    executePostTasks() {\n        const executors = new Map();\n        const taskObservable = (0, rxjs_1.from)(this._taskSchedulers).pipe((0, operators_1.concatMap)((scheduler) => scheduler.finalize()), (0, operators_1.concatMap)((task) => {\n            const { name, options } = task.configuration;\n            const executor = executors.get(name);\n            if (executor) {\n                return executor(options, task.context);\n            }\n            return this._host.createTaskExecutor(name).pipe((0, operators_1.concatMap)((executor) => {\n                executors.set(name, executor);\n                return executor(options, task.context);\n            }));\n        }));\n        return taskObservable;\n    }\n}\nexports.SchematicEngine = SchematicEngine;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}