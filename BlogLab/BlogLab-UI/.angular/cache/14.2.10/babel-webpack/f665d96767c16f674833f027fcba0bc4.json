{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.applyTemplates = exports.template = exports.renameTemplateFiles = exports.pathTemplate = exports.applyPathTemplate = exports.contentTemplate = exports.applyContentTemplate = exports.InvalidPipeException = exports.UnknownPipeException = exports.OptionIsNotDefinedException = exports.TEMPLATE_FILENAME_RE = void 0;\n\nconst core_1 = require(\"@angular-devkit/core\");\n\nconst util_1 = require(\"util\");\n\nconst base_1 = require(\"./base\");\n\nconst rename_1 = require(\"./rename\");\n\nexports.TEMPLATE_FILENAME_RE = /\\.template$/;\n\nclass OptionIsNotDefinedException extends core_1.BaseException {\n  constructor(name) {\n    super(`Option \"${name}\" is not defined.`);\n  }\n\n}\n\nexports.OptionIsNotDefinedException = OptionIsNotDefinedException;\n\nclass UnknownPipeException extends core_1.BaseException {\n  constructor(name) {\n    super(`Pipe \"${name}\" is not defined.`);\n  }\n\n}\n\nexports.UnknownPipeException = UnknownPipeException;\n\nclass InvalidPipeException extends core_1.BaseException {\n  constructor(name) {\n    super(`Pipe \"${name}\" is invalid.`);\n  }\n\n}\n\nexports.InvalidPipeException = InvalidPipeException;\nconst decoder = new util_1.TextDecoder('utf-8', {\n  fatal: true\n});\n\nfunction applyContentTemplate(options) {\n  return entry => {\n    const {\n      path,\n      content\n    } = entry;\n\n    try {\n      const decodedContent = decoder.decode(content);\n      return {\n        path,\n        content: Buffer.from((0, core_1.template)(decodedContent, {})(options))\n      };\n    } catch (e) {\n      if (e.code === 'ERR_ENCODING_INVALID_ENCODED_DATA') {\n        return entry;\n      }\n\n      throw e;\n    }\n  };\n}\n\nexports.applyContentTemplate = applyContentTemplate;\n\nfunction contentTemplate(options) {\n  return (0, base_1.forEach)(applyContentTemplate(options));\n}\n\nexports.contentTemplate = contentTemplate;\n\nfunction applyPathTemplate(data, options = {\n  interpolationStart: '__',\n  interpolationEnd: '__',\n  pipeSeparator: '@'\n}) {\n  const is = options.interpolationStart;\n  const ie = options.interpolationEnd;\n  const isL = is.length;\n  const ieL = ie.length;\n  return entry => {\n    let path = entry.path;\n    const content = entry.content;\n    const original = path;\n    let start = path.indexOf(is); // + 1 to have at least a length 1 name. `____` is not valid.\n\n    let end = path.indexOf(ie, start + isL + 1);\n\n    while (start != -1 && end != -1) {\n      const match = path.substring(start + isL, end);\n      let replacement = data[match];\n\n      if (!options.pipeSeparator) {\n        if (typeof replacement == 'function') {\n          replacement = replacement.call(data, original);\n        }\n\n        if (replacement === undefined) {\n          throw new OptionIsNotDefinedException(match);\n        }\n      } else {\n        const [name, ...pipes] = match.split(options.pipeSeparator);\n        replacement = data[name];\n\n        if (typeof replacement == 'function') {\n          replacement = replacement.call(data, original);\n        }\n\n        if (replacement === undefined) {\n          throw new OptionIsNotDefinedException(name);\n        }\n\n        replacement = pipes.reduce((acc, pipe) => {\n          if (!pipe) {\n            return acc;\n          }\n\n          if (!(pipe in data)) {\n            throw new UnknownPipeException(pipe);\n          }\n\n          if (typeof data[pipe] != 'function') {\n            throw new InvalidPipeException(pipe);\n          } // Coerce to string.\n\n\n          return '' + data[pipe](acc);\n        }, '' + replacement);\n      }\n\n      path = path.substring(0, start) + replacement + path.substring(end + ieL);\n      start = path.indexOf(options.interpolationStart); // See above.\n\n      end = path.indexOf(options.interpolationEnd, start + isL + 1);\n    }\n\n    return {\n      path: (0, core_1.normalize)(path),\n      content\n    };\n  };\n}\n\nexports.applyPathTemplate = applyPathTemplate;\n\nfunction pathTemplate(options) {\n  return (0, base_1.forEach)(applyPathTemplate(options));\n}\n\nexports.pathTemplate = pathTemplate;\n/**\n * Remove every `.template` suffix from file names.\n */\n\nfunction renameTemplateFiles() {\n  return (0, rename_1.rename)(path => !!path.match(exports.TEMPLATE_FILENAME_RE), path => path.replace(exports.TEMPLATE_FILENAME_RE, ''));\n}\n\nexports.renameTemplateFiles = renameTemplateFiles;\n\nfunction template(options) {\n  return (0, base_1.chain)([contentTemplate(options), // Force cast to PathTemplateData. We need the type for the actual pathTemplate() call,\n  // but in this case we cannot do anything as contentTemplate are more permissive.\n  // Since values are coerced to strings in PathTemplates it will be fine in the end.\n  pathTemplate(options)]);\n}\n\nexports.template = template;\n\nfunction applyTemplates(options) {\n  return (0, base_1.forEach)((0, base_1.when)(path => path.endsWith('.template'), (0, base_1.composeFileOperators)([applyContentTemplate(options), // See above for this weird cast.\n  applyPathTemplate(options), entry => {\n    return {\n      content: entry.content,\n      path: entry.path.replace(exports.TEMPLATE_FILENAME_RE, '')\n    };\n  }])));\n}\n\nexports.applyTemplates = applyTemplates;","map":{"version":3,"names":["Object","defineProperty","exports","value","applyTemplates","template","renameTemplateFiles","pathTemplate","applyPathTemplate","contentTemplate","applyContentTemplate","InvalidPipeException","UnknownPipeException","OptionIsNotDefinedException","TEMPLATE_FILENAME_RE","core_1","require","util_1","base_1","rename_1","BaseException","constructor","name","decoder","TextDecoder","fatal","options","entry","path","content","decodedContent","decode","Buffer","from","e","code","forEach","data","interpolationStart","interpolationEnd","pipeSeparator","is","ie","isL","length","ieL","original","start","indexOf","end","match","substring","replacement","call","undefined","pipes","split","reduce","acc","pipe","normalize","rename","replace","chain","when","endsWith","composeFileOperators"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/schematics/src/rules/template.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applyTemplates = exports.template = exports.renameTemplateFiles = exports.pathTemplate = exports.applyPathTemplate = exports.contentTemplate = exports.applyContentTemplate = exports.InvalidPipeException = exports.UnknownPipeException = exports.OptionIsNotDefinedException = exports.TEMPLATE_FILENAME_RE = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst util_1 = require(\"util\");\nconst base_1 = require(\"./base\");\nconst rename_1 = require(\"./rename\");\nexports.TEMPLATE_FILENAME_RE = /\\.template$/;\nclass OptionIsNotDefinedException extends core_1.BaseException {\n    constructor(name) {\n        super(`Option \"${name}\" is not defined.`);\n    }\n}\nexports.OptionIsNotDefinedException = OptionIsNotDefinedException;\nclass UnknownPipeException extends core_1.BaseException {\n    constructor(name) {\n        super(`Pipe \"${name}\" is not defined.`);\n    }\n}\nexports.UnknownPipeException = UnknownPipeException;\nclass InvalidPipeException extends core_1.BaseException {\n    constructor(name) {\n        super(`Pipe \"${name}\" is invalid.`);\n    }\n}\nexports.InvalidPipeException = InvalidPipeException;\nconst decoder = new util_1.TextDecoder('utf-8', { fatal: true });\nfunction applyContentTemplate(options) {\n    return (entry) => {\n        const { path, content } = entry;\n        try {\n            const decodedContent = decoder.decode(content);\n            return {\n                path,\n                content: Buffer.from((0, core_1.template)(decodedContent, {})(options)),\n            };\n        }\n        catch (e) {\n            if (e.code === 'ERR_ENCODING_INVALID_ENCODED_DATA') {\n                return entry;\n            }\n            throw e;\n        }\n    };\n}\nexports.applyContentTemplate = applyContentTemplate;\nfunction contentTemplate(options) {\n    return (0, base_1.forEach)(applyContentTemplate(options));\n}\nexports.contentTemplate = contentTemplate;\nfunction applyPathTemplate(data, options = {\n    interpolationStart: '__',\n    interpolationEnd: '__',\n    pipeSeparator: '@',\n}) {\n    const is = options.interpolationStart;\n    const ie = options.interpolationEnd;\n    const isL = is.length;\n    const ieL = ie.length;\n    return (entry) => {\n        let path = entry.path;\n        const content = entry.content;\n        const original = path;\n        let start = path.indexOf(is);\n        // + 1 to have at least a length 1 name. `____` is not valid.\n        let end = path.indexOf(ie, start + isL + 1);\n        while (start != -1 && end != -1) {\n            const match = path.substring(start + isL, end);\n            let replacement = data[match];\n            if (!options.pipeSeparator) {\n                if (typeof replacement == 'function') {\n                    replacement = replacement.call(data, original);\n                }\n                if (replacement === undefined) {\n                    throw new OptionIsNotDefinedException(match);\n                }\n            }\n            else {\n                const [name, ...pipes] = match.split(options.pipeSeparator);\n                replacement = data[name];\n                if (typeof replacement == 'function') {\n                    replacement = replacement.call(data, original);\n                }\n                if (replacement === undefined) {\n                    throw new OptionIsNotDefinedException(name);\n                }\n                replacement = pipes.reduce((acc, pipe) => {\n                    if (!pipe) {\n                        return acc;\n                    }\n                    if (!(pipe in data)) {\n                        throw new UnknownPipeException(pipe);\n                    }\n                    if (typeof data[pipe] != 'function') {\n                        throw new InvalidPipeException(pipe);\n                    }\n                    // Coerce to string.\n                    return '' + data[pipe](acc);\n                }, '' + replacement);\n            }\n            path = path.substring(0, start) + replacement + path.substring(end + ieL);\n            start = path.indexOf(options.interpolationStart);\n            // See above.\n            end = path.indexOf(options.interpolationEnd, start + isL + 1);\n        }\n        return { path: (0, core_1.normalize)(path), content };\n    };\n}\nexports.applyPathTemplate = applyPathTemplate;\nfunction pathTemplate(options) {\n    return (0, base_1.forEach)(applyPathTemplate(options));\n}\nexports.pathTemplate = pathTemplate;\n/**\n * Remove every `.template` suffix from file names.\n */\nfunction renameTemplateFiles() {\n    return (0, rename_1.rename)((path) => !!path.match(exports.TEMPLATE_FILENAME_RE), (path) => path.replace(exports.TEMPLATE_FILENAME_RE, ''));\n}\nexports.renameTemplateFiles = renameTemplateFiles;\nfunction template(options) {\n    return (0, base_1.chain)([\n        contentTemplate(options),\n        // Force cast to PathTemplateData. We need the type for the actual pathTemplate() call,\n        // but in this case we cannot do anything as contentTemplate are more permissive.\n        // Since values are coerced to strings in PathTemplates it will be fine in the end.\n        pathTemplate(options),\n    ]);\n}\nexports.template = template;\nfunction applyTemplates(options) {\n    return (0, base_1.forEach)((0, base_1.when)((path) => path.endsWith('.template'), (0, base_1.composeFileOperators)([\n        applyContentTemplate(options),\n        // See above for this weird cast.\n        applyPathTemplate(options),\n        (entry) => {\n            return {\n                content: entry.content,\n                path: entry.path.replace(exports.TEMPLATE_FILENAME_RE, ''),\n            };\n        },\n    ])));\n}\nexports.applyTemplates = applyTemplates;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}