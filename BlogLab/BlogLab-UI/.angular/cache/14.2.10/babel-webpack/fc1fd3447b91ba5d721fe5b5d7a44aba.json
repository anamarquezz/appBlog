{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isContentAction = exports.ActionList = exports.UnknownActionException = void 0;\n\nconst core_1 = require(\"@angular-devkit/core\");\n\nclass UnknownActionException extends core_1.BaseException {\n  constructor(action) {\n    super(`Unknown action: \"${action.kind}\".`);\n  }\n\n}\n\nexports.UnknownActionException = UnknownActionException;\nlet _id = 1;\n\nclass ActionList {\n  constructor() {\n    this._actions = [];\n  }\n\n  _action(action) {\n    var _a, _b;\n\n    this._actions.push({ ...action,\n      id: _id++,\n      parent: (_b = (_a = this._actions[this._actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : 0\n    });\n  }\n\n  create(path, content) {\n    this._action({\n      kind: 'c',\n      path,\n      content\n    });\n  }\n\n  overwrite(path, content) {\n    this._action({\n      kind: 'o',\n      path,\n      content\n    });\n  }\n\n  rename(path, to) {\n    this._action({\n      kind: 'r',\n      path,\n      to\n    });\n  }\n\n  delete(path) {\n    this._action({\n      kind: 'd',\n      path\n    });\n  }\n\n  optimize() {\n    const toCreate = new Map();\n    const toRename = new Map();\n    const toOverwrite = new Map();\n    const toDelete = new Set();\n\n    for (const action of this._actions) {\n      switch (action.kind) {\n        case 'c':\n          toCreate.set(action.path, action.content);\n          break;\n\n        case 'o':\n          if (toCreate.has(action.path)) {\n            toCreate.set(action.path, action.content);\n          } else {\n            toOverwrite.set(action.path, action.content);\n          }\n\n          break;\n\n        case 'd':\n          toDelete.add(action.path);\n          break;\n\n        case 'r':\n          const maybeCreate = toCreate.get(action.path);\n          const maybeOverwrite = toOverwrite.get(action.path);\n\n          if (maybeCreate) {\n            toCreate.delete(action.path);\n            toCreate.set(action.to, maybeCreate);\n          }\n\n          if (maybeOverwrite) {\n            toOverwrite.delete(action.path);\n            toOverwrite.set(action.to, maybeOverwrite);\n          }\n\n          let maybeRename = undefined;\n\n          for (const [from, to] of toRename.entries()) {\n            if (to == action.path) {\n              maybeRename = from;\n              break;\n            }\n          }\n\n          if (maybeRename) {\n            toRename.set(maybeRename, action.to);\n          }\n\n          if (!maybeCreate && !maybeOverwrite && !maybeRename) {\n            toRename.set(action.path, action.to);\n          }\n\n          break;\n      }\n    }\n\n    this._actions = [];\n    toDelete.forEach(x => {\n      this.delete(x);\n    });\n    toRename.forEach((to, from) => {\n      this.rename(from, to);\n    });\n    toCreate.forEach((content, path) => {\n      this.create(path, content);\n    });\n    toOverwrite.forEach((content, path) => {\n      this.overwrite(path, content);\n    });\n  }\n\n  push(action) {\n    this._actions.push(action);\n  }\n\n  get(i) {\n    return this._actions[i];\n  }\n\n  has(action) {\n    for (let i = 0; i < this._actions.length; i++) {\n      const a = this._actions[i];\n\n      if (a.id == action.id) {\n        return true;\n      }\n\n      if (a.id > action.id) {\n        return false;\n      }\n    }\n\n    return false;\n  }\n\n  find(predicate) {\n    return this._actions.find(predicate) || null;\n  }\n\n  forEach(fn, thisArg) {\n    this._actions.forEach(fn, thisArg);\n  }\n\n  get length() {\n    return this._actions.length;\n  }\n\n  [Symbol.iterator]() {\n    return this._actions[Symbol.iterator]();\n  }\n\n}\n\nexports.ActionList = ActionList;\n\nfunction isContentAction(action) {\n  return action.kind == 'c' || action.kind == 'o';\n}\n\nexports.isContentAction = isContentAction;","map":{"version":3,"names":["Object","defineProperty","exports","value","isContentAction","ActionList","UnknownActionException","core_1","require","BaseException","constructor","action","kind","_id","_actions","_action","_a","_b","push","id","parent","length","create","path","content","overwrite","rename","to","delete","optimize","toCreate","Map","toRename","toOverwrite","toDelete","Set","set","has","add","maybeCreate","get","maybeOverwrite","maybeRename","undefined","from","entries","forEach","x","i","a","find","predicate","fn","thisArg","Symbol","iterator"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/@angular-devkit/schematics/src/tree/action.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isContentAction = exports.ActionList = exports.UnknownActionException = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nclass UnknownActionException extends core_1.BaseException {\n    constructor(action) {\n        super(`Unknown action: \"${action.kind}\".`);\n    }\n}\nexports.UnknownActionException = UnknownActionException;\nlet _id = 1;\nclass ActionList {\n    constructor() {\n        this._actions = [];\n    }\n    _action(action) {\n        var _a, _b;\n        this._actions.push({\n            ...action,\n            id: _id++,\n            parent: (_b = (_a = this._actions[this._actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== null && _b !== void 0 ? _b : 0,\n        });\n    }\n    create(path, content) {\n        this._action({ kind: 'c', path, content });\n    }\n    overwrite(path, content) {\n        this._action({ kind: 'o', path, content });\n    }\n    rename(path, to) {\n        this._action({ kind: 'r', path, to });\n    }\n    delete(path) {\n        this._action({ kind: 'd', path });\n    }\n    optimize() {\n        const toCreate = new Map();\n        const toRename = new Map();\n        const toOverwrite = new Map();\n        const toDelete = new Set();\n        for (const action of this._actions) {\n            switch (action.kind) {\n                case 'c':\n                    toCreate.set(action.path, action.content);\n                    break;\n                case 'o':\n                    if (toCreate.has(action.path)) {\n                        toCreate.set(action.path, action.content);\n                    }\n                    else {\n                        toOverwrite.set(action.path, action.content);\n                    }\n                    break;\n                case 'd':\n                    toDelete.add(action.path);\n                    break;\n                case 'r':\n                    const maybeCreate = toCreate.get(action.path);\n                    const maybeOverwrite = toOverwrite.get(action.path);\n                    if (maybeCreate) {\n                        toCreate.delete(action.path);\n                        toCreate.set(action.to, maybeCreate);\n                    }\n                    if (maybeOverwrite) {\n                        toOverwrite.delete(action.path);\n                        toOverwrite.set(action.to, maybeOverwrite);\n                    }\n                    let maybeRename = undefined;\n                    for (const [from, to] of toRename.entries()) {\n                        if (to == action.path) {\n                            maybeRename = from;\n                            break;\n                        }\n                    }\n                    if (maybeRename) {\n                        toRename.set(maybeRename, action.to);\n                    }\n                    if (!maybeCreate && !maybeOverwrite && !maybeRename) {\n                        toRename.set(action.path, action.to);\n                    }\n                    break;\n            }\n        }\n        this._actions = [];\n        toDelete.forEach((x) => {\n            this.delete(x);\n        });\n        toRename.forEach((to, from) => {\n            this.rename(from, to);\n        });\n        toCreate.forEach((content, path) => {\n            this.create(path, content);\n        });\n        toOverwrite.forEach((content, path) => {\n            this.overwrite(path, content);\n        });\n    }\n    push(action) {\n        this._actions.push(action);\n    }\n    get(i) {\n        return this._actions[i];\n    }\n    has(action) {\n        for (let i = 0; i < this._actions.length; i++) {\n            const a = this._actions[i];\n            if (a.id == action.id) {\n                return true;\n            }\n            if (a.id > action.id) {\n                return false;\n            }\n        }\n        return false;\n    }\n    find(predicate) {\n        return this._actions.find(predicate) || null;\n    }\n    forEach(fn, thisArg) {\n        this._actions.forEach(fn, thisArg);\n    }\n    get length() {\n        return this._actions.length;\n    }\n    [Symbol.iterator]() {\n        return this._actions[Symbol.iterator]();\n    }\n}\nexports.ActionList = ActionList;\nfunction isContentAction(action) {\n    return action.kind == 'c' || action.kind == 'o';\n}\nexports.isContentAction = isContentAction;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}