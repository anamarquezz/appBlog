{"ast":null,"code":"// info about each config option.\nvar debug = process.env.DEBUG_NOPT || process.env.NOPT_DEBUG ? function () {\n  console.error.apply(console, arguments);\n} : function () {};\n\nvar url = require('url');\n\nvar path = require('path');\n\nvar Stream = require('stream').Stream;\n\nvar abbrev = require('abbrev');\n\nvar os = require('os');\n\nmodule.exports = exports = nopt;\nexports.clean = clean;\nexports.typeDefs = {\n  String: {\n    type: String,\n    validate: validateString\n  },\n  Boolean: {\n    type: Boolean,\n    validate: validateBoolean\n  },\n  url: {\n    type: url,\n    validate: validateUrl\n  },\n  Number: {\n    type: Number,\n    validate: validateNumber\n  },\n  path: {\n    type: path,\n    validate: validatePath\n  },\n  Stream: {\n    type: Stream,\n    validate: validateStream\n  },\n  Date: {\n    type: Date,\n    validate: validateDate\n  }\n};\n\nfunction nopt(types, shorthands, args, slice) {\n  args = args || process.argv;\n  types = types || {};\n  shorthands = shorthands || {};\n\n  if (typeof slice !== 'number') {\n    slice = 2;\n  }\n\n  debug(types, shorthands, args, slice);\n  args = args.slice(slice);\n  var data = {};\n  var argv = {\n    remain: [],\n    cooked: args,\n    original: args.slice(0)\n  };\n  parse(args, data, argv.remain, types, shorthands); // now data is full\n\n  clean(data, types, exports.typeDefs);\n  data.argv = argv;\n  Object.defineProperty(data.argv, 'toString', {\n    value: function () {\n      return this.original.map(JSON.stringify).join(' ');\n    },\n    enumerable: false\n  });\n  return data;\n}\n\nfunction clean(data, types, typeDefs) {\n  typeDefs = typeDefs || exports.typeDefs;\n  var remove = {};\n  var typeDefault = [false, true, null, String, Array];\n  Object.keys(data).forEach(function (k) {\n    if (k === 'argv') {\n      return;\n    }\n\n    var val = data[k];\n    var isArray = Array.isArray(val);\n    var type = types[k];\n\n    if (!isArray) {\n      val = [val];\n    }\n\n    if (!type) {\n      type = typeDefault;\n    }\n\n    if (type === Array) {\n      type = typeDefault.concat(Array);\n    }\n\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n\n    debug('val=%j', val);\n    debug('types=', type);\n    val = val.map(function (v) {\n      // if it's an unknown value, then parse false/true/null/numbers/dates\n      if (typeof v === 'string') {\n        debug('string %j', v);\n        v = v.trim();\n\n        if (v === 'null' && ~type.indexOf(null) || v === 'true' && (~type.indexOf(true) || ~type.indexOf(Boolean)) || v === 'false' && (~type.indexOf(false) || ~type.indexOf(Boolean))) {\n          v = JSON.parse(v);\n          debug('jsonable %j', v);\n        } else if (~type.indexOf(Number) && !isNaN(v)) {\n          debug('convert to number', v);\n          v = +v;\n        } else if (~type.indexOf(Date) && !isNaN(Date.parse(v))) {\n          debug('convert to date', v);\n          v = new Date(v);\n        }\n      }\n\n      if (!Object.prototype.hasOwnProperty.call(types, k)) {\n        return v;\n      } // allow `--no-blah` to set 'blah' to null if null is allowed\n\n\n      if (v === false && ~type.indexOf(null) && !(~type.indexOf(false) || ~type.indexOf(Boolean))) {\n        v = null;\n      }\n\n      var d = {};\n      d[k] = v;\n      debug('prevalidated val', d, v, types[k]);\n\n      if (!validate(d, k, v, types[k], typeDefs)) {\n        if (exports.invalidHandler) {\n          exports.invalidHandler(k, v, types[k], data);\n        } else if (exports.invalidHandler !== false) {\n          debug('invalid: ' + k + '=' + v, types[k]);\n        }\n\n        return remove;\n      }\n\n      debug('validated v', d, v, types[k]);\n      return d[k];\n    }).filter(function (v) {\n      return v !== remove;\n    }); // if we allow Array specifically, then an empty array is how we\n    // express 'no value here', not null.  Allow it.\n\n    if (!val.length && type.indexOf(Array) === -1) {\n      debug('VAL HAS NO LENGTH, DELETE IT', val, k, type.indexOf(Array));\n      delete data[k];\n    } else if (isArray) {\n      debug(isArray, data[k], val);\n      data[k] = val;\n    } else {\n      data[k] = val[0];\n    }\n\n    debug('k=%s val=%j', k, val, data[k]);\n  });\n}\n\nfunction validateString(data, k, val) {\n  data[k] = String(val);\n}\n\nfunction validatePath(data, k, val) {\n  if (val === true) {\n    return false;\n  }\n\n  if (val === null) {\n    return true;\n  }\n\n  val = String(val);\n  var isWin = process.platform === 'win32';\n  var homePattern = isWin ? /^~(\\/|\\\\)/ : /^~\\//;\n  var home = os.homedir();\n\n  if (home && val.match(homePattern)) {\n    data[k] = path.resolve(home, val.slice(2));\n  } else {\n    data[k] = path.resolve(val);\n  }\n\n  return true;\n}\n\nfunction validateNumber(data, k, val) {\n  debug('validate Number %j %j %j', k, val, isNaN(val));\n\n  if (isNaN(val)) {\n    return false;\n  }\n\n  data[k] = +val;\n}\n\nfunction validateDate(data, k, val) {\n  var s = Date.parse(val);\n  debug('validate Date %j %j %j', k, val, s);\n\n  if (isNaN(s)) {\n    return false;\n  }\n\n  data[k] = new Date(val);\n}\n\nfunction validateBoolean(data, k, val) {\n  if (val instanceof Boolean) {\n    val = val.valueOf();\n  } else if (typeof val === 'string') {\n    if (!isNaN(val)) {\n      val = !!+val;\n    } else if (val === 'null' || val === 'false') {\n      val = false;\n    } else {\n      val = true;\n    }\n  } else {\n    val = !!val;\n  }\n\n  data[k] = val;\n}\n\nfunction validateUrl(data, k, val) {\n  // Changing this would be a breaking change in the npm cli\n\n  /* eslint-disable-next-line node/no-deprecated-api */\n  val = url.parse(String(val));\n\n  if (!val.host) {\n    return false;\n  }\n\n  data[k] = val.href;\n}\n\nfunction validateStream(data, k, val) {\n  if (!(val instanceof Stream)) {\n    return false;\n  }\n\n  data[k] = val;\n}\n\nfunction validate(data, k, val, type, typeDefs) {\n  // arrays are lists of types.\n  if (Array.isArray(type)) {\n    for (let i = 0, l = type.length; i < l; i++) {\n      if (type[i] === Array) {\n        continue;\n      }\n\n      if (validate(data, k, val, type[i], typeDefs)) {\n        return true;\n      }\n    }\n\n    delete data[k];\n    return false;\n  } // an array of anything?\n\n\n  if (type === Array) {\n    return true;\n  } // Original comment:\n  // NaN is poisonous.  Means that something is not allowed.\n  // New comment: Changing this to an isNaN check breaks a lot of tests.\n  // Something is being assumed here that is not actually what happens in\n  // practice.  Fixing it is outside the scope of getting linting to pass in\n  // this repo. Leaving as-is for now.\n\n  /* eslint-disable-next-line no-self-compare */\n\n\n  if (type !== type) {\n    debug('Poison NaN', k, val, type);\n    delete data[k];\n    return false;\n  } // explicit list of values\n\n\n  if (val === type) {\n    debug('Explicitly allowed %j', val); // if (isArray) (data[k] = data[k] || []).push(val)\n    // else data[k] = val\n\n    data[k] = val;\n    return true;\n  } // now go through the list of typeDefs, validate against each one.\n\n\n  var ok = false;\n  var types = Object.keys(typeDefs);\n\n  for (let i = 0, l = types.length; i < l; i++) {\n    debug('test type %j %j %j', k, val, types[i]);\n    var t = typeDefs[types[i]];\n\n    if (t && (type && type.name && t.type && t.type.name ? type.name === t.type.name : type === t.type)) {\n      var d = {};\n      ok = t.validate(d, k, val) !== false;\n      val = d[k];\n\n      if (ok) {\n        // if (isArray) (data[k] = data[k] || []).push(val)\n        // else data[k] = val\n        data[k] = val;\n        break;\n      }\n    }\n  }\n\n  debug('OK? %j (%j %j %j)', ok, k, val, types[types.length - 1]);\n\n  if (!ok) {\n    delete data[k];\n  }\n\n  return ok;\n}\n\nfunction parse(args, data, remain, types, shorthands) {\n  debug('parse', args, data, remain);\n  var abbrevs = abbrev(Object.keys(types));\n  var shortAbbr = abbrev(Object.keys(shorthands));\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    debug('arg', arg);\n\n    if (arg.match(/^-{2,}$/)) {\n      // done with keys.\n      // the rest are args.\n      remain.push.apply(remain, args.slice(i + 1));\n      args[i] = '--';\n      break;\n    }\n\n    var hadEq = false;\n\n    if (arg.charAt(0) === '-' && arg.length > 1) {\n      var at = arg.indexOf('=');\n\n      if (at > -1) {\n        hadEq = true;\n        var v = arg.slice(at + 1);\n        arg = arg.slice(0, at);\n        args.splice(i, 1, arg, v);\n      } // see if it's a shorthand\n      // if so, splice and back up to re-parse it.\n\n\n      var shRes = resolveShort(arg, shorthands, shortAbbr, abbrevs);\n      debug('arg=%j shRes=%j', arg, shRes);\n\n      if (shRes) {\n        debug(arg, shRes);\n        args.splice.apply(args, [i, 1].concat(shRes));\n\n        if (arg !== shRes[0]) {\n          i--;\n          continue;\n        }\n      }\n\n      arg = arg.replace(/^-+/, '');\n      var no = null;\n\n      while (arg.toLowerCase().indexOf('no-') === 0) {\n        no = !no;\n        arg = arg.slice(3);\n      }\n\n      if (abbrevs[arg]) {\n        arg = abbrevs[arg];\n      }\n\n      var argType = types[arg];\n      var isTypeArray = Array.isArray(argType);\n\n      if (isTypeArray && argType.length === 1) {\n        isTypeArray = false;\n        argType = argType[0];\n      }\n\n      var isArray = argType === Array || isTypeArray && argType.indexOf(Array) !== -1; // allow unknown things to be arrays if specified multiple times.\n\n      if (!Object.prototype.hasOwnProperty.call(types, arg) && Object.prototype.hasOwnProperty.call(data, arg)) {\n        if (!Array.isArray(data[arg])) {\n          data[arg] = [data[arg]];\n        }\n\n        isArray = true;\n      }\n\n      var val;\n      var la = args[i + 1];\n      var isBool = typeof no === 'boolean' || argType === Boolean || isTypeArray && argType.indexOf(Boolean) !== -1 || typeof argType === 'undefined' && !hadEq || la === 'false' && (argType === null || isTypeArray && ~argType.indexOf(null));\n\n      if (isBool) {\n        // just set and move along\n        val = !no; // however, also support --bool true or --bool false\n\n        if (la === 'true' || la === 'false') {\n          val = JSON.parse(la);\n          la = null;\n\n          if (no) {\n            val = !val;\n          }\n\n          i++;\n        } // also support \"foo\":[Boolean, \"bar\"] and \"--foo bar\"\n\n\n        if (isTypeArray && la) {\n          if (~argType.indexOf(la)) {\n            // an explicit type\n            val = la;\n            i++;\n          } else if (la === 'null' && ~argType.indexOf(null)) {\n            // null allowed\n            val = null;\n            i++;\n          } else if (!la.match(/^-{2,}[^-]/) && !isNaN(la) && ~argType.indexOf(Number)) {\n            // number\n            val = +la;\n            i++;\n          } else if (!la.match(/^-[^-]/) && ~argType.indexOf(String)) {\n            // string\n            val = la;\n            i++;\n          }\n        }\n\n        if (isArray) {\n          (data[arg] = data[arg] || []).push(val);\n        } else {\n          data[arg] = val;\n        }\n\n        continue;\n      }\n\n      if (argType === String) {\n        if (la === undefined) {\n          la = '';\n        } else if (la.match(/^-{1,2}[^-]+/)) {\n          la = '';\n          i--;\n        }\n      }\n\n      if (la && la.match(/^-{2,}$/)) {\n        la = undefined;\n        i--;\n      }\n\n      val = la === undefined ? true : la;\n\n      if (isArray) {\n        (data[arg] = data[arg] || []).push(val);\n      } else {\n        data[arg] = val;\n      }\n\n      i++;\n      continue;\n    }\n\n    remain.push(arg);\n  }\n}\n\nfunction resolveShort(arg, shorthands, shortAbbr, abbrevs) {\n  // handle single-char shorthands glommed together, like\n  // npm ls -glp, but only if there is one dash, and only if\n  // all of the chars are single-char shorthands, and it's\n  // not a match to some other abbrev.\n  arg = arg.replace(/^-+/, ''); // if it's an exact known option, then don't go any further\n\n  if (abbrevs[arg] === arg) {\n    return null;\n  } // if it's an exact known shortopt, same deal\n\n\n  if (shorthands[arg]) {\n    // make it an array, if it's a list of words\n    if (shorthands[arg] && !Array.isArray(shorthands[arg])) {\n      shorthands[arg] = shorthands[arg].split(/\\s+/);\n    }\n\n    return shorthands[arg];\n  } // first check to see if this arg is a set of single-char shorthands\n\n\n  var singles = shorthands.___singles;\n\n  if (!singles) {\n    singles = Object.keys(shorthands).filter(function (s) {\n      return s.length === 1;\n    }).reduce(function (l, r) {\n      l[r] = true;\n      return l;\n    }, {});\n    shorthands.___singles = singles;\n    debug('shorthand singles', singles);\n  }\n\n  var chrs = arg.split('').filter(function (c) {\n    return singles[c];\n  });\n\n  if (chrs.join('') === arg) {\n    return chrs.map(function (c) {\n      return shorthands[c];\n    }).reduce(function (l, r) {\n      return l.concat(r);\n    }, []);\n  } // if it's an arg abbrev, and not a literal shorthand, then prefer the arg\n\n\n  if (abbrevs[arg] && !shorthands[arg]) {\n    return null;\n  } // if it's an abbr for a shorthand, then use that\n\n\n  if (shortAbbr[arg]) {\n    arg = shortAbbr[arg];\n  } // make it an array, if it's a list of words\n\n\n  if (shorthands[arg] && !Array.isArray(shorthands[arg])) {\n    shorthands[arg] = shorthands[arg].split(/\\s+/);\n  }\n\n  return shorthands[arg];\n}","map":{"version":3,"names":["debug","process","env","DEBUG_NOPT","NOPT_DEBUG","console","error","apply","arguments","url","require","path","Stream","abbrev","os","module","exports","nopt","clean","typeDefs","String","type","validate","validateString","Boolean","validateBoolean","validateUrl","Number","validateNumber","validatePath","validateStream","Date","validateDate","types","shorthands","args","slice","argv","data","remain","cooked","original","parse","Object","defineProperty","value","map","JSON","stringify","join","enumerable","remove","typeDefault","Array","keys","forEach","k","val","isArray","concat","v","trim","indexOf","isNaN","prototype","hasOwnProperty","call","d","invalidHandler","filter","length","isWin","platform","homePattern","home","homedir","match","resolve","s","valueOf","host","href","i","l","ok","t","name","abbrevs","shortAbbr","arg","push","hadEq","charAt","at","splice","shRes","resolveShort","replace","no","toLowerCase","argType","isTypeArray","la","isBool","undefined","split","singles","___singles","reduce","r","chrs","c"],"sources":["C:/sources/GitHub/appBlog/BlogLab/BlogLab-UI/node_modules/nopt/lib/nopt.js"],"sourcesContent":["// info about each config option.\n\nvar debug = process.env.DEBUG_NOPT || process.env.NOPT_DEBUG\n  ? function () {\n    console.error.apply(console, arguments)\n  }\n  : function () {}\n\nvar url = require('url')\nvar path = require('path')\nvar Stream = require('stream').Stream\nvar abbrev = require('abbrev')\nvar os = require('os')\n\nmodule.exports = exports = nopt\nexports.clean = clean\n\nexports.typeDefs =\n  { String: { type: String, validate: validateString },\n    Boolean: { type: Boolean, validate: validateBoolean },\n    url: { type: url, validate: validateUrl },\n    Number: { type: Number, validate: validateNumber },\n    path: { type: path, validate: validatePath },\n    Stream: { type: Stream, validate: validateStream },\n    Date: { type: Date, validate: validateDate },\n  }\n\nfunction nopt (types, shorthands, args, slice) {\n  args = args || process.argv\n  types = types || {}\n  shorthands = shorthands || {}\n  if (typeof slice !== 'number') {\n    slice = 2\n  }\n\n  debug(types, shorthands, args, slice)\n\n  args = args.slice(slice)\n  var data = {}\n  var argv = {\n    remain: [],\n    cooked: args,\n    original: args.slice(0),\n  }\n\n  parse(args, data, argv.remain, types, shorthands)\n  // now data is full\n  clean(data, types, exports.typeDefs)\n  data.argv = argv\n  Object.defineProperty(data.argv, 'toString', { value: function () {\n    return this.original.map(JSON.stringify).join(' ')\n  },\n  enumerable: false })\n  return data\n}\n\nfunction clean (data, types, typeDefs) {\n  typeDefs = typeDefs || exports.typeDefs\n  var remove = {}\n  var typeDefault = [false, true, null, String, Array]\n\n  Object.keys(data).forEach(function (k) {\n    if (k === 'argv') {\n      return\n    }\n    var val = data[k]\n    var isArray = Array.isArray(val)\n    var type = types[k]\n    if (!isArray) {\n      val = [val]\n    }\n    if (!type) {\n      type = typeDefault\n    }\n    if (type === Array) {\n      type = typeDefault.concat(Array)\n    }\n    if (!Array.isArray(type)) {\n      type = [type]\n    }\n\n    debug('val=%j', val)\n    debug('types=', type)\n    val = val.map(function (v) {\n      // if it's an unknown value, then parse false/true/null/numbers/dates\n      if (typeof v === 'string') {\n        debug('string %j', v)\n        v = v.trim()\n        if ((v === 'null' && ~type.indexOf(null))\n            || (v === 'true' &&\n               (~type.indexOf(true) || ~type.indexOf(Boolean)))\n            || (v === 'false' &&\n               (~type.indexOf(false) || ~type.indexOf(Boolean)))) {\n          v = JSON.parse(v)\n          debug('jsonable %j', v)\n        } else if (~type.indexOf(Number) && !isNaN(v)) {\n          debug('convert to number', v)\n          v = +v\n        } else if (~type.indexOf(Date) && !isNaN(Date.parse(v))) {\n          debug('convert to date', v)\n          v = new Date(v)\n        }\n      }\n\n      if (!Object.prototype.hasOwnProperty.call(types, k)) {\n        return v\n      }\n\n      // allow `--no-blah` to set 'blah' to null if null is allowed\n      if (v === false && ~type.indexOf(null) &&\n          !(~type.indexOf(false) || ~type.indexOf(Boolean))) {\n        v = null\n      }\n\n      var d = {}\n      d[k] = v\n      debug('prevalidated val', d, v, types[k])\n      if (!validate(d, k, v, types[k], typeDefs)) {\n        if (exports.invalidHandler) {\n          exports.invalidHandler(k, v, types[k], data)\n        } else if (exports.invalidHandler !== false) {\n          debug('invalid: ' + k + '=' + v, types[k])\n        }\n        return remove\n      }\n      debug('validated v', d, v, types[k])\n      return d[k]\n    }).filter(function (v) {\n      return v !== remove\n    })\n\n    // if we allow Array specifically, then an empty array is how we\n    // express 'no value here', not null.  Allow it.\n    if (!val.length && type.indexOf(Array) === -1) {\n      debug('VAL HAS NO LENGTH, DELETE IT', val, k, type.indexOf(Array))\n      delete data[k]\n    } else if (isArray) {\n      debug(isArray, data[k], val)\n      data[k] = val\n    } else {\n      data[k] = val[0]\n    }\n\n    debug('k=%s val=%j', k, val, data[k])\n  })\n}\n\nfunction validateString (data, k, val) {\n  data[k] = String(val)\n}\n\nfunction validatePath (data, k, val) {\n  if (val === true) {\n    return false\n  }\n  if (val === null) {\n    return true\n  }\n\n  val = String(val)\n\n  var isWin = process.platform === 'win32'\n  var homePattern = isWin ? /^~(\\/|\\\\)/ : /^~\\//\n  var home = os.homedir()\n\n  if (home && val.match(homePattern)) {\n    data[k] = path.resolve(home, val.slice(2))\n  } else {\n    data[k] = path.resolve(val)\n  }\n  return true\n}\n\nfunction validateNumber (data, k, val) {\n  debug('validate Number %j %j %j', k, val, isNaN(val))\n  if (isNaN(val)) {\n    return false\n  }\n  data[k] = +val\n}\n\nfunction validateDate (data, k, val) {\n  var s = Date.parse(val)\n  debug('validate Date %j %j %j', k, val, s)\n  if (isNaN(s)) {\n    return false\n  }\n  data[k] = new Date(val)\n}\n\nfunction validateBoolean (data, k, val) {\n  if (val instanceof Boolean) {\n    val = val.valueOf()\n  } else if (typeof val === 'string') {\n    if (!isNaN(val)) {\n      val = !!(+val)\n    } else if (val === 'null' || val === 'false') {\n      val = false\n    } else {\n      val = true\n    }\n  } else {\n    val = !!val\n  }\n  data[k] = val\n}\n\nfunction validateUrl (data, k, val) {\n  // Changing this would be a breaking change in the npm cli\n  /* eslint-disable-next-line node/no-deprecated-api */\n  val = url.parse(String(val))\n  if (!val.host) {\n    return false\n  }\n  data[k] = val.href\n}\n\nfunction validateStream (data, k, val) {\n  if (!(val instanceof Stream)) {\n    return false\n  }\n  data[k] = val\n}\n\nfunction validate (data, k, val, type, typeDefs) {\n  // arrays are lists of types.\n  if (Array.isArray(type)) {\n    for (let i = 0, l = type.length; i < l; i++) {\n      if (type[i] === Array) {\n        continue\n      }\n      if (validate(data, k, val, type[i], typeDefs)) {\n        return true\n      }\n    }\n    delete data[k]\n    return false\n  }\n\n  // an array of anything?\n  if (type === Array) {\n    return true\n  }\n\n  // Original comment:\n  // NaN is poisonous.  Means that something is not allowed.\n  // New comment: Changing this to an isNaN check breaks a lot of tests.\n  // Something is being assumed here that is not actually what happens in\n  // practice.  Fixing it is outside the scope of getting linting to pass in\n  // this repo. Leaving as-is for now.\n  /* eslint-disable-next-line no-self-compare */\n  if (type !== type) {\n    debug('Poison NaN', k, val, type)\n    delete data[k]\n    return false\n  }\n\n  // explicit list of values\n  if (val === type) {\n    debug('Explicitly allowed %j', val)\n    // if (isArray) (data[k] = data[k] || []).push(val)\n    // else data[k] = val\n    data[k] = val\n    return true\n  }\n\n  // now go through the list of typeDefs, validate against each one.\n  var ok = false\n  var types = Object.keys(typeDefs)\n  for (let i = 0, l = types.length; i < l; i++) {\n    debug('test type %j %j %j', k, val, types[i])\n    var t = typeDefs[types[i]]\n    if (t && (\n      (type && type.name && t.type && t.type.name) ?\n        (type.name === t.type.name) :\n        (type === t.type)\n    )) {\n      var d = {}\n      ok = t.validate(d, k, val) !== false\n      val = d[k]\n      if (ok) {\n        // if (isArray) (data[k] = data[k] || []).push(val)\n        // else data[k] = val\n        data[k] = val\n        break\n      }\n    }\n  }\n  debug('OK? %j (%j %j %j)', ok, k, val, types[types.length - 1])\n\n  if (!ok) {\n    delete data[k]\n  }\n  return ok\n}\n\nfunction parse (args, data, remain, types, shorthands) {\n  debug('parse', args, data, remain)\n\n  var abbrevs = abbrev(Object.keys(types))\n  var shortAbbr = abbrev(Object.keys(shorthands))\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i]\n    debug('arg', arg)\n\n    if (arg.match(/^-{2,}$/)) {\n      // done with keys.\n      // the rest are args.\n      remain.push.apply(remain, args.slice(i + 1))\n      args[i] = '--'\n      break\n    }\n    var hadEq = false\n    if (arg.charAt(0) === '-' && arg.length > 1) {\n      var at = arg.indexOf('=')\n      if (at > -1) {\n        hadEq = true\n        var v = arg.slice(at + 1)\n        arg = arg.slice(0, at)\n        args.splice(i, 1, arg, v)\n      }\n\n      // see if it's a shorthand\n      // if so, splice and back up to re-parse it.\n      var shRes = resolveShort(arg, shorthands, shortAbbr, abbrevs)\n      debug('arg=%j shRes=%j', arg, shRes)\n      if (shRes) {\n        debug(arg, shRes)\n        args.splice.apply(args, [i, 1].concat(shRes))\n        if (arg !== shRes[0]) {\n          i--\n          continue\n        }\n      }\n      arg = arg.replace(/^-+/, '')\n      var no = null\n      while (arg.toLowerCase().indexOf('no-') === 0) {\n        no = !no\n        arg = arg.slice(3)\n      }\n\n      if (abbrevs[arg]) {\n        arg = abbrevs[arg]\n      }\n\n      var argType = types[arg]\n      var isTypeArray = Array.isArray(argType)\n      if (isTypeArray && argType.length === 1) {\n        isTypeArray = false\n        argType = argType[0]\n      }\n\n      var isArray = argType === Array ||\n        isTypeArray && argType.indexOf(Array) !== -1\n\n      // allow unknown things to be arrays if specified multiple times.\n      if (\n        !Object.prototype.hasOwnProperty.call(types, arg) &&\n        Object.prototype.hasOwnProperty.call(data, arg)\n      ) {\n        if (!Array.isArray(data[arg])) {\n          data[arg] = [data[arg]]\n        }\n        isArray = true\n      }\n\n      var val\n      var la = args[i + 1]\n\n      var isBool = typeof no === 'boolean' ||\n        argType === Boolean ||\n        isTypeArray && argType.indexOf(Boolean) !== -1 ||\n        (typeof argType === 'undefined' && !hadEq) ||\n        (la === 'false' &&\n         (argType === null ||\n          isTypeArray && ~argType.indexOf(null)))\n\n      if (isBool) {\n        // just set and move along\n        val = !no\n        // however, also support --bool true or --bool false\n        if (la === 'true' || la === 'false') {\n          val = JSON.parse(la)\n          la = null\n          if (no) {\n            val = !val\n          }\n          i++\n        }\n\n        // also support \"foo\":[Boolean, \"bar\"] and \"--foo bar\"\n        if (isTypeArray && la) {\n          if (~argType.indexOf(la)) {\n            // an explicit type\n            val = la\n            i++\n          } else if (la === 'null' && ~argType.indexOf(null)) {\n            // null allowed\n            val = null\n            i++\n          } else if (!la.match(/^-{2,}[^-]/) &&\n                      !isNaN(la) &&\n                      ~argType.indexOf(Number)) {\n            // number\n            val = +la\n            i++\n          } else if (!la.match(/^-[^-]/) && ~argType.indexOf(String)) {\n            // string\n            val = la\n            i++\n          }\n        }\n\n        if (isArray) {\n          (data[arg] = data[arg] || []).push(val)\n        } else {\n          data[arg] = val\n        }\n\n        continue\n      }\n\n      if (argType === String) {\n        if (la === undefined) {\n          la = ''\n        } else if (la.match(/^-{1,2}[^-]+/)) {\n          la = ''\n          i--\n        }\n      }\n\n      if (la && la.match(/^-{2,}$/)) {\n        la = undefined\n        i--\n      }\n\n      val = la === undefined ? true : la\n      if (isArray) {\n        (data[arg] = data[arg] || []).push(val)\n      } else {\n        data[arg] = val\n      }\n\n      i++\n      continue\n    }\n    remain.push(arg)\n  }\n}\n\nfunction resolveShort (arg, shorthands, shortAbbr, abbrevs) {\n  // handle single-char shorthands glommed together, like\n  // npm ls -glp, but only if there is one dash, and only if\n  // all of the chars are single-char shorthands, and it's\n  // not a match to some other abbrev.\n  arg = arg.replace(/^-+/, '')\n\n  // if it's an exact known option, then don't go any further\n  if (abbrevs[arg] === arg) {\n    return null\n  }\n\n  // if it's an exact known shortopt, same deal\n  if (shorthands[arg]) {\n    // make it an array, if it's a list of words\n    if (shorthands[arg] && !Array.isArray(shorthands[arg])) {\n      shorthands[arg] = shorthands[arg].split(/\\s+/)\n    }\n\n    return shorthands[arg]\n  }\n\n  // first check to see if this arg is a set of single-char shorthands\n  var singles = shorthands.___singles\n  if (!singles) {\n    singles = Object.keys(shorthands).filter(function (s) {\n      return s.length === 1\n    }).reduce(function (l, r) {\n      l[r] = true\n      return l\n    }, {})\n    shorthands.___singles = singles\n    debug('shorthand singles', singles)\n  }\n\n  var chrs = arg.split('').filter(function (c) {\n    return singles[c]\n  })\n\n  if (chrs.join('') === arg) {\n    return chrs.map(function (c) {\n      return shorthands[c]\n    }).reduce(function (l, r) {\n      return l.concat(r)\n    }, [])\n  }\n\n  // if it's an arg abbrev, and not a literal shorthand, then prefer the arg\n  if (abbrevs[arg] && !shorthands[arg]) {\n    return null\n  }\n\n  // if it's an abbr for a shorthand, then use that\n  if (shortAbbr[arg]) {\n    arg = shortAbbr[arg]\n  }\n\n  // make it an array, if it's a list of words\n  if (shorthands[arg] && !Array.isArray(shorthands[arg])) {\n    shorthands[arg] = shorthands[arg].split(/\\s+/)\n  }\n\n  return shorthands[arg]\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}